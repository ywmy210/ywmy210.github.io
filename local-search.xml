<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>CentOS 7 Redis 7 多实例配置</title>
    <link href="/2023/02/13/CentOS-7-Redis-7-%E5%A4%9A%E5%AE%9E%E4%BE%8B%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/02/13/CentOS-7-Redis-7-%E5%A4%9A%E5%AE%9E%E4%BE%8B%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-配置-Redis-7-多实例"><a href="#CentOS-7-配置-Redis-7-多实例" class="headerlink" title="CentOS 7 配置 Redis 7 多实例"></a>CentOS 7 配置 Redis 7 多实例</h1><p>在CentOS 7 中编译安装 Redis 7，并实现单机多实例操作。</p><span id="more"></span><p>如在服务器192.168.10.80的服务器上创建两个redis实例，请求端口为17090，17091。操作如下：</p><h2 id="编译安装redis"><a href="#编译安装redis" class="headerlink" title="编译安装redis"></a>编译安装redis</h2><h3 id="下载redis"><a href="#下载redis" class="headerlink" title="下载redis"></a>下载redis</h3><p>方法，可以从redis官网[1]，下载完直接上传服务器，也可以直接在服务器使用wget下载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/redis/redis/archive/redis-7.0.7.tar.gz<br></code></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><p>解压纹下载的安装包，编译安装，指定安装目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf redis-7.0.7.tar.gz <br><span class="hljs-built_in">cd</span> redis-7.0.7<br>sudo make -j 4 PREFIX=/usr/local/redis-server/ USE_SYSTEMD=<span class="hljs-built_in">yes</span> install<br><span class="hljs-comment"># 指定redis程序安装目录为/usr/local，编译时添加systemd管理编译参数</span><br></code></pre></td></tr></table></figure><p>安装结束，会显示以下提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> src &amp;&amp; make install<br>make[1]: Entering directory `/home/user/upload/redis-7.0.7/src<span class="hljs-string">&#x27;</span><br><span class="hljs-string">    CC Makefile.dep</span><br><span class="hljs-string">make[1]: Leaving directory `/home/user/upload/redis-7.0.7/src&#x27;</span><br>make[1]: Entering directory `/home/ian/upload/redis-7.0.7/src<span class="hljs-string">&#x27;</span><br><span class="hljs-string">rm -rf redis-server redis-sentinel redis-cli redis-benchmark redis-check-rdb redis-check-aof *.o *.gcda *.gcno *.gcov redis.info lcov-html Makefile.dep    </span><br><span class="hljs-string">CC cli_common.o</span><br><span class="hljs-string">    CC redis-benchmark.o</span><br><span class="hljs-string">    LINK redis-server</span><br><span class="hljs-string">    INSTALL redis-sentinel</span><br><span class="hljs-string">    INSTALL redis-check-rdb</span><br><span class="hljs-string">    INSTALL redis-check-aof</span><br><span class="hljs-string">    LINK redis-benchmark</span><br><span class="hljs-string">    LINK redis-cli</span><br><span class="hljs-string">------ 省略输出 -------</span><br><span class="hljs-string">Hint: It&#x27;</span>s a good idea to run <span class="hljs-string">&#x27;make test&#x27;</span> ;)<br><br>    INSTALL redis-server<br>    INSTALL redis-benchmark<br>    INSTALL redis-cli<br>make[1]: Leaving directory `/home/user/upload/redis-7.0.7/src<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>编译出错了，也可以使用以下命令来清除编译文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make distclean<br></code></pre></td></tr></table></figure><p>如果有提示systemd相关的报错，需要安装依赖。主要的依赖是systemd-devel。其它的依赖，比如python3和tcl也可一并安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install python3 tcl systemd-devel<br></code></pre></td></tr></table></figure><p>tcl包在make test时会用到。</p><h3 id="配置多实例"><a href="#配置多实例" class="headerlink" title="配置多实例"></a>配置多实例</h3><p>在上一步，已经装redis程序安装到&#x2F;usr&#x2F;local&#x2F;redis-server&#x2F;目录中。接下来，需要分别配置两人个实例，创建两人个实例配置文件，数据存储路径，日志等。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">mkdir</span> -p /usr/local/redis-server/&#123;17090,17091&#125;/&#123;etc,logs,data,run&#125;<br></code></pre></td></tr></table></figure><h4 id="配置实例17090"><a href="#配置实例17090" class="headerlink" title="配置实例17090"></a>配置实例17090</h4><p>从编译目录下复制redis的config文件到实例17090的配置目录中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">cp</span> redis.config /usr/local/redis-server/17090/etc/17090.conf<br></code></pre></td></tr></table></figure><p>修改实例17090的配置文件，主要修改参数如下：</p><ul><li>bind 0.0.0.0</li><li>port 17090</li><li>dbfilename dump17090.rdb</li><li>dir &#x2F;usr&#x2F;local&#x2F;redis-server&#x2F;17090&#x2F;data&#x2F;</li><li>pidfile &#x2F;usr&#x2F;local&#x2F;redis-server&#x2F;17090&#x2F;run&#x2F;redis_17090.pid</li><li>logfile “&#x2F;usr&#x2F;local&#x2F;redis-server&#x2F;17090&#x2F;log&#x2F;redis-17090.log”</li><li>supervised systemd </li><li>requirepass your_secret_password</li></ul><h4 id="配置实例17091"><a href="#配置实例17091" class="headerlink" title="配置实例17091"></a>配置实例17091</h4><p>从编译目录下复制redis的config文件到实例17091的配置目录中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">cp</span> redis.config /usr/local/redis-server/17091/etc/17091.conf<br></code></pre></td></tr></table></figure><p>修改实例17090的配置文件，主要修改参数如下：</p><ul><li>bind 0.0.0.0</li><li>port 17091</li><li>dbfilename dump17091.rdb</li><li>dir &#x2F;usr&#x2F;local&#x2F;redis-server&#x2F;17091&#x2F;data&#x2F;</li><li>pidfile &#x2F;usr&#x2F;local&#x2F;redis-server&#x2F;17091&#x2F;run&#x2F;redis_17091.pid</li><li>logfile “&#x2F;usr&#x2F;local&#x2F;redis-server&#x2F;17091&#x2F;log&#x2F;redis-17091.log”</li><li>supervised systemd </li><li>requirepass your_secret_password</li></ul><h4 id="启动两个实例"><a href="#启动两个实例" class="headerlink" title="启动两个实例"></a>启动两个实例</h4><p>启动实例17090</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo /usr/local/redis-server/bin/redis-server /usr/local/redis-server/17090/etc/17090.conf &amp;<br></code></pre></td></tr></table></figure><p>启动实例17091</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo /usr/local/redis-server/bin/redis-server /usr/local/redis-server/17091/etc/17091.conf &amp;<br></code></pre></td></tr></table></figure><h4 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo firewall-cmd --permanent --add-port=17090/tcp<br>sudo firewall-cmd --permanent --add-port=17091/tcp<br>sudo firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><p>接下来看一下两个实例的进程输出如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ps aux | grep redis<br>root     20815  0.0  0.1 241392  4580 pts/0    S    21:20   0:00 sudo /usr/local/redis-server/bin/redis-server /usr/local/redis-server/17090/etc/17090.conf<br>root     20817  0.0  0.2 196200  9208 pts/0    Sl   21:20   0:02 /usr/local/redis-server/bin/redis-server 0.0.0.0:17090<br>root     21008  0.0  0.1 241392  4588 pts/0    S    21:29   0:00 sudo /usr/local/redis-server/bin/redis-server /usr/local/redis-server/17091/etc/17091.conf<br>root     21010  0.0  0.2 196200  9184 pts/0    Sl   21:29   0:02 /usr/local/redis-server/bin/redis-server 0.0.0.0:17091<br>user     21348  0.0  0.0 112812   948 pts/0    S+   22:13   0:00 grep --color=auto redis<br></code></pre></td></tr></table></figure><p>至些服务器多实例配置结束，还缺少一个systemd的管理配置文件。选挖个坑，后面有时间补上。以上配置，记录备忘。</p><p>[1] <a href="https://redis.io/download/">https://redis.io/download/</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>linux</tag>
      
      <tag>redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 7 基础环境搭建</title>
    <link href="/2022/11/24/centos-7-%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/11/24/centos-7-%E5%9F%BA%E7%A1%80%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-基础环境搭建"><a href="#CentOS-7-基础环境搭建" class="headerlink" title="CentOS 7 基础环境搭建"></a>CentOS 7 基础环境搭建</h1><p>在CentOS 7 初步服务配置之后，离一个正式部署应用的环境依然还有很多事情需要做。例如，nginx，jdk，redis，开发环境等，接下来，我们尝试在CentOS 7下编译安装nginx，redis，jdk。</p><h2 id="开发环境包"><a href="#开发环境包" class="headerlink" title="开发环境包"></a>开发环境包</h2><p>如果需要一个简单的编译环境，在完成更新之后，可安装这些包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install make automake gcc gcc-c++ kernel-devel<br><span class="hljs-comment"># debain 系</span><br>sudo apt install make automake gcc gcc-c++ kernel-devel<br></code></pre></td></tr></table></figure><p>想要大而全，我们可以直接批量安装开发工具集：</p><div class="note note-error">            <p>group install 安装过程中可能存在<br>Warning: Group development does not have any packages to install.<br>Maybe run: yum groups mark install (see man yum)<br>No packages in any requested group available to install or updateMaybe run: yum groups mark install (see man yum)<br>Error: No packages in any requested group available to install or update.<br>相关的报错，具体安装见下操作。</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum clean all <br>sudo yum <span class="hljs-built_in">groups</span> list<br>sudo yum <span class="hljs-built_in">groups</span> install <span class="hljs-string">&quot;Development Tools&quot;</span><br><span class="hljs-comment"># 也许需要用上这几行命令</span><br>sudo yum <span class="hljs-built_in">groups</span> list hidden<br>sudo yum <span class="hljs-built_in">groups</span> info <span class="hljs-string">&#x27;Development Tools&#x27;</span><br>sudo yum <span class="hljs-built_in">groups</span> install <span class="hljs-string">&quot;Development Tools&quot;</span><br><span class="hljs-comment"># 或者是下面的</span><br>sudo yum groupinstall <span class="hljs-string">&quot;Development Tools&quot;</span> --<span class="hljs-built_in">setopt</span>=group_package_types=mandatory,default,optional<br><span class="hljs-comment"># 再或者</span><br>yum <span class="hljs-built_in">groups</span> mark install <span class="hljs-string">&quot;Development Tools&quot;</span><br>yum <span class="hljs-built_in">groups</span> mark convert <span class="hljs-string">&quot;Development Tools&quot;</span><br>yum groupinstall <span class="hljs-string">&quot;Development Tools&quot;</span><br><span class="hljs-comment"># 安装完了，再补上下面的</span><br>sudo yum install make automake gcc gcc-c++ kernel-devel<br></code></pre></td></tr></table></figure><p>anyway，这个已经是70+程序包的大集合了。绝对的是超大包。</p><p>再补充一个阿里云的EPEL源。操作见下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo<br>yum makecache<br></code></pre></td></tr></table></figure><p>对于debain系的。可以运行下面命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install build-essential<br></code></pre></td></tr></table></figure><h2 id="编译安装nginx"><a href="#编译安装nginx" class="headerlink" title="编译安装nginx"></a>编译安装nginx</h2><h3 id="默认安装"><a href="#默认安装" class="headerlink" title="默认安装"></a>默认安装</h3><p>这个实践我们可以查看nginx默认安装相关的模块，默认安装之前，同样需要安装nginx相关的依赖。</p><p>1、linux内核版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -a<br>Linux haproxy-node-b 3.10.0-1160.80.1.el7.x86_64 <span class="hljs-comment">#1 SMP Tue Nov 8 15:48:59 UTC 2022 x86_64 x86_64 x86_64 GNU/Linux</span><br></code></pre></td></tr></table></figure><p>2、GCC编译器<br>GCC（GNU Compiler Collection）可用来编译C语言程序。Nginx不会直接提供二进制可执行程序,只能下载源码进行编译。</p><p>3、PCRE库<br>PCRE（Perl Compatible Regular Expressions，Perl兼容正则表达式）是由Philip Hazel开发的函数库，目前为很多软件所使用，该库支持正则表达式。</p><p>4、zlib库<br>zlib库用于对HTTP包的内容做gzip格式的压缩，如果我们在nginx.conf里配置了gzip on，并指定对于某些类型（content-type）的HTTP响应使用gzip来进行压缩以减少网络传输量。</p><p>5、OpenSSL开发库<br>如果我们的服务器不只是要支持HTTP，还需要在更安全的SSL协议上传输HTTP，那么就需要拥有OpenSSL了。另外，如果我们想使用MD5、SHA1等散列函数，那么也需要安装它。<br>上面几个库都是Nginx 基础功能所必需的，为简单起见我们可以通过yum 命令统一安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install make zlib zlib-devel gcc-c++ libtool openssl openssl-devel pcre pcre-devel -y<br></code></pre></td></tr></table></figure><p>6、安装nginx</p><p>nginx 下载官网<a href="https://nginx.org/en/download.html">链接</a>，目前的稳定版版本已经到了1.22.1。使用命令下载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://nginx.org/download/nginx-1.22.1.tar.gz<br></code></pre></td></tr></table></figure><p>下载完成后，解压源码程序包，默认安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf nginx-1.22.1.tar.gz -C /usr/local/src/<br><span class="hljs-built_in">cd</span> /usr/local/src/nginx-1.22.1/<br><span class="hljs-comment"># 编译参数默认安装</span><br>[root@haproxy-node-b nginx-1.22.1]<span class="hljs-comment"># ./configure </span><br>checking <span class="hljs-keyword">for</span> OS<br> + Linux 3.10.0-1160.80.1.el7.x86_64 x86_64<br>checking <span class="hljs-keyword">for</span> C compiler ... found<br> + using GNU C compiler<br> + gcc version: 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) <br>checking <span class="hljs-keyword">for</span> gcc -pipe switch ... found<br>checking <span class="hljs-keyword">for</span> -Wl,-E switch ... found<br>checking <span class="hljs-keyword">for</span> gcc <span class="hljs-built_in">builtin</span> atomic operations ... found<br>checking <span class="hljs-keyword">for</span> C99 variadic macros ... found<br>checking <span class="hljs-keyword">for</span> gcc variadic macros ... found<br>checking <span class="hljs-keyword">for</span> gcc <span class="hljs-built_in">builtin</span> 64 bit byteswap ... found<br>checking <span class="hljs-keyword">for</span> unistd.h ... found<br>checking <span class="hljs-keyword">for</span> inttypes.h ... found<br>checking <span class="hljs-keyword">for</span> limits.h ... found<br>checking <span class="hljs-keyword">for</span> sys/filio.h ... not found<br>.............省略........................<br>checking <span class="hljs-keyword">for</span> zlib library ... found<br>creating objs/Makefile<br><br>Configuration summary<br>  + using system PCRE library<br>  + OpenSSL library is not used<br>  + using system zlib library<br><br>  nginx path prefix: <span class="hljs-string">&quot;/usr/local/nginx&quot;</span><br>  nginx binary file: <span class="hljs-string">&quot;/usr/local/nginx/sbin/nginx&quot;</span><br>  nginx modules path: <span class="hljs-string">&quot;/usr/local/nginx/modules&quot;</span><br>  nginx configuration prefix: <span class="hljs-string">&quot;/usr/local/nginx/conf&quot;</span><br>  nginx configuration file: <span class="hljs-string">&quot;/usr/local/nginx/conf/nginx.conf&quot;</span><br>  nginx pid file: <span class="hljs-string">&quot;/usr/local/nginx/logs/nginx.pid&quot;</span><br>  nginx error <span class="hljs-built_in">log</span> file: <span class="hljs-string">&quot;/usr/local/nginx/logs/error.log&quot;</span><br>  nginx http access <span class="hljs-built_in">log</span> file: <span class="hljs-string">&quot;/usr/local/nginx/logs/access.log&quot;</span><br>  nginx http client request body temporary files: <span class="hljs-string">&quot;client_body_temp&quot;</span><br>  nginx http proxy temporary files: <span class="hljs-string">&quot;proxy_temp&quot;</span><br>  nginx http fastcgi temporary files: <span class="hljs-string">&quot;fastcgi_temp&quot;</span><br>  nginx http uwsgi temporary files: <span class="hljs-string">&quot;uwsgi_temp&quot;</span><br>  nginx http scgi temporary files: <span class="hljs-string">&quot;scgi_temp&quot;</span><br><br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><p>默认安装可以查看编译模块信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b sbin]<span class="hljs-comment"># ./nginx -V</span><br>nginx version: nginx/1.20.2<br>built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) <br>configure arguments:<br></code></pre></td></tr></table></figure><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><p>如果有对nginx的其它模块需求，可以在编译过程中添加具体的编译参数。程序目录中使用<span class="label label-info">./configure --help</span>查看nginx的编译参数。</p><div class="note note-warnning">            <p>重新编译后，执行mark，mark install覆盖安装。在重新编译安装前，建议对之前的配置文件进行备份。</p>          </div><p>在重新编译参数后，编译过程如遇到依赖问题，直接yum安装对应的程序包即可。重新编译安装过的程序，安装后，再次查看编译的模块信息，如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b nginx]<span class="hljs-comment"># ./sbin/nginx -V</span><br>nginx version: nginx/1.20.2<br>built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) <br>built with OpenSSL 1.0.2k-fips  26 Jan 2017<br>TLS SNI support enabled<br>configure arguments: --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_geoip_module --with-http_flv_module --with-http_mp4_module --with-http_gzip_static_module<br></code></pre></td></tr></table></figure><h3 id="编译引用指定模块"><a href="#编译引用指定模块" class="headerlink" title="编译引用指定模块"></a>编译引用指定模块</h3><p>通过查看nginx的编译参数，我们可以看到，可以手动指定模块的引用。以下实践编译安装OpenSSL,Pcre,Zlib。再指定nginx编译模块路径。</p><h4 id="编译安装OpenSSL"><a href="#编译安装OpenSSL" class="headerlink" title="编译安装OpenSSL"></a>编译安装OpenSSL</h4><p>OpenSSL最新的稳定版本是支持到2026年9月7日的3.0系列。这也是一个长期支持(LTS)版本。之前的LTS版本（1.1.1 系列）也可用并支持到2023年9月11日。</p><h5 id="下载OpenSSL"><a href="#下载OpenSSL" class="headerlink" title="下载OpenSSL"></a>下载OpenSSL</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b tools]<span class="hljs-comment"># wget https://www.openssl.org/source/openssl-3.0.7.tar.gz</span><br>--2022-11-25 16:29:45--  https://www.openssl.org/source/openssl-3.0.7.tar.gz<br>Resolving www.openssl.org (www.openssl.org)... 23.76.66.203, 2600:1417:e800:186::c1e, 2600:1417:e800:182::c1e<br>Connecting to www.openssl.org (www.openssl.org)|23.76.66.203|:443... connected.<br>HTTP request sent, awaiting response... 200 OK<br>Length: 15107575 (14M) [application/x-gzip]<br>Saving to: ‘openssl-3.0.7.tar.gz’<br><br>100%[======================================&gt;] 15,107,575  7.42MB/s   <span class="hljs-keyword">in</span> 1.9s   <br><br>2022-11-25 16:29:47 (7.42 MB/s) - ‘openssl-3.0.7.tar.gz’ saved [15107575/15107575]<br></code></pre></td></tr></table></figure><p>即便是OpenSSL的3.0.0版本，也是存在漏洞的。在3.0.2版本解决了openssl出现拒绝服务漏洞【CVE-2022-0778】。</p><p>CentOS 7 系统默认的OpenSSL版本为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">openssl version -a<br>OpenSSL 1.0.2k-fips  26 Jan 2017<br>built on: reproducible build, <span class="hljs-built_in">date</span> unspecified<br>platform: linux-x86_64<br>options:  bn(64,64) md2(int) rc4(8x,char) des(idx,cisc,16,int) idea(int) blowfish(idx) <br>compiler: gcc -I. -I.. -I../include  -fPIC -DOPENSSL_PIC -DZLIB -DOPENSSL_THREADS -D_REENTRANT -DDSO_DLFCN -DHAVE_DLFCN_H -DKRB5_MIT -m64 -DL_ENDIAN -Wall -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches   -m64 -mtune=generic -Wa,--noexecstack -DPURIFY -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DRC4_ASM -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DMD5_ASM -DAES_ASM -DVPAES_ASM -DBSAES_ASM -DWHIRLPOOL_ASM -DGHASH_ASM -DECP_NISTZ256_ASM<br>OPENSSLDIR: <span class="hljs-string">&quot;/etc/pki/tls&quot;</span><br>engines:  dynamic<br></code></pre></td></tr></table></figure><h5 id="编译和安装OpenSSL"><a href="#编译和安装OpenSSL" class="headerlink" title="编译和安装OpenSSL"></a>编译和安装OpenSSL</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install perl-IPC-Cmd pcre pcre-devel -y<br><br><span class="hljs-built_in">cd</span> /usr/local/src/openssl-3.0.7/<br>./config --prefix=/usr/local/openssl3 --openssldir=/usr/local/openssl3 shared zlib<br>make<br>make install<br></code></pre></td></tr></table></figure><h5 id="配置链接库"><a href="#配置链接库" class="headerlink" title="配置链接库"></a>配置链接库</h5><p>1、在目录<span class="label label-info">/etc/ld.so.conf.d</span>下创建一个名为openssl-3.conf的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/ld.so.conf.d/<br>vim openssl-3.conf<br><span class="hljs-comment"># 文件内容</span><br>/usr/local/openssl3/lib64<br></code></pre></td></tr></table></figure><p>2、创建软链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /usr/local/openssl3/lib64/libssl.so.3 /usr/lib64/<br><span class="hljs-built_in">ln</span> -s /usr/local/openssl3/lib64/libcrypto.so.3 /usr/lib64/<br></code></pre></td></tr></table></figure><p>如果已存在(file exist),则进行覆盖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /usr/local/openssl3/lib64/libssl.so.3 /usr/lib64/<br><span class="hljs-built_in">ln</span> -s /usr/local/openssl3/lib64/libcrypto.so.3 /usr/lib64/<br></code></pre></td></tr></table></figure><h5 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h5><p>备份原有的openssl版本。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bsh">mv /usr/bin/openssl /usr/bin/openssl.backup<br></code></pre></td></tr></table></figure><p>创建环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/profile.d/openssl.sh<br><span class="hljs-comment"># 变量内容</span><br><span class="hljs-comment">#Set OPENSSL_PATH</span><br>OPENSSL_PATH=<span class="hljs-string">&quot;/usr/local/openssl3/bin&quot;</span><br><span class="hljs-built_in">export</span> OPENSSL_PATH<br>PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$OPENSSL_PATH</span><br><span class="hljs-built_in">export</span> PATH<br><span class="hljs-comment"># 重新引用环境变量</span><br><span class="hljs-built_in">source</span> /etc/profile.d/openssl.sh<br></code></pre></td></tr></table></figure><p>检查OpenSSL位置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b ~]<span class="hljs-comment"># which openssl</span><br>/usr/local/openssl3/bin/openssl<br></code></pre></td></tr></table></figure><p>再次检查系统配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b ~]<span class="hljs-comment"># openssl version -a</span><br>OpenSSL 3.0.7 1 Nov 2022 (Library: OpenSSL 3.0.7 1 Nov 2022)<br>built on: Fri Nov 25 12:48:28 2022 UTC<br>platform: linux-x86_64<br>options:  bn(64,64)<br>compiler: gcc -fPIC -pthread -m64 -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DZLIB -DNDEBUG<br>OPENSSLDIR: <span class="hljs-string">&quot;/usr/local/openssl3&quot;</span><br>ENGINESDIR: <span class="hljs-string">&quot;/usr/local/openssl3/lib64/engines-3&quot;</span><br>MODULESDIR: <span class="hljs-string">&quot;/usr/local/openssl3/lib64/ossl-modules&quot;</span><br>Seeding <span class="hljs-built_in">source</span>: os-specific<br>CPUINFO: OPENSSL_ia32cap=0xfffa32035f8bffff:0x7a9<br></code></pre></td></tr></table></figure><p>手动编译OpenSSL升级结束。</p><h4 id="安装PCRE"><a href="#安装PCRE" class="headerlink" title="安装PCRE"></a>安装PCRE</h4><h5 id="下载PCRE"><a href="#下载PCRE" class="headerlink" title="下载PCRE"></a>下载PCRE</h5><p>PCRE源码托管在<a href="https://sourceforge.net/">sourcefouge</a>上，直接搜索下载即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://sourceforge.net/projects/pcre/files/pcre/8.45/pcre-8.45.zip<br>unzip pcre-8.45.zip <br><span class="hljs-built_in">mv</span> pcre-8.45 /usr/local/src/<br></code></pre></td></tr></table></figure><h5 id="编译安装PCRE"><a href="#编译安装PCRE" class="headerlink" title="编译安装PCRE"></a>编译安装PCRE</h5><p>解压的源码在&#x2F;usr&#x2F;local&#x2F;src&#x2F;目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/local/src/pcre-8.45/<br>./configure<br><br><span class="hljs-comment"># 默认的编译路径</span><br><span class="hljs-comment"># By default, `make install&#x27; will install all the files in `/usr/local/bin&#x27;, `/usr/local/lib&#x27; etc. </span><br><br>make <br>make install<br></code></pre></td></tr></table></figure><h4 id="编译安装zlib"><a href="#编译安装zlib" class="headerlink" title="编译安装zlib"></a>编译安装zlib</h4><p>下载zlib，最新的版本，zlib-1.2.13</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://zlib.net/zlib-1.2.13.tar.gz<br>tar -zxvf zlib-1.2.13.tar.gz -C /usr/local/src/<br></code></pre></td></tr></table></figure><p>编译安装zlib</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/local/src/zlib-1.2.13/<br>./configure<br>make <br>make install<br></code></pre></td></tr></table></figure><h4 id="指定模块路径安装nginx"><a href="#指定模块路径安装nginx" class="headerlink" title="指定模块路径安装nginx"></a>指定模块路径安装nginx</h4><p>以上，PCRE，OpenSSL,Zlib的模块源码均在&#x2F;usr&#x2F;local&#x2F;src目录下，我们在编译nginx的时候，指定对应的模块路径即可。操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b nginx-1.20.2]<span class="hljs-comment"># ./configure \</span><br>&gt; --with-http_ssl_module \<br>&gt; --with-http_v2_module \<br>&gt; --with-http_realip_module \<br>&gt; --with-http_geoip_module \<br>&gt; --with-http_flv_module \<br>&gt; --with-http_mp4_module \<br>&gt; --with-http_gzip_static_module \<br>&gt; --with-pcre=/usr/local/src/pcre-8.45 \<br>&gt; --with-zlib=/usr/local/src/zlib-1.2.13<br>&gt; --with-openssl=/usr/local/src/openssl-3.0.7<br><br><span class="hljs-comment"># 输出示例：</span><br><br>checking <span class="hljs-keyword">for</span> OS<br> + Linux 3.10.0-1160.80.1.el7.x86_64 x86_64<br>checking <span class="hljs-keyword">for</span> C compiler ... found<br> + using GNU C compiler<br> + gcc version: 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) <br>.............省略...............<br>Configuration summary<br>  + using PCRE library: /usr/local/src/pcre-8.45<br>  + using OpenSSL library: /usr/local/src/openssl-3.0.7<br>  + using zlib library: /usr/local/src/zlib-1.2.13<br><br>  nginx path prefix: <span class="hljs-string">&quot;/usr/local/nginx&quot;</span><br>  nginx binary file: <span class="hljs-string">&quot;/usr/local/nginx/sbin/nginx&quot;</span><br>  nginx modules path: <span class="hljs-string">&quot;/usr/local/nginx/modules&quot;</span><br>  nginx configuration prefix: <span class="hljs-string">&quot;/usr/local/nginx/conf&quot;</span><br>  nginx configuration file: <span class="hljs-string">&quot;/usr/local/nginx/conf/nginx.conf&quot;</span><br>  nginx pid file: <span class="hljs-string">&quot;/usr/local/nginx/logs/nginx.pid&quot;</span><br>  nginx error <span class="hljs-built_in">log</span> file: <span class="hljs-string">&quot;/usr/local/nginx/logs/error.log&quot;</span><br>  nginx http access <span class="hljs-built_in">log</span> file: <span class="hljs-string">&quot;/usr/local/nginx/logs/access.log&quot;</span><br>  nginx http client request body temporary files: <span class="hljs-string">&quot;client_body_temp&quot;</span><br>  nginx http proxy temporary files: <span class="hljs-string">&quot;proxy_temp&quot;</span><br>  nginx http fastcgi temporary files: <span class="hljs-string">&quot;fastcgi_temp&quot;</span><br>  nginx http uwsgi temporary files: <span class="hljs-string">&quot;uwsgi_temp&quot;</span><br>  nginx http scgi temporary files: <span class="hljs-string">&quot;scgi_temp&quot;</span><br><br><span class="hljs-comment"># 编译安装</span><br>make <br>make install<br></code></pre></td></tr></table></figure><p>再次查看对比之前默认安装，编译安装，和手动指定模块安装输出的编译结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b nginx]<span class="hljs-comment"># ./sbin/nginx -V</span><br>nginx version: nginx/1.20.2<br>built by gcc 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC) <br>built with OpenSSL 3.0.7 1 Nov 2022<br>TLS SNI support enabled<br>configure arguments: --with-http_ssl_module --with-http_v2_module --with-http_realip_module --with-http_geoip_module --with-http_flv_module --with-http_mp4_module --with-http_gzip_static_module --with-pcre=/usr/local/src/pcre-8.45 --with-zlib=/usr/local/src/zlib-1.2.13 --with-openssl=/usr/local/src/openssl-3.0.7<br></code></pre></td></tr></table></figure><p>至此编译安装nginx结束了。</p><h3 id="nginx-自启动配置"><a href="#nginx-自启动配置" class="headerlink" title="nginx 自启动配置"></a>nginx 自启动配置</h3><p>在<span class="label label-info">/usr/local/sbin</span>下创建软链接指向nginx的安装目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ln</span> -s /usr/local/nginx/sbin/nginx /usr/local/sbin/<br></code></pre></td></tr></table></figure><h4 id="nginx常用的控制命令"><a href="#nginx常用的控制命令" class="headerlink" title="nginx常用的控制命令"></a>nginx常用的控制命令</h4><p>运行nginx程序相关的控制命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 测试配置文件</span><br>[root@haproxy-node-b ~]<span class="hljs-comment"># nginx -t</span><br>nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok<br>nginx: configuration file /usr/local/nginx/conf/nginx.conf <span class="hljs-built_in">test</span> is successful<br><span class="hljs-comment"># 默认启动nginx服务</span><br>[root@haproxy-node-b ~]<span class="hljs-comment"># nginx </span><br>[root@haproxy-node-b ~]<span class="hljs-comment"># ps aux | grep nginx</span><br>root     15930  0.0  0.0  22956   900 ?        Ss   23:37   0:00 nginx: master process nginx<br>nobody   15931  0.0  0.0  23412  1608 ?        S    23:37   0:00 nginx: worker process<br>root     15933  0.0  0.0 112812   980 pts/0    S+   23:37   0:00 grep --color=auto nginx<br><span class="hljs-comment"># 停止nginx服务</span><br>[root@haproxy-node-b ~]<span class="hljs-comment"># nginx -s stop</span><br>[root@haproxy-node-b ~]<span class="hljs-comment"># ps aux | grep nginx</span><br>root     15937  0.0  0.0 112812   976 pts/0    S+   23:38   0:00 grep --color=auto nginx<br><span class="hljs-comment"># 优雅停止</span><br>[root@haproxy-node-b ~]<span class="hljs-comment"># nginx -s quit</span><br><span class="hljs-comment"># 指定配置文件启动</span><br>[root@haproxy-node-b ~]<span class="hljs-comment"># nginx -c /usr/local/nginx/conf/nginx.conf</span><br><span class="hljs-comment"># 热装配配置文件</span><br>root@haproxy-node-b ~]<span class="hljs-comment"># nginx -s reload</span><br><span class="hljs-comment"># 重新打开nginx日志文件</span><br>nginx -s reopen<br></code></pre></td></tr></table></figure><p>nginx启动时，会生成两种类型的进程，一个是主进程（Master），一个（windows版本的目前只有一个）和多个工作进程（Worker）。主进程并不处理网络请求，主要负责调度工作进程，也就是图示的三项：加载配置、启动工作进程及非停升级。所以，nginx启动以后，查看操作系统的进程列表，我们就能看到至少有两个nginx进程。</p><h4 id="systemctl-nginx-自启动配置"><a href="#systemctl-nginx-自启动配置" class="headerlink" title="systemctl nginx 自启动配置"></a>systemctl nginx 自启动配置</h4><p>配置启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /usr/lib/systemd/system/nginx.service<br>配置项：<br>[Unit]<br>Description=nginx - high performance web server<br>Documentation=https://nginx.org/en/docs/<br>After=network-online.target remote-fs.target<br>Wants=network-online.target<br>[Service]<br>Type=forking<br>PIDFile=/usr/local/nginx/logs/nginx.pid<br>ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf<br>ExecReload=/bin/kill -s HUP <span class="hljs-variable">$MAINPID</span><br>ExecStop=/bin/kill -s TERM <span class="hljs-variable">$MAINPID</span><br>[Install]<br>WantedBy=multi-user.target<br><span class="hljs-comment"># 更新systemd服务</span><br>systemctl daemon-reload<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 启动nginx</span><br>[root@haproxy-node-b system]<span class="hljs-comment"># systemctl start nginx</span><br><span class="hljs-comment"># 查看nginx服务状态</span><br>[root@haproxy-node-b system]<span class="hljs-comment"># systemctl status nginx</span><br>● nginx.service - nginx - high performance web server<br>   Loaded: loaded (/etc/systemd/system/nginx.service; disabled; vendor preset: disabled)<br>   Active: active (running) since Fri 2022-11-25 23:59:16 CST; 1min 54s ago<br>     Docs: https://nginx.org/en/docs/<br>  Process: 16168 ExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf (code=exited, status=0/SUCCESS)<br> Main PID: 16169 (nginx)<br>   CGroup: /system.slice/nginx.service<br>           ├─16169 nginx: master process /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf<br>           └─16170 nginx: worker process<br><br>Nov 25 23:59:16 haproxy-node-b systemd[1]: Starting nginx - high performance web server...<br>Nov 25 23:59:16 haproxy-node-b systemd[1]: Started nginx - high performance web server.<br><span class="hljs-comment"># 停止nginx服务</span><br>systemctl stop nginx<br><span class="hljs-comment"># 重新装载nginx服务</span><br>systemctl restart nginx<br><span class="hljs-comment"># 自启动nginx服务</span><br>[root@haproxy-node-b system]<span class="hljs-comment"># systemctl enable nginx</span><br>Created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /etc/systemd/system/nginx.service.<br><br><span class="hljs-comment"># 取消自启动服务</span><br>systemctl <span class="hljs-built_in">disable</span> nginx<br></code></pre></td></tr></table></figure><h2 id="安装JDK"><a href="#安装JDK" class="headerlink" title="安装JDK"></a>安装JDK</h2><p>官网下载JDK环境，官网下载<a href="https://www.oracle.com/java/technologies/downloads/">链接</a>,我们部署的选择JAVA 8的最新版本。下载JDK需要登录ORACLE的账号。</p><p>1、解压缩jdk</p><p>我们可以在<span class="label label-info">/usr/local</span>下创建jdk的环境目录。把jdk解压到环境目录中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /usr/local/java<br>tar -zxvf jdk-8u351-linux-x64.tar.gz -C /usr/local/java<br></code></pre></td></tr></table></figure><p>2、配置环境变量</p><p>在<span class="label label-info">/etc/profile.d</span>，创建jdk.sh文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/profile.d/<br>vim java.sh<br><span class="hljs-comment"># 配置内容</span><br><span class="hljs-comment"># set java environment</span><br><span class="hljs-built_in">export</span> JAVA_HOME=/usr/local/java/jdk1.8.0_351<br><span class="hljs-built_in">export</span> JRE_HOME=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/jre<br><span class="hljs-built_in">export</span> CLASSPATH=.:<span class="hljs-variable">$&#123;java_home&#125;</span>/lib:<span class="hljs-variable">$&#123;JRE_HOME&#125;</span>/lib<br><span class="hljs-built_in">export</span> JAVA_PATH=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="hljs-variable">$&#123;JRE_HOME&#125;</span>/bin<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="hljs-variable">$PATH</span><br></code></pre></td></tr></table></figure><p>3、重新引用环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b profile.d]<span class="hljs-comment"># source /etc/profile</span><br>[root@haproxy-node-b profile.d]<span class="hljs-comment"># java -version</span><br>java version <span class="hljs-string">&quot;1.8.0_351&quot;</span><br>Java(TM) SE Runtime Environment (build 1.8.0_351-b10)<br>Java HotSpot(TM) 64-Bit Server VM (build 25.351-b10, mixed mode)<br></code></pre></td></tr></table></figure><p>JDK环境搭建完毕。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>jdk</tag>
      
      <tag>nginx</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 搭建zimbra企业邮箱</title>
    <link href="/2022/11/21/centos-%E6%90%AD%E5%BB%BAzimbra%E4%BC%81%E4%B8%9A%E9%82%AE%E7%AE%B1/"/>
    <url>/2022/11/21/centos-%E6%90%AD%E5%BB%BAzimbra%E4%BC%81%E4%B8%9A%E9%82%AE%E7%AE%B1/</url>
    
    <content type="html"><![CDATA[<h1 id="centos-7-搭建zimbra企业邮箱"><a href="#centos-7-搭建zimbra企业邮箱" class="headerlink" title="centos 7 搭建zimbra企业邮箱"></a>centos 7 搭建zimbra企业邮箱</h1><p>鉴于前面搭建zabbix时，用到的邮件告警信息，由于脚本的那个方法已经不在适用了。所以尝试自己搭建一个邮件系统，来测试关于邮件告警相关的推送。搭建邮件服务器，考虑到使用和部署，以及网络上相关的部署参考信息，选择了zimbra。一个开源的企业级邮件服务。</p><span id="more"></span><h2 id="搭建环境及需求准备"><a href="#搭建环境及需求准备" class="headerlink" title="搭建环境及需求准备"></a>搭建环境及需求准备</h2><p>在搭建一个邮件服务器前，需要有以下准备：</p><p>1、邮件服务程序，这里选择了开源的zimbra<br>2、可用的服务器硬件<br>3、ISP公网出口，以及已经备案的端口（包含不限定80、443、25等）<br>4、已经备案的域名，域名证书的购买</p><p>完成搭建需要的配置项:</p><p>1、公网出口无冲突的服务映射<br>2、zimbra依赖dns服务，需要在服务器上部署dns服务<br>3、处理站内发信的各种错误<br>4、域名A记录，mx记录，txt记录，SFP记录<br>5、处理对外发信的信任问题，即被反垃圾了邮件联盟识别为垃圾邮件退信</p><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><p>操作系统：CentOS Linux release 7.9.2009 (Core)<br>zimbra版本：Zimbra 8.8.12_GA_3844</p><h4 id="停用centos自带的postfix服务"><a href="#停用centos自带的postfix服务" class="headerlink" title="停用centos自带的postfix服务"></a>停用centos自带的postfix服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">disable</span> postfix<br>systemctl stop postfix<br>yum remove postfix<br></code></pre></td></tr></table></figure><h4 id="更新系统和安装程序依赖"><a href="#更新系统和安装程序依赖" class="headerlink" title="更新系统和安装程序依赖"></a>更新系统和安装程序依赖</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum update<br>yum install libidn gmp perl perl-core ntpl nmap sudo sysstat sqlite libaio libstdc++ wget unzip<br></code></pre></td></tr></table></figure><h4 id="更改主机名"><a href="#更改主机名" class="headerlink" title="更改主机名"></a>更改主机名</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">hostnamectl set-hostname mail.ywmy.xyz  <span class="hljs-comment"># 这里设置你的域名，示例参考</span><br>vim /etc/hosts<br><span class="hljs-comment"># 添加主机名</span><br>192.168.10.71   mail.ywmy.xyz mail      <span class="hljs-comment"># 参考示例</span><br></code></pre></td></tr></table></figure><p>更改主机名后，重启服务器。</p><h4 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭selinux</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs routeros">vim /etc/selinux<span class="hljs-built_in">/config</span><br><span class="hljs-built_in"></span><br><span class="hljs-comment"># This file controls the state of SELinux on the system.</span><br><span class="hljs-comment"># SELINUX= can take one of these three values:</span><br><span class="hljs-comment">#     enforcing - SELinux security policy is enforced.</span><br><span class="hljs-comment">#     permissive - SELinux prints warnings instead of enforcing.</span><br><span class="hljs-comment">#     disabled - No SELinux policy is loaded.</span><br><span class="hljs-attribute">SELINUX</span>=disabled    # 配置这里<br><span class="hljs-comment"># SELINUXTYPE= can take one of three two values:</span><br><span class="hljs-comment">#     targeted - Targeted processes are protected,</span><br><span class="hljs-comment">#     minimum - Modification of targeted policy. Only selected processes are protected. </span><br><span class="hljs-comment">#     mls - Multi Level Security protection.</span><br><span class="hljs-attribute">SELINUXTYPE</span>=targeted <br></code></pre></td></tr></table></figure><h2 id="安装zimbra服务程序"><a href="#安装zimbra服务程序" class="headerlink" title="安装zimbra服务程序"></a>安装zimbra服务程序</h2><h3 id="下载程序"><a href="#下载程序" class="headerlink" title="下载程序"></a>下载程序</h3><p>zimbra服务程序的开源版本需要在官方注册后下载。下载的链接[zimbra download][1]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /tmp<br>wget https://files.zimbra.com/downloads/8.8.12_GA/zcs-8.8.12_GA_3794.RHEL7_64.20190329045002.tgz<br></code></pre></td></tr></table></figure><h3 id="安装zimbra服务程序-1"><a href="#安装zimbra服务程序-1" class="headerlink" title="安装zimbra服务程序"></a>安装zimbra服务程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 解压程序包</span><br>tar -xzvf zcs-8.8.12_GA_3794.RHEL7_64.20190329045002.tgz <br><span class="hljs-comment"># 安装程序</span><br><span class="hljs-built_in">cd</span> zcs-8.8.12_GA_3794.RHEL7_64.20190329045002<br>./install.sh<br></code></pre></td></tr></table></figure><p>程序由安装脚本自动执行，选择对应的设置项。zimbra的程序主体大概包含以下各个组件，参考执行程序回示如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@mail zcs-8.8.12_GA_3794.RHEL7_64.20190329045002]<span class="hljs-comment"># ./install.sh </span><br><br>Operations logged to /tmp/install.log.3PNassAP<br>Checking <span class="hljs-keyword">for</span> existing installation...<br>    zimbra-drive...NOT FOUND<br>    zimbra-imapd...NOT FOUND<br>    zimbra-patch...FOUND zimbra-patch-8.8.12.1568982480<br>    zimbra-mta-patch...FOUND zimbra-mta-patch-8.8.12.1552427139<br>    zimbra-proxy-patch...FOUND zimbra-proxy-patch-8.8.12.1554984827<br>    zimbra-license-tools...NOT FOUND<br>    zimbra-license-extension...NOT FOUND<br>    zimbra-network-store...NOT FOUND<br>    zimbra-network-modules-ng...NOT FOUND<br>    zimbra-chat...FOUND zimbra-chat-2.0.3.1559648872-1<br>    zimbra-talk...NOT FOUND<br>    zimbra-ldap...FOUND zimbra-ldap-8.8.12_GA_3794<br>    zimbra-logger...FOUND zimbra-logger-8.8.12_GA_3794<br>    zimbra-mta...FOUND zimbra-mta-8.8.12_GA_3794<br>    zimbra-dnscache...FOUND zimbra-dnscache-8.8.12_GA_3794<br>    zimbra-snmp...FOUND zimbra-snmp-8.8.12_GA_3794<br>    zimbra-store...FOUND zimbra-store-8.8.12_GA_3794<br>    zimbra-apache...FOUND zimbra-apache-8.8.12_GA_3794<br>    zimbra-spell...FOUND zimbra-spell-8.8.12_GA_3794<br>    zimbra-convertd...NOT FOUND<br>    zimbra-memcached...FOUND zimbra-memcached-1.4.37-2<br>    zimbra-proxy...FOUND zimbra-proxy-8.8.12_GA_3794<br>    zimbra-archiving...NOT FOUND<br>    zimbra-core...FOUND zimbra-core-8.8.12_GA_3794<br>ZCS upgrade from 8.8.12 to 8.8.12 will be performed.<br>Validating ldap configuration<br>LDAP validation succeeded.  Continuing.<br><br><br>----------------------------------------------------------------------<br>PLEASE READ THIS AGREEMENT CAREFULLY BEFORE USING THE SOFTWARE.<br>SYNACOR, INC. (<span class="hljs-string">&quot;SYNACOR&quot;</span>) WILL ONLY LICENSE THIS SOFTWARE TO YOU IF YOU<br>FIRST ACCEPT THE TERMS OF THIS AGREEMENT. BY DOWNLOADING OR INSTALLING<br>THE SOFTWARE, OR USING THE PRODUCT, YOU ARE CONSENTING TO BE BOUND BY<br>THIS AGREEMENT. IF YOU DO NOT AGREE TO ALL OF THE TERMS OF THIS<br>AGREEMENT, THEN DO NOT DOWNLOAD, INSTALL OR USE THE PRODUCT.<br><br>License Terms <span class="hljs-keyword">for</span> this Zimbra Collaboration Suite Software:<br>https://www.zimbra.com/license/zimbra-public-eula-2-6.html<br>----------------------------------------------------------------------<br><br><br><br>Do you agree with the terms of the software license agreement? [N] <br></code></pre></td></tr></table></figure><p>如以上，一个已经安装过的zaibra，再次执行安装程序的提示，如已经安装过的组件，提示FOUND，未安装的组件，提示NOT FOUND。在我自己的配置中，zimbra drive这个测试安装后，页面上open drive页面也打不开。所以正式安装的时候，就没有安装这个组件了，除这个外的其它组件都默认安装。</p><p>同意license后，即配置zimbra的源，以及安装程序自动执行配置源，用户，下载组件，安装的过程。在此过程中，还涉及配置域名的配置，大概如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">DNS ERROR resolving MX <span class="hljs-keyword">for</span> mail.ywmy.xyz<br>It is suggested that the domain name have an MX record configured <span class="hljs-keyword">in</span> DNS<br>Change domain name? [Yes]<br>Create domain: [mail.ywmy.xyz] ywmy.xyz<br>        MX: mail.ywmy.xyz<br><br>        Interface: 192.168.10.71<br>        Interface: ::1<br><br><span class="hljs-keyword">done</span>.<br>Checking <span class="hljs-keyword">for</span> port conflicts<br></code></pre></td></tr></table></figure><p>配置完成，完生成安装及组件配置信息。大概如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash">Main menu<br><br>   1) Common Configuration:<br>   2) zimbra-ldap:                             Enabled<br>   3) zimbra-logger:                           Enabled<br>   4) zimbra-mta:                              Enabled<br>   5) zimbra-dnscache:                         Enabled<br>   6) zimbra-snmp:                             Enabled<br>   7) zimbra-store:                            Enabled<br>        +Create Admin User:                    <span class="hljs-built_in">yes</span><br>        +Admin user to create:                 admin@ywmy.xyz<br>******* +Admin Password                        UNSET<br>        +Anti-virus quarantine user:           virus-quarantine.rvwrscjel4@ywmy.xyz<br>        +Enable automated spam training:       <span class="hljs-built_in">yes</span><br>        +Spam training user:                   spam.i6zgq_xfb@ywmy.xyz<br>        +Non-spam(Ham) training user:          ham.kctdkkb_i@ywmy.xyz<br>        +SMTP host:                            mail.ywmy.xyz<br>        +Web server HTTP port:                 8080<br>        +Web server HTTPS port:                8443<br>        +Web server mode:                      https<br>        +IMAP server port:                     7143<br>        +IMAP server SSL port:                 7993<br>        +POP server port:                      7110<br>        +POP server SSL port:                  7995<br>        +Use spell check server:               <span class="hljs-built_in">yes</span><br>        +Spell server URL:                     https://mail.ywmy.xyz:7780/<br>        +Enable version update checks:         TRUE<br>        +Enable version update notifications:  TRUE<br>        +Version update notification email:    admin@ywmy.xyz<br>        +Version update <span class="hljs-built_in">source</span> email:          admin@ywmy.xyz<br>        +Install mailstore (service webapp):   <span class="hljs-built_in">yes</span><br>        +Install UI (zimbra,zimbraAdmin webapps): <span class="hljs-built_in">yes</span><br><br>   8) zimbra-spell:                            Enabled<br>   9) zimbra-proxy:                            Enabled<br>  10) zimbra-imapd:                            Enabled<br>  11) Default Class of Service Configuration:<br>   s) Save config to file<br>   x) Expand menu<br>   q) Quit<br><br>Address unconfigured (**) items  (? - <span class="hljs-built_in">help</span>) 7<br></code></pre></td></tr></table></figure><p>如上，配置默认未设置admin的登录密码。选7后选4，设置admin密码，后按r返回上级菜单，最后按a确认配置，zimbra系统即可配置各组件的各配置项，大概如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">Main menu<br><br>   1) Common Configuration:<br>   2) zimbra-ldap:                             Enabled<br>   3) zimbra-logger:                           Enabled<br>   4) zimbra-mta:                              Enabled<br>   5) zimbra-dnscache:                         Enabled<br>   6) zimbra-snmp:                             Enabled<br>   7) zimbra-store:                            Enabled<br>   8) zimbra-spell:                            Enabled<br>   9) zimbra-proxy:                            Enabled<br>  10) zimbra-imapd:                            Enabled<br>  11) Default Class of Service Configuration:<br>   s) Save config to file<br>   x) Expand menu<br>   q) Quit<br><br>*** CONFIGURATION COMPLETE - press <span class="hljs-string">&#x27;a&#x27;</span> to apply<br>Select from menu, or press <span class="hljs-string">&#x27;a&#x27;</span> to apply config (? - <span class="hljs-built_in">help</span>) a<br></code></pre></td></tr></table></figure><p>完成自动配置后，即开始自动安装，大概如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">Notify Zimbra of your installation? [Yes]<br>Notifying Zimbra of installation via http://www.zimbra.com/cgi-bin/notify.cgi?VER=8.8.15_GA_3869_RHEL7_64&amp;MAIL=admin@freedom.local<br><br>Notification complete<br><br>Checking <span class="hljs-keyword">if</span> the NG started running...done.<br>Setting up zimbra crontab...done.<br><br><br>Moving /tmp/zmsetup.20191230-135538.<span class="hljs-built_in">log</span> to /opt/zimbra/log<br><br><br>Configuration complete - press <span class="hljs-built_in">return</span> to <span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><h4 id="查看zimbra服务状态"><a href="#查看zimbra服务状态" class="headerlink" title="查看zimbra服务状态"></a>查看zimbra服务状态</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">su - zimbra<br>[zimbra@mail root]$ zmcontrol status <br>Host mail.ywmy.xyz<br>amavis                  Running<br>antispam                Running<br>antivirus               Running<br>dnscache                Running<br>ldap                    Running<br>logger                  Running<br>mailbox                 Running<br>memcached               Running<br>mta                     Running<br>opendkim                Running<br>proxy                   Running<br>service webapp          Running<br>snmp                    Running<br>spell                   Running<br>stats                   Running<br>zimbra webapp           Running<br>zimbraAdmin webapp      Running<br>zimlet webapp           Running<br>zmconfigd               Running<br><br><span class="hljs-comment"># 重启zimbra服务</span><br>[zimbra@mail root]$ zmcontrol restart<br></code></pre></td></tr></table></figure><p>以上，zimbra服务已经完成安装。接下来，需要涉及到的就是zimbra各程序端口放开，和映射操作。</p><h3 id="防火墙、端口映射及登录测试"><a href="#防火墙、端口映射及登录测试" class="headerlink" title="防火墙、端口映射及登录测试"></a>防火墙、端口映射及登录测试</h3><h4 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h4><p>参考前面zimbra服务安装时配置的各个端口，在centos中的firewalld放通对应的端口；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-port=&#123;25,80,110,143,443,465,587,993,995,5222,5223,9071,7071,7025&#125;/tcp<br><span class="hljs-comment"># 另一个添加服务器的方法，建议使用下面的配置方法</span><br>firewall-cmd --permanent --add-service=&#123;pop3,pop3s,imap,imaps,smtp,smtps，https&#125;<br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><p>对应的。出口设备如防火墙，或路由器上，需要配置上面相对应的端口。</p><h4 id="登录测试"><a href="#登录测试" class="headerlink" title="登录测试"></a>登录测试</h4><p>内网打开邮件服务器的登录页面：</p><p>如本次部署：<a href="https://192.168.10.71/">https://192.168.10.71</a></p><p><img src="https://blog.ywmy.xyz/linux/zimbra-login_page.png" alt="zimbra-login_page"></p><p>这里使用前面安装配置中设置的登录信息登陆即可。</p><p><img src="https://blog.ywmy.xyz/linux/zimbra-login_page_admin.png" alt="zimbra-login_page_admin"></p><p>管理员登录界面，默认的管理员端口可以查看前面安装过程中的配置回显信息，默认的管理员端口为7071，如本次部署参考：<a href="https://192.168.10.71:7071/">https://192.168.10.71:7071</a></p><p><img src="https://blog.ywmy.xyz/linux/zimbra-admin_console_login.png" alt="zimbra-admin_console_login"></p><p>对应的，映射到公网IP后，可以把内网IP替换成公网IP后，打开登录页面即可。</p><h3 id="DNS、A记录、MX记录配置"><a href="#DNS、A记录、MX记录配置" class="headerlink" title="DNS、A记录、MX记录配置"></a>DNS、A记录、MX记录配置</h3><p>zimbra服务程序，依赖DNS服务。需要在部署的zimbra服务器上部署本地的DNS服务。对于域名和MX记录配置，需要在域名供应商的解析中添加对应的记录。本部署实例在阿里云上配置参考。</p><h4 id="DNS配置"><a href="#DNS配置" class="headerlink" title="DNS配置"></a>DNS配置</h4><p>centos 配置DNS，需要下载和安装bind。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install <span class="hljs-built_in">bind</span> bind-utils<br></code></pre></td></tr></table></figure><p>配置named服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/named.conf<br><br>[root@mail ~]<span class="hljs-comment"># cat /etc/named.conf</span><br>//<br>// named.conf<br>//<br>// Provided by Red Hat <span class="hljs-built_in">bind</span> package to configure the ISC BIND named(8) DNS<br>// server as a caching only nameserver (as a localhost DNS resolver only).<br>//<br>// See /usr/share/doc/bind*/sample/ <span class="hljs-keyword">for</span> example named configuration files.<br>//<br>// See the BIND Administrator<span class="hljs-string">&#x27;s Reference Manual (ARM) for details about the</span><br><span class="hljs-string">// configuration located in /usr/share/doc/bind-&#123;version&#125;/Bv9ARM.html</span><br><span class="hljs-string"></span><br><span class="hljs-string">options &#123;</span><br><span class="hljs-string">listen-on port 53 &#123; 127.0.0.1; 192.168.10.71; &#125;;</span><br><span class="hljs-string">listen-on-v6 port 53 &#123; ::1; &#125;;</span><br><span class="hljs-string">directory &quot;/var/named&quot;;</span><br><span class="hljs-string">dump-file &quot;/var/named/data/cache_dump.db&quot;;</span><br><span class="hljs-string">statistics-file &quot;/var/named/data/named_stats.txt&quot;;</span><br><span class="hljs-string">memstatistics-file &quot;/var/named/data/named_mem_stats.txt&quot;;</span><br><span class="hljs-string">recursing-file  &quot;/var/named/data/named.recursing&quot;;</span><br><span class="hljs-string">secroots-file   &quot;/var/named/data/named.secroots&quot;;</span><br><span class="hljs-string">allow-query     &#123; localhost; 192.168.10.71; &#125;;</span><br><span class="hljs-string"></span><br><span class="hljs-string">/* </span><br><span class="hljs-string"> - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.</span><br><span class="hljs-string"> - If you are building a RECURSIVE (caching) DNS server, you need to enable </span><br><span class="hljs-string">   recursion. </span><br><span class="hljs-string"> - If your recursive DNS server has a public IP address, you MUST enable access </span><br><span class="hljs-string">   control to limit queries to your legitimate users. Failing to do so will</span><br><span class="hljs-string">   cause your server to become part of large scale DNS amplification </span><br><span class="hljs-string">   attacks. Implementing BCP38 within your network would greatly</span><br><span class="hljs-string">   reduce such attack surface </span><br><span class="hljs-string">*/</span><br><span class="hljs-string">recursion yes;</span><br><span class="hljs-string"></span><br><span class="hljs-string">dnssec-enable yes;</span><br><span class="hljs-string">dnssec-validation yes;</span><br><span class="hljs-string"></span><br><span class="hljs-string">/* Path to ISC DLV key */</span><br><span class="hljs-string">bindkeys-file &quot;/etc/named.root.key&quot;;</span><br><span class="hljs-string"></span><br><span class="hljs-string">managed-keys-directory &quot;/var/named/dynamic&quot;;</span><br><span class="hljs-string"></span><br><span class="hljs-string">pid-file &quot;/run/named/named.pid&quot;;</span><br><span class="hljs-string">session-keyfile &quot;/run/named/session.key&quot;;</span><br><span class="hljs-string">&#125;;</span><br><span class="hljs-string"></span><br><span class="hljs-string">logging &#123;</span><br><span class="hljs-string">        channel default_debug &#123;</span><br><span class="hljs-string">                file &quot;data/named.run&quot;;</span><br><span class="hljs-string">                severity dynamic;</span><br><span class="hljs-string">        &#125;;</span><br><span class="hljs-string">&#125;;</span><br><span class="hljs-string"></span><br><span class="hljs-string">zone &quot;.&quot; IN &#123;</span><br><span class="hljs-string">type hint;</span><br><span class="hljs-string">file &quot;named.ca&quot;;</span><br><span class="hljs-string">&#125;;</span><br><span class="hljs-string"></span><br><span class="hljs-string">include &quot;/etc/named.rfc1912.zones&quot;;</span><br><span class="hljs-string">include &quot;/etc/named.root.key&quot;;</span><br><span class="hljs-string"></span><br><span class="hljs-string"># 需要添加的zone配置</span><br><span class="hljs-string"></span><br><span class="hljs-string">zone &quot;ywmy.xyz&quot; &#123;</span><br><span class="hljs-string">type master;</span><br><span class="hljs-string">file &quot;ywmy.xyz.zone&quot;;</span><br><span class="hljs-string">&#125;;</span><br></code></pre></td></tr></table></figure><p>以上的配置在安装bind程序的时候自动生成。需要关注的配置见下：</p><div class="note note-info">            <ul><li>listen-on port 53 { 127.0.0.1; 192.168.10.71; };  # 添加zimbra服务器的IP</li><li>allow-query     { localhost; 192.168.10.71; };</li><li>添加zone配置，上面配置中注释下面的内容</li></ul>          </div><p>最后，创建域名的zone文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /var/named/<br>vim ywmy.xyz.zone<br><span class="hljs-comment"># 配置信息如下：</span><br>[root@mail named]<span class="hljs-comment"># cat ywmy.xyz.zone </span><br>;<br>; BIND data file <span class="hljs-keyword">for</span> <span class="hljs-built_in">local</span> loopback interface<br>;<br><span class="hljs-variable">$TTL</span>    86400<br>@       IN      SOA     ns1.ywmy.xyz. root.ywmy.xyz. (<br>        2021051001 ; Serial<br>        604800    ; Refresh<br>        86400     ; Retry<br>        2419200   ; Expire<br>        604800 )  ; Negative Cache TTL<br><br>;<br>; name servers - NS records<br><br>@       IN      NS      ns1.ywmy.xyz.<br>@               MX    10   mail.ywmy.xyz.<br><br>; name servers - A records<br><br>ns1    IN    A    192.168.10.71<br>mail    IN    A    192.168.10.71<br></code></pre></td></tr></table></figure><h4 id="启动本地DNS服务"><a href="#启动本地DNS服务" class="headerlink" title="启动本地DNS服务"></a>启动本地DNS服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start named<br>systemctl <span class="hljs-built_in">enable</span> named<br></code></pre></td></tr></table></figure><h4 id="域名配置"><a href="#域名配置" class="headerlink" title="域名配置"></a>域名配置</h4><p>登录域名供应商后台，本实例域名为阿里云。登录阿里云，配置和邮件相关的A记录，和MX记录。</p><table><thead><tr><th align="left">主机记录</th><th align="left">记录类型</th><th align="left">记录值</th></tr></thead><tbody><tr><td align="left">mail</td><td align="left">A</td><td align="left">邮件服务器的公网IP（1.2.3.4）</td></tr><tr><td align="left">@</td><td align="left">MX</td><td align="left">mail.ywmy.xyz 10</td></tr></tbody></table><p>配置了这里，就可以使用域名来访问已经部署的服务了。</p><h3 id="配置zimbra发信"><a href="#配置zimbra发信" class="headerlink" title="配置zimbra发信"></a>配置zimbra发信</h3><h4 id="处理发信问题"><a href="#处理发信问题" class="headerlink" title="处理发信问题"></a>处理发信问题</h4><p>创建邮箱的用户名，会发现，邮箱里的talk服务可以正常使用，不过，站内发送邮件，是没办法接收的，后台一直有队列。</p><p>队列的提示大致如下：</p><div class="note note-info">            <p>delivery temporarily suspended: connect to example.com[192.168.10.71]:7025: Connection refused</p>          </div><p>解决办法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">zmprov ms mail.ywmy.xyz zimbraMtaLmtpHostLookup native  <span class="hljs-comment"># 中间域名那段，改成自己部署zimbra服务的主机名即可。</span><br>zmprov mcf zimbraMtaLmtpHostLookup native   <span class="hljs-comment"># 如果使用的是Single Server，则还要始终注意Global Config</span><br>zmmtactl restart<br></code></pre></td></tr></table></figure><p>完成以上配置，则可以正常发信了。</p><div class="note note-warnning">            <p>到这一步，域名访问，站内邮件发送，talk的服务已经都可以正常使用了，不过，尝试往第三方邮件发送邮件，发现会被退信。这个和邮件服务商的反垃圾联盟可能有关。还需要在域名供应商的DNS解析记录中配置SFP相关的txt记录。</p>          </div><p>接下来就是和DKIM相关的配置。</p><h3 id="DKIM，SFP，DMIRC设定"><a href="#DKIM，SFP，DMIRC设定" class="headerlink" title="DKIM，SFP，DMIRC设定"></a>DKIM，SFP，DMIRC设定</h3><p>在这一步，我们需要把zimbra生成的DKIM Public signature信息，添加到域名的txt记录中。txt记录通常做SFP，用于反垃圾邮件。</p><h4 id="设置DKIM"><a href="#设置DKIM" class="headerlink" title="设置DKIM"></a>设置DKIM</h4><p>这个需要通过命令行工具操作。登录服务器后，切换成zimbra账户来设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">su - zimbra<br><span class="hljs-built_in">cd</span> libexec/     <span class="hljs-comment"># 绝对路径 /opt/zimbra/libexec/</span><br><span class="hljs-comment"># 查看zmdkimkeyutil有哪些相关的指令</span><br>./zmdkimkeyutil -?<br><span class="hljs-comment"># 回显如下：</span><br>[zimbra@mail libexec]$ ./zmdkimkeyutil ?<br>Usage: ./zmdkimkeyutil [-a [-b]] [-q] [-r] [-s selector] [-S] [-u [-b]] [-d domain]<br>-a: Add new key pair and selector <span class="hljs-keyword">for</span> domain<br>-b: Optional parameter specifying the number of bits <span class="hljs-keyword">for</span> the new key.<br>    Only works with -a and -u.  Default when not specified is 2048 bits.<br>-d domain: Domain to use<br>-h: Show this usage block<br>-q: Query DKIM information <span class="hljs-keyword">for</span> domain<br>-r: Remove DKIM keys <span class="hljs-keyword">for</span> domain<br>-s: Use custom selector string instead of random UUID<br>-S: Generate keys with subdomain data.  This must be used <span class="hljs-keyword">if</span> you want to sign both example.com and sub.example.com separately.<br>    Only works with -a and -u.  Default is not to <span class="hljs-built_in">set</span> this flag.<br>-u: Update keys <span class="hljs-keyword">for</span> domain<br>One of [a, q, r, or u] must be supplied<br>For -q, search can be either by selector or domain<br>For all other usage patterns, domain is required<br></code></pre></td></tr></table></figure><p>大概说明：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">-a：为域添加新的密钥对和选择器<br>-b：可选参考，指定新的密钥位数。<br>    仅与-a和-u一起使用。未指定时默认为2048位。<br>-d：使用域名<br>-h：显示使用块<br>-q：查询域的DKIM信息<br>-r：删除域的DKIM密钥<br>-s：使用自定义选择器字条器代替随机UUID<br>-S：生成带有子域数据的密钥。如果要分别对example.com和sub.example.com进行签名，则必须使用此选项。<br>-u：更新新密钥<br>必须提供[a,q,r或u]中的一种<br>对于-q，可以按选择器或域进行搜索<br>对于所有的其它使用模式，必须使用域<br></code></pre></td></tr></table></figure><p>运行zmdkimkeyutil</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 生成：</span><br>./zmdkimkeyutil -a -d ywmy.xyz -s ywmydkim<br><span class="hljs-comment"># 查看：</span><br>[zimbra@mail libexec]$ ./zmdkimkeyutil -q -d ywmy.xyz<br>DKIM Domain:<br>ywmy.xyz<br><br>DKIM Selector:<br>9149A4A6-6A3F-11ED-ADC9-44E3D876BA8B<br><br>DKIM Private Key:<br>-----BEGIN RSA PRIVATE KEY-----<br>MI..............................................................<br><span class="hljs-comment">#</span><br><span class="hljs-comment">#       中间很多字符串</span><br><span class="hljs-comment">#</span><br>...................................................T8A==<br>-----END RSA PRIVATE KEY-----<br><br>DKIM Public signature:<br>9149A4A6-6A3F-11ED-ADC9-44E3D876BA8B._domainkeyINTXT( <span class="hljs-string">&quot;v=DKIM1; k=rsa; &quot;</span><br>  <span class="hljs-string">&quot;p=MIIB.............................lots of characters.................................................................................Vhi8p1dwBWWvkDcp&quot;</span><br>  <span class="hljs-string">&quot;S1.....................................lots of characters...........................QAB&quot;</span> )  ; ----- DKIM key 9149A4A6-6A3F-11ED-ADC9-44E3D876BA8B <span class="hljs-keyword">for</span> ywmy.xyz<br><br>DKIM Identity:<br>ywmy.xyz<br><span class="hljs-comment"># 更新：</span><br>./zmdkimkeyutil -u -d ywmy.xyz<br></code></pre></td></tr></table></figure><p>配置完了，接下来，可以把上面生成的DKIM Public singature信息配置到域名的dns解析中了。</p><div class="note note-warnning">            <p>配置的部分为从 v&#x3D;DKIM1;到后面的信息，不能有空格，也不能有“号。</p>          </div><p>参考示例：<br><img src="https://blog.ywmy.xyz/linux/DKIM%20Public%20singature.png" alt="DKIM_Public_signature"></p><p>好了。到此，反垃圾邮件配置，对其它邮件服务商发信被拒收的问题就解决了。</p><p>可以做一个发信测试，比如QQ邮件(foxmail)，再回信测试。验证如下：</p><p><img src="https://blog.ywmy.xyz/linux/send%20mail%20test%20ok.png" alt="send mail test ok"></p><p>至此，zimbra邮件部署完毕，其实，也还缺少一个https证书的问题，zimbra默认自签https证书，虽然能保证传输的可靠性，但解决不了浏览器证书信任问题。这个留待后面更新zimbra服务导入阿里云证书时验证处理。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>zimbra mail</tag>
      
      <tag>mail</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>zabbix 配置邮件告警</title>
    <link href="/2022/11/16/zabbix-%E9%85%8D%E7%BD%AE%E9%82%AE%E4%BB%B6%E5%91%8A%E8%AD%A6/"/>
    <url>/2022/11/16/zabbix-%E9%85%8D%E7%BD%AE%E9%82%AE%E4%BB%B6%E5%91%8A%E8%AD%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="zabbix配置邮件告警"><a href="#zabbix配置邮件告警" class="headerlink" title="zabbix配置邮件告警"></a>zabbix配置邮件告警</h1><p>补充一个之前配置zabbix邮件告警的内容，备忘。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>操作系统：CentOS Linux release 7.9.2009 (Core)</li><li>zabbix版本：Zabbix 3.4.15. </li><li>邮件代理：postfix</li><li>发送邮箱：qq邮箱</li><li>告警配置：脚本</li></ul><h2 id="邮件配置"><a href="#邮件配置" class="headerlink" title="邮件配置"></a>邮件配置</h2><h3 id="postfix邮件配置"><a href="#postfix邮件配置" class="headerlink" title="postfix邮件配置"></a>postfix邮件配置</h3><p>安装postfix邮件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install postfix<br>systemctl status postfix<br>systemctl <span class="hljs-built_in">enable</span> postfix<br></code></pre></td></tr></table></figure><h3 id="配置发件服务"><a href="#配置发件服务" class="headerlink" title="配置发件服务"></a>配置发件服务</h3><p>使用QQ邮箱，需要先在QQ邮箱中开启pop3和smtp服务。开启服务时，需要手动发短信至QQ邮箱指定的号码。发送后，有提示QQ邮箱的授权码。此授权码，需要配置在postfix发信的配置文件中。</p><h3 id="postfix配置"><a href="#postfix配置" class="headerlink" title="postfix配置"></a>postfix配置</h3><p>在mail的配置文件中追加QQ邮箱的配置信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/mail.rc<br><br><span class="hljs-comment"># 配置文件如下</span><br><br><span class="hljs-comment"># qq邮箱配置</span><br><span class="hljs-built_in">set</span> sendcharsets=ios-8859-1,utf-8<br><span class="hljs-built_in">set</span> from=123456789@qq.com   <span class="hljs-comment"># 你的QQ邮箱</span><br><span class="hljs-built_in">set</span> smtp=smtps://smtp.qq.com:465    <span class="hljs-comment"># QQ邮箱smtp配置，参考QQ邮箱账号设置</span><br><span class="hljs-built_in">set</span> smtp-auth-user=123456789@qq.com <br><span class="hljs-built_in">set</span> smtp-auth-password=asdfghjklzxcv     <span class="hljs-comment"># QQ邮箱pop3/smtp设置中给出的授权码</span><br><span class="hljs-built_in">set</span> smtp-auth=login<br><span class="hljs-built_in">set</span> ssl-verify=ignore      <span class="hljs-comment"># 认证方式</span><br><span class="hljs-built_in">set</span> nss-config-dir=/etc/pki/nssdb       <span class="hljs-comment"># 证书路径</span><br></code></pre></td></tr></table></figure><h3 id="测试postfix发件"><a href="#测试postfix发件" class="headerlink" title="测试postfix发件"></a>测试postfix发件</h3><p>配置完postfix后，测试发送邮件是否正常。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;zabbix test mail&quot;</span> | mail -s <span class="hljs-string">&quot;zabbix&quot;</span> 你的收件邮箱@qq.com<br></code></pre></td></tr></table></figure><p>到这里，可能会有两个错误，第一个发件失败，第二个能发送，但提示证书不被信任。</p><p>第一个错误，检查邮箱配置中的证书路径，是否有创建，或少配置，追加配置或创建证书路径。<br>第二个错误：</p><blockquote><p>Error in certificate: Peer’s certificate issuer has been marked as not trusted by the.<br>需要把QQ的证书存入邮件配置的证书路径中，操作如下：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/pki/nssdb<br><span class="hljs-built_in">echo</span> -n | openssl s_client -connect smtp.qq.com:465 | sed -ne <span class="hljs-string">&#x27;/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p&#x27;</span> &gt; ./qq.crt<br>certutil -A -n <span class="hljs-string">&quot;GeoTrust SSL CA - G3&quot;</span> -t <span class="hljs-string">&quot;Pu,Pu,Pu&quot;</span>  -d ./ -i qq.crt<br></code></pre></td></tr></table></figure><p>如果提示依赖，则安装相应的依赖程序包。如nss-tools。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install nss-tools<br></code></pre></td></tr></table></figure><p>解决上面两个提示，不会有发件告警了，如果有，那是新问题，碰到再说。</p><p>发件测试如下：</p><p><img src="https://blog.ywmy.xyz/linux/sendmail.png" alt="sendmail"></p><h2 id="zabbix脚本配置"><a href="#zabbix脚本配置" class="headerlink" title="zabbix脚本配置"></a>zabbix脚本配置</h2><p>配置邮件告警，使用脚本来实现，zabbix脚本的路径，参考zabbix安装时编译的环境路径。脚本见下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/lib/zabbix/alertscripts<br><br><span class="hljs-comment"># 脚本内容</span><br>vim sendmail.sh<br><br><span class="hljs-comment">#!/bin/bash</span><br>messages=`<span class="hljs-built_in">echo</span> <span class="hljs-variable">$3</span> | <span class="hljs-built_in">tr</span> <span class="hljs-string">&#x27;\r\n&#x27;</span> <span class="hljs-string">&#x27;\n&#x27;</span>`<br>subject=`<span class="hljs-built_in">echo</span> <span class="hljs-variable">$2</span> | <span class="hljs-built_in">tr</span> <span class="hljs-string">&#x27;\r\n&#x27;</span> <span class="hljs-string">&#x27;\n&#x27;</span>`<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;messages&#125;</span>&quot;</span> | mail -s <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;subject&#125;</span>&quot;</span> <span class="hljs-variable">$1</span> &gt;&gt; /tmp/sendmail.log 2&gt;&amp;1<br><br><span class="hljs-comment"># 脚本权限</span><br><span class="hljs-built_in">chown</span> zabbix:zabbix ./sendmail.sh<br><span class="hljs-built_in">chmod</span> u+x sendmail.sh<br></code></pre></td></tr></table></figure><h2 id="zabbix告警配置"><a href="#zabbix告警配置" class="headerlink" title="zabbix告警配置"></a>zabbix告警配置</h2><h3 id="添加报警媒介类型"><a href="#添加报警媒介类型" class="headerlink" title="添加报警媒介类型"></a>添加报警媒介类型</h3><p><img src="https://blog.ywmy.xyz/linux/sendmail-script.png" alt="sendmail-script"></p><h3 id="用户关联报警媒介"><a href="#用户关联报警媒介" class="headerlink" title="用户关联报警媒介"></a>用户关联报警媒介</h3><p><img src="https://blog.ywmy.xyz/linux/user-alert-conf.png" alt="user-alert-config"></p><p>权限中选择对应的主机或群组。</p><h3 id="创建告警动作"><a href="#创建告警动作" class="headerlink" title="创建告警动作"></a>创建告警动作</h3><p><img src="https://blog.ywmy.xyz/linux/report%20%20problems.png" alt="report problems"></p><p>接下来是操作，恢复操作，和确认操作的配置。</p><p>见下图：</p><p><img src="https://blog.ywmy.xyz/linux/report_action.png" alt="report action"></p><p>恢复操作见下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">标题：恢复&#123;TRIGGER.STATUS&#125;, 服务器名:&#123;HOSTNAME1&#125;: &#123;TRIGGER.NAME&#125;已恢复!<br>内容：<br>告警主机:&#123;HOSTNAME&#125;<br>告警主机IP地址:&#123;HOST.IP&#125;<br>告警时间:&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;<br>告警等级:&#123;TRIGGER.SEVERITY&#125;<br>告警信息: &#123;TRIGGER.NAME&#125;<br>告警项目:&#123;TRIGGER.KEY1&#125;<br>问题详情:&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;<br>当前状态:&#123;TRIGGER.STATUS&#125;:&#123;ITEM.VALUE1&#125;<br>事件ID：&#123;EVENT.ID&#125;<br></code></pre></td></tr></table></figure><p>确认操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">标是：确认:&#123;TRIGGER.NAME&#125;<br>内容：<br>告警主机:&#123;HOSTNAME&#125;<br>告警主机IP地址:&#123;HOST.IP&#125;<br>&#123;USER.FULLNAME&#125; 已确认问题  <br>确认时间:&#123;ACK.DATE&#125; &#123;ACK.TIME&#125;<br>确认信息:&#123;ACK.MESSAGE&#125;<br></code></pre></td></tr></table></figure><div class="note note-warning">            <p><font color=#FFA500> 以上的关于邮件的配置已经不再适用了。邮件配置授权码，最多也就测试一下，后面会被当垃圾邮件屏蔽掉的。经测试，无论是QQ邮箱还是网易邮箱。都已经不行了。</font></p>          </div>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zabbix</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 初步服务器配置续</title>
    <link href="/2022/10/10/centos-%E5%88%9D%E6%AD%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E7%BB%AD/"/>
    <url>/2022/10/10/centos-%E5%88%9D%E6%AD%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E7%BB%AD/</url>
    
    <content type="html"><![CDATA[<h1 id="centos-初步服务器配置续"><a href="#centos-初步服务器配置续" class="headerlink" title="centos 初步服务器配置续"></a>centos 初步服务器配置续</h1><p>很久之前记录过一篇ubuntu服务器初步配置的记录，时间久远。前几天薅了一把京东云的羊毛，买了一台云主机，配置也比较低，计划没事做做测试用。顺便记录一下，linux下ssh安全加固的配置，备忘。</p><span id="more"></span><h2 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h2><p>京东云购买后，默认创建一台centos 8 的云主机，并且将登录信息直接发送到手机短信。不过个人习惯，关机，重新选择centos 7的镜像重新安装系统。centos 7的支持到2024年，重新安装centos后，登录云主机。</p><p>接下来的常规操作：</p><h3 id="更换国内源"><a href="#更换国内源" class="headerlink" title="更换国内源"></a>更换国内源</h3><p>使用京东云上镜像安装的系统，默认已经改了京东自己的源。这个可以保持不变了。</p><h3 id="系统更新"><a href="#系统更新" class="headerlink" title="系统更新"></a>系统更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum update<br></code></pre></td></tr></table></figure><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">adduser -d /home/example_user -s /bin/bash -m example_user<br>passwd example_user<br><span class="hljs-comment"># 添加sudo权限</span><br>usermod -aG wheel example_user<br></code></pre></td></tr></table></figure><h3 id="添加公钥认证"><a href="#添加公钥认证" class="headerlink" title="添加公钥认证"></a>添加公钥认证</h3><p>使用ssh密钥身份验证，比记住密码要方便得多，通过配置密钥登录，也省去了输入密码的过程，更加方便安全。</p><p>在电脑上生成ssh密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa_jdyun_$(<span class="hljs-built_in">date</span> +%Y-%m-%d) -C <span class="hljs-string">&quot;jd cloud key for example_user&quot;</span><br></code></pre></td></tr></table></figure><p>上传密钥：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-copy-id -i ~/.ssh/id_rsa_jdyun_2022-XX-XX.pub example_user@jd_host<br></code></pre></td></tr></table></figure><p>上传密钥后，登录云主机。接下来，需要更改sshd的配置文件，主要更改参考：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/ssh/sshd_config<br></code></pre></td></tr></table></figure><div class="note note-info">            <p>限制身份验证最大次数</p>          </div><p>限制用户失败认证的最大次数是一个缓解暴力攻击的好方法。将MaxAuthTries设置为比较小的数字（x），将会在用户x次失败尝试后强制断开会话。</p><blockquote><p>MaxAuthTries 3</p></blockquote><div class="note note-info">            <p>禁用root账户登录</p>          </div><p>如前面，我们已经创建了新的用户，并加入到sudo用户组。那么，我们可以配置禁用root用户登录，保护root账户受到其它类型的攻击。</p><blockquote><p>PermitRootLogin no</p></blockquote><div class="note note-info">            <p>显示最后一次登录的日志</p>          </div><p>显示最后一次登录的时间和日期，这个默认配置。</p><blockquote><p>PrintLastLog yes</p></blockquote><div class="note note-info">            <p>结束空闲的ssh会话</p>          </div><p>这个可以防止走开后，忘记退出，别人直接在电脑上执行命令。主要是看退出时间，对安全敏感的离开后销屏这个应该是常规操作，不过ssh上配置也是非常有需要的。</p><blockquote><p>ClientAliveInterval 900<br>ClientAliveCountMax 0</p></blockquote><div class="note note-info">            <p>禁用空密码</p>          </div><blockquote><p>PermitEmptyPasswords no</p></blockquote><div class="note note-info">            <p>禁用密码登录</p>          </div><blockquote><p>PasswordAuthentication no</p></blockquote><div class="note note-info">            <p>使用密钥登录</p>          </div><blockquote><p>PubkeyAuthentication yes</p></blockquote><p>更改以上配置之后，可以重启sshd的服务。之后，便可以直接通过密钥登录了。</p><p>完成sshd配置后，登录时发现提示超过十几个的登录失败提示。查看一下&#x2F;var&#x2F;log&#x2F;secure下的日志，发现一堆的登录失败日志，猜到被扫描了。</p><blockquote><p>Oct 10 13:57:05 1664346022931 sshd[4185]: Received disconnect from 68.183.83.242 port 44212:11: Normal Shutdown, Thank you for playing [preauth]<br>Oct 10 13:57:05 1664346022931 sshd[4185]: Disconnected from 68.183.83.242 port 44212 [preauth]<br>Oct 10 13:59:00 1664346022931 sshd[4484]: Invalid user pi from 178.13.78.150 port 41768<br>Oct 10 13:59:00 1664346022931 sshd[4484]: input_userauth_request: invalid user pi [preauth]<br>Oct 10 13:59:00 1664346022931 sshd[4485]: Invalid user pi from 178.13.78.150 port 41782<br>Oct 10 13:59:00 1664346022931 sshd[4485]: input_userauth_request: invalid user pi [preauth]<br>Oct 10 13:59:00 1664346022931 sshd[4484]: Connection closed by 178.13.78.150 port 41768 [preauth]<br>Oct 10 13:59:00 1664346022931 sshd[4485]: Connection closed by 178.13.78.150 port 41782 [preauth]<br>Oct 10 14:00:20 1664346022931 sshd[4622]: Received disconnect from 172.105.198.48 port 53828:11: Normal Shutdown, Thank you for playing [preauth]<br>Oct 10 14:00:20 1664346022931 sshd[4622]: Disconnected from 172.105.198.48 port 53828 [preauth]<br>Oct 10 14:01:07 1664346022931 sshd[4677]: Invalid user teamspeak from 68.183.83.242 port 54174<br>Oct 10 14:01:07 1664346022931 sshd[4677]: input_userauth_request: invalid user teamspeak [preauth]</p></blockquote><p>就这么才刚开的一个云主机，就这么无差别的给扫描，实在有点不甘心就算了。所以接下来的就是防恶意扫描破ssh了。</p><h2 id="sshd防恶意扫描"><a href="#sshd防恶意扫描" class="headerlink" title="sshd防恶意扫描"></a>sshd防恶意扫描</h2><p>fail2ban通过过扫描日志来查找恶意行为，并通过更新防火墙规则等操作来阻止可疑IP。</p><h3 id="安装fail2ban"><a href="#安装fail2ban" class="headerlink" title="安装fail2ban"></a>安装fail2ban</h3><p>直接通过centos的yum源中安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install fail2ban<br></code></pre></td></tr></table></figure><h3 id="启动fail2ban"><a href="#启动fail2ban" class="headerlink" title="启动fail2ban"></a>启动fail2ban</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start firewalld<br></code></pre></td></tr></table></figure><h3 id="配置sshd防恶意扫描"><a href="#配置sshd防恶意扫描" class="headerlink" title="配置sshd防恶意扫描"></a>配置sshd防恶意扫描</h3><p>为fail2ban配置一个jail配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/fail2ban/<br>vim jail.local<br><br>[DEFAULT]<br><span class="hljs-comment"># IP 白名单</span><br>ignoreip = 127.0.0.1/8 ::1<br><br><span class="hljs-comment"># 封禁时间</span><br>bantime = 24h<br><br><span class="hljs-comment"># 查找失败时间</span><br>findtime = 600<br><br><span class="hljs-comment"># 允许失败次数</span><br>maxretry = 5<br><br><span class="hljs-comment"># 使用防火墙规则</span><br><span class="hljs-comment"># firewall (firewallcmd-ipset);</span><br><span class="hljs-comment"># iptables (iptables-multiport);</span><br><span class="hljs-comment"># 对应/etc/fail2ban/action.d目录下的文件</span><br>banaction = firewallcmd-ipset<br><br><span class="hljs-comment"># 触发规则后的选择行为：</span><br><span class="hljs-comment"># 只封禁IP：action_</span><br><span class="hljs-comment"># 封禁IP+邮件通知：action_mw</span><br><span class="hljs-comment"># 封禁IP+邮件通知+报告相关日志：action_mwl</span><br>action = %(action_)s<br><br>[sshd]<br><span class="hljs-comment"># 需要监听的项，对应/etc/fail2ban/filter.d目录下的文件</span><br>filter = sshd<br>enabled = <span class="hljs-literal">true</span><br>port = 22<br><br><span class="hljs-comment"># 监听的日志路径：</span><br><span class="hljs-comment"># Debian系：/var/log/auth.log</span><br><span class="hljs-comment"># RedhAT系：/var/log/secure</span><br>logpath = /var/log/secure<br></code></pre></td></tr></table></figure><h3 id="重新启动fail2ban"><a href="#重新启动fail2ban" class="headerlink" title="重新启动fail2ban"></a>重新启动fail2ban</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl restart fail2ban<br><span class="hljs-comment"># 查看fail2ban的状态</span><br><br>sudo systemctl status fail2ban<br><br>● fail2ban.service - Fail2Ban Service<br>   Loaded: loaded (/usr/lib/systemd/system/fail2ban.service; enabled; vendor preset: disabled)<br>   Active: active (running) since 五 2022-09-30 21:09:23 CST; 1 weeks 2 days ago<br>     Docs: man:fail2ban(1)<br> Main PID: 15611 (fail2ban-server)<br>   CGroup: /system.slice/fail2ban.service<br>           └─15611 /usr/bin/python2 -s /usr/bin/fail2ban-server -xf start<br><br>Warning: Journal has been rotated since unit was started. Log output is incomplete or unavailable.<br></code></pre></td></tr></table></figure><p>查看fail2ban的状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo fail2ban-client status <br>Status<br>|- Number of jail:1<br>`- Jail list:sshd<br></code></pre></td></tr></table></figure><p>可以看到已经有一个sshd的服务了，然后，我们再详细一点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo fail2ban-client status sshd<br>Status <span class="hljs-keyword">for</span> the jail: sshd<br>|- Filter<br>|  |- Currently failed:3<br>|  |- Total failed:7922<br>|  `- Journal matches:_SYSTEMD_UNIT=sshd.service + _COMM=sshd<br>`- Actions<br>   |- Currently banned:26<br>   |- Total banned:264<br>   `- Banned IP list:43.143.67.17 140.206.186.171 144.91.122.254 203.76.241.10 193.142.146.35 177.101.221.195 137.184.37.59 101.33.253.29 103.47.81.79 54.38.35.98 45.42.247.79 175.178.178.194 195.3.147.76 57.128.11.39 84.201.177.42 120.48.41.223 139.59.12.104 74.208.108.167 123.156.230.147 193.243.182.204 192.210.196.55 20.127.87.36 80.76.51.230 195.19.96.168 120.199.82.50 179.43.155.133<br></code></pre></td></tr></table></figure><p>看到总共ban了264个IP的，心安了一些，不过扫描真的是让人无语。不知道是不是京东云的问题，同样在阿里云上，也有遇到恶意扫描的，不过好像真没这么凶，阿里云上的扫描的很久没看到了。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用NFSv4 ACL进行权限管理</title>
    <link href="/2022/09/22/%E4%BD%BF%E7%94%A8NFSv4-ACL%E8%BF%9B%E8%A1%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
    <url>/2022/09/22/%E4%BD%BF%E7%94%A8NFSv4-ACL%E8%BF%9B%E8%A1%8C%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="使用NFSv4-ACL进行权限管理"><a href="#使用NFSv4-ACL进行权限管理" class="headerlink" title="使用NFSv4 ACL进行权限管理"></a>使用NFSv4 ACL进行权限管理</h1><p>在前面，已经完成了NFS服务的配置，以及挂载的示例，本文记录使用NFSv4协议挂载的文件系统上，如何设置NFSv4 ACL来进行文件或目录权限管理。</p><span id="more"></span><h2 id="前置说明"><a href="#前置说明" class="headerlink" title="前置说明"></a>前置说明</h2><p>已经完成NFS服务的配置以及挂载文件系统。</p><h2 id="命令说明"><a href="#命令说明" class="headerlink" title="命令说明"></a>命令说明</h2><p>在设置NFSv4 ACL前，需要先熟悉相关的操作命令。参考如下：</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>nfs4_getfacl <filename></td><td>查看文件当前的ACL权限</td></tr><tr><td>nfs4_setfacl -a A::GROUP@:W <filename></td><td>给GROUP设置写权限</td></tr><tr><td>nfs4_setfacl -a A:G:10001:W <filename></td><td>给用户1000设置写权限</td></tr><tr><td>nfs4_setfacl -e <filename></td><td>交互式编辑设置ACL权限</td></tr><tr><td>nfs4_getfacl <filename> &gt;&gt;saved_acl.txt</td><td>将文件当前的ACL权限保存为一个文本文件</td></tr><tr><td>nfs4_setfacl -S saved_acl.txt <filename></td><td>恢复保存文本文件里的ACL权限</td></tr></tbody></table><div class="note note-info">            <p>1、将文件file1的ACL权限复制到file2上</p><blockquote><p>nfs4_getfacl file1 | nfs4_setfacl -S file2</p></blockquote><p>2、删除文件file1上所有非保留的ACE</p><blockquote><p>nfs4_getfacl file1 | grep @ | nfs4_setfacl -S file1</p></blockquote><p>3、对目录树dir下所有文件和目录，增加用户组10001可以读写访问的权限。</p><blockquote><p>nfs4_setfacl -R -a A:g:10001:rW dir</p></blockquote><p>3、删除目录树dir下所有文件中包含1005的ACE</p><blockquote><p>find dir -type f -exec sh -c ‘for ace in $(nfs4_getfacl {} | grep “^A.*:1005:);do nfs_setfacl -x $ace {}; done’;</p></blockquote><p>4、让用户组10001对目录dir1下创建文件系统和目录有读写权限</p><blockquote><p>nfs4_setfacl -a A:fdg:10001:rW dir1</p></blockquote><p>5、让用户名10001对目录dir1下新创建建的文件有读和执行权限</p><blockquote><p>nfs4_setfacl -a A:fg:10001rx dir1</p></blockquote>          </div><h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><p>1、创建用户和群组</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>linux</tag>
      
      <tag>NFS</tag>
      
      <tag>acl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 7 NFS 服务搭建</title>
    <link href="/2022/09/19/CentOS-7-NFS-%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/"/>
    <url>/2022/09/19/CentOS-7-NFS-%E6%9C%8D%E5%8A%A1%E6%90%AD%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-NFS-服务搭建"><a href="#CentOS-7-NFS-服务搭建" class="headerlink" title="CentOS 7 NFS 服务搭建"></a>CentOS 7 NFS 服务搭建</h1><p>NFS是Network File System的缩写，即网络文件系统。客户端通过挂载的方式将NFS服务器端共享的数据目录挂载到本地目录下。</p><span id="more"></span><p>在NFS的应用中，本地NFS的客户端应用可以透明地读写位于远端NFS服务器上的文件，就像访问本地文件一样。</p><h2 id="NFS工作原理"><a href="#NFS工作原理" class="headerlink" title="NFS工作原理"></a>NFS工作原理</h2><p>1、首先NFS服务器端开启rpcbind;<br>2、然后服务端开启NFS服务,这时NFS的各项功能都需要向PRC服务注册,这RPC会通知portmap模块将可用的端口分配给statd, rquotad进程等;<br>3、然后NFS客户端RPC服务就会通过网络向NFS服务端的RPC服务的111端口发送NFS文件存取功能的询问请求;<br>4、NFS服务端的RPC服务找到对应的已注册的NFS daemon端口后,通知NFS客户端的PRC服务;<br>5、此时NFS客户端就可以获取到nfs服务端各个进程的正确端口,然后通过客户端的rpc就直接与NFS服务器的rpc进行存取数据了(rpc知道了nfs的具体端口,就可以实现远程调用,即传输)</p><div class="note note-info">            <p>有一点需要注意的是nfs并不是单独存在的,而是由NFS-Servr,RPC,PORTMAP这三个模拟组成的。NFS-server只负责将数据通过以文质系统的方式共享出去，并进行登录管理和权限管理，并不负责数据的传输，而数据的传输则由RPC来完成。<br>PORTMAP主要是用来分配端口给statd,rquotad等进程的，NFS服务除了启动nfsd本身监控的端口2049&#x2F;tcp和2049&#x2F;udp，还会启动以上进程来完成文件共享。</p>          </div><h2 id="NFS安装部署"><a href="#NFS安装部署" class="headerlink" title="NFS安装部署"></a>NFS安装部署</h2><h3 id="安装NFS服务"><a href="#安装NFS服务" class="headerlink" title="安装NFS服务"></a>安装NFS服务</h3><p>服务器端和客户端同时安装nfs-utils。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install nfs-utils<br></code></pre></td></tr></table></figure><h3 id="启动NFS相关服务"><a href="#启动NFS相关服务" class="headerlink" title="启动NFS相关服务"></a>启动NFS相关服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start rpcbind<br>systemctl start nfs<br>systemctl <span class="hljs-built_in">enable</span> rpcbind<br>systemctl <span class="hljs-built_in">enable</span> nfs<br></code></pre></td></tr></table></figure><h3 id="查看rpc注册端口信息"><a href="#查看rpc注册端口信息" class="headerlink" title="查看rpc注册端口信息"></a>查看rpc注册端口信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># rpcinfo -p localhost</span><br>   program vers proto   port  service<br>    100000    4   tcp    111  portmapper<br>    100000    3   tcp    111  portmapper<br>    100000    2   tcp    111  portmapper<br>    100000    4   udp    111  portmapper<br>    100000    3   udp    111  portmapper<br>    100000    2   udp    111  portmapper<br>    100005    1   udp  20048  mountd<br>    100005    1   tcp  20048  mountd<br>    100005    2   udp  20048  mountd<br>    100005    2   tcp  20048  mountd<br>    100005    3   udp  20048  mountd<br>    100005    3   tcp  20048  mountd<br>    100003    3   tcp   2049  nfs<br>    100003    4   tcp   2049  nfs<br>    100227    3   tcp   2049  nfs_acl<br>    100003    3   udp   2049  nfs<br>    100003    4   udp   2049  nfs<br>    100227    3   udp   2049  nfs_acl<br>    100021    1   udp  49132  nlockmgr<br>    100021    3   udp  49132  nlockmgr<br>    100021    4   udp  49132  nlockmgr<br>    100021    1   tcp  40709  nlockmgr<br>    100021    3   tcp  40709  nlockmgr<br>    100021    4   tcp  40709  nlockmgr<br></code></pre></td></tr></table></figure><h3 id="创建挂载的目录"><a href="#创建挂载的目录" class="headerlink" title="创建挂载的目录"></a>创建挂载的目录</h3><p>例如在home目录下创建share作为内网挂载的目录，可以按下面操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home<br><span class="hljs-built_in">mkdir</span> share<br><span class="hljs-built_in">chown</span> nfsnobody.nfsnobody ./share<br></code></pre></td></tr></table></figure><p>将挂载信息写入配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># cat /etc/exports</span><br>/home/share 192.168.10.0/24(rw,<span class="hljs-built_in">sync</span>)<br></code></pre></td></tr></table></figure><hr><p>export 文件配置格式参考上面配置，NFS共享目录+NFS客户端1（参数1，参数2…）+NFS客户端2（参数1，参数2…）+…</p><div class="note note-info">            <p>NFS共享目录要用绝对目录，可以被nfsnobody读写。</p>          </div><p>NFS客户端地址：</p><div class="note note-info">            <p>指定IP：192.168.0.1<br>指定子网所有主机：192.168.0.0&#x2F;24<br>指定域名的主机：abc.com<br>指定域名的所有主机：*.abc.com<br>所有主机：*</p>          </div><p>参数：</p><ul><li>ro：目录只读</li><li>rw：目录读写</li><li>sync：将数据同步写入内存缓冲区与磁盘中，效率低，但可以保证数据的一致性</li><li>async：将数据先保存在内存缓冲区，必要时才写入磁盘</li><li>all_squash：将远程访问的所有普通用户及所属组映射为匿名用户或用户组(nfsnobody)</li><li>no_all_squash：与all_squash取反（默认设置）</li><li>root_squash：将root用户及所属的组都映射为匿名用户组（默认设置）</li><li>no_root_squash：与root_squash取反</li><li>anonuid&#x3D;xxx：将远程访问的所有用户都映射为匿名用户，并指定该用户为本地用户（UID&#x3D;XXX）</li><li>anongid&#x3D;xxx：将远程访问的所有用户都映射为匿名用户组账户</li></ul><p>重新加载nfs配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># exportfs -rv</span><br>exporting 192.168.10.0/24:/home/share<br></code></pre></td></tr></table></figure><h3 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h3><p>防火墙上需要放通nfs,rpc-bind,mountd三个服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-service=nfs<br>firewall-cmd --permanent --add-service=rpc-bind<br>firewall-cmd --permanent --add-service=mountd<br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><p>查看服务器本机的挂情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># showmount -e localhost</span><br>Export list <span class="hljs-keyword">for</span> localhost:<br>/home/share 192.168.10.0/24<br></code></pre></td></tr></table></figure><h3 id="挂载测试"><a href="#挂载测试" class="headerlink" title="挂载测试"></a>挂载测试</h3><p>在客户端上创建目录，并挂NFS共享目录，比如在home目录下创建nfs目录，用于挂载服务器上的nfs共享。</p><p>1、客户端上安装nfs服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install nfs-utils<br></code></pre></td></tr></table></figure><p>2、客户端上测试nfs挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b ~]<span class="hljs-comment"># showmount -e 192.168.10.81</span><br>Export list <span class="hljs-keyword">for</span> 192.168.10.81:<br>/home/share 192.168.10.0/24<br></code></pre></td></tr></table></figure><p>3、创建目录并挂载NFS</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home<br>mkdri nfs<br>mount -t nfs 192.168.10.81:/home/share /home/nfs<br></code></pre></td></tr></table></figure><p>4、查看挂载后的目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b ~]<span class="hljs-comment"># df -hT</span><br>Filesystem                Type      Size  Used Avail Use% Mounted on<br>devtmpfs                  devtmpfs  874M     0  874M   0% /dev<br>tmpfs                     tmpfs     886M  180K  885M   1% /dev/shm<br>tmpfs                     tmpfs     886M   17M  869M   2% /run<br>tmpfs                     tmpfs     886M     0  886M   0% /sys/fs/cgroup<br>/dev/mapper/centos-root   xfs        47G  2.1G   45G   5% /<br>/dev/vda1                 xfs      1014M  186M  829M  19% /boot<br>192.168.10.81:/home/share nfs4       80G   34M   80G   1% /home/nfs             <span class="hljs-comment"># 已经挂载了NFS目录</span><br>tmpfs                     tmpfs     382M     0  382M   0% /run/user/0<br></code></pre></td></tr></table></figure><p>5、挂载持久化</p><div class="note note-warning">            <p>需要将挂载信息写入fstab，挂久生效，否则挂的目录，会在重启后失效。</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b ~]<span class="hljs-comment"># cat /etc/fstab </span><br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># /etc/fstab</span><br><span class="hljs-comment"># Created by anaconda on Fri Aug 19 11:48:24 2022</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk&#x27;</span><br><span class="hljs-comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span><br><span class="hljs-comment">#</span><br>/dev/mapper/centos-root /                       xfs     defaults        0 0<br>UUID=d8d7facd-702b-4b24-889e-ab62a41dc5e9 /boot                   xfs     defaults        0 0<br>/dev/mapper/centos-swap swap                    swap    defaults        0 0<br>192.168.10.81:/home/share       /home/nfs       nfs     defaults        0 0<br></code></pre></td></tr></table></figure><p>完成挂后，服务器上的nfs即同本地硬盘一样，对nfs文件系统的操作权限，参考nfs配置中的各个参数说明。</p><h3 id="动态挂截nfs目录"><a href="#动态挂截nfs目录" class="headerlink" title="动态挂截nfs目录"></a>动态挂截nfs目录</h3><blockquote><p>autofs 是一个可根据需要自动装入指定目录的程序。它基于一个内核模块运行以实现高效率，并且可以同时管理本地目录和网络共享。这些自动安装点仅会在被访问时装入，一定时间内不活动后即会被卸载。这种按需行为可节省带宽，并实现比 &#x2F;etc&#x2F;fstab 管理的静态装入更高的性能。虽然 autofs 是控制脚本，但 automount 才是实际执行自动装入的命令（守护程序）。</p></blockquote><blockquote><p>Autofs与Mount&#x2F;Umount的不同之处在于，它是一种看守程序。如果它检测到用户正试图访问一个尚未挂接的文件系统，它就会自动检测该文件系统，如果存在，那么Autofs会自动将其挂接。另一方面， 如果它检测到某个已挂接的文件系统在一段时间内没有被使用，那么Autofs会自动将其卸载。因此一旦运行了Autofs后，用户就不再需要手动完成文件系统的挂接和卸载。</p></blockquote><h4 id="安装autofs"><a href="#安装autofs" class="headerlink" title="安装autofs"></a>安装autofs</h4><p>在需要动态挂载的客户端上安装autofs。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install autofs<br></code></pre></td></tr></table></figure><h4 id="配置自动挂载"><a href="#配置自动挂载" class="headerlink" title="配置自动挂载"></a>配置自动挂载</h4><p>1、编辑autofa映射文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/auto.master<br><span class="hljs-comment"># 在末尾追加配置</span><br><br>/home   /etc/auto.nfs   --<span class="hljs-built_in">timeout</span>=10<br></code></pre></td></tr></table></figure><p>挂载目录为&#x2F;home下，NFS共享在&#x2F;etc&#x2F;auto.nfs映射中指定，共享在10秒不流动后自动卸载。</p><p>2、为NFS创建映射文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/auto.nfs<br><span class="hljs-comment"># 添加映射文件配置</span><br>[root@node71 etc]<span class="hljs-comment"># cat /etc/auto.nfs</span><br>nfs     192.168.10.81:/home/share<br></code></pre></td></tr></table></figure><div class="note note-warning">            <p>如果之前有在fstab中添加了挂截信息，需要将&#x2F;etc&#x2F;fstab中相关配置注释掉。</p>          </div><p>4、重新挂载autofs并检查是否正常</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@node71 etc]<span class="hljs-comment"># systemctl restart autofs</span><br>[root@node71 etc]<span class="hljs-comment"># systemctl status autofs</span><br>● autofs.service - Automounts filesystems on demand<br>   Loaded: loaded (/usr/lib/systemd/system/autofs.service; disabled; vendor preset: disabled)<br>   Active: active (running) since Thu 2022-09-22 13:35:39 CST; 4s ago<br> Main PID: 8468 (automount)<br>   CGroup: /system.slice/autofs.service<br>           └─8468 /usr/sbin/automount --systemd-service --dont-check-daemon<br><br>Sep 22 13:35:39 node71 systemd[1]: Starting Automounts filesystems on demand...<br>Sep 22 13:35:39 node71 systemd[1]: Started Automounts filesystems on demand.<br><br>[root@node71 home]<span class="hljs-comment"># ls -l /home/nfs</span><br>total 0<br>drwxr-xr-x 2 nfsnobody nfsnobody 22 Sep 19 12:11 <span class="hljs-built_in">test</span><br>[root@node71 home]<span class="hljs-comment"># df -hT</span><br>Filesystem              Type      Size  Used Avail Use% Mounted on<br>devtmpfs                devtmpfs  3.9G     0  3.9G   0% /dev<br>tmpfs                   tmpfs     3.9G  440K  3.9G   1% /dev/shm<br>tmpfs                   tmpfs     3.9G   17M  3.9G   1% /run<br>tmpfs                   tmpfs     3.9G     0  3.9G   0% /sys/fs/cgroup<br>/dev/mapper/centos-root xfs        48G  2.6G   46G   6% /<br>/dev/vda1               xfs      1014M  217M  798M  22% /boot<br>tmpfs                   tmpfs     782M     0  782M   0% /run/user/0<br><br>[root@node71 home]<span class="hljs-comment"># ls -al </span><br>total 0<br>drwxr-xr-x   2 root root   0 Sep 22 13:41 .<br>dr-xr-xr-x. 19 root root 247 Sep 22 13:40 ..<br>[root@node71 home]<span class="hljs-comment"># cd nfs          # 自动挂载nfs</span><br>[root@node71 nfs]<span class="hljs-comment"># ls -al </span><br>total 0<br>drwxr-xr-x 3 nfsnobody nfsnobody 18 Sep 19 12:10 .<br>drwxr-xr-x 3 root      root       0 Sep 22 13:43 ..<br>drwxr-xr-x 2 nfsnobody nfsnobody 22 Sep 19 12:11 <span class="hljs-built_in">test</span>   <span class="hljs-comment"># nfs目录中共享的测试目录</span><br>[root@node71 nfs]<span class="hljs-comment"># pwd</span><br>/home/nfs   <br>[root@node71 nfs]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><p>挂载信息验证：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@node71 nfs]<span class="hljs-comment"># grep /home/ /proc/mounts </span><br>192.168.10.81:/home/share /home/nfs nfs4 rw,relatime,vers=4.1,rsize=524288,wsize=524288,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,clientaddr=192.168.10.71,local_lock=none,addr=192.168.10.81 0 0<br></code></pre></td></tr></table></figure><div class="note note-info">            <p>至此NFS服务搭建，挂载，自动挂载相关的配置已经结束，文档参考<a class="btn" href="https://documentation.suse.com/zh-cn/sles/12-SP4/html/SLES-all/cha-autofs.html#sec-autofs-nfs"  title="suse 使用 Autofs 按需装入" target="_blank">suse 使用 Autofs 按需装入</a>。<br>NFS服务配置，也参考自<a class="btn" href="https://www.server-world.info/en/note?os=CentOS_Stream_8&p=nfs&f=1"  title="Configure NFS Server" target="_blank">Configure NFS Server</a></p>          </div>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>nfs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 7 RAID配置续</title>
    <link href="/2022/09/16/CentOS-7-RAID%E9%85%8D%E7%BD%AE%E7%BB%AD/"/>
    <url>/2022/09/16/CentOS-7-RAID%E9%85%8D%E7%BD%AE%E7%BB%AD/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-RAID配置续"><a href="#CentOS-7-RAID配置续" class="headerlink" title="CentOS 7 RAID配置续"></a>CentOS 7 RAID配置续</h1><p>独立冗余磁盘阵列（Redundant Array of Independent Disks，RAID），是把多块独立的磁盘（物理磁盘）按照一定的方式组合构建磁盘组（逻辑磁盘）。相比单个磁盘，能够提升存储性能和数据可靠性。</p><span id="more"></span><p>经过上文的实验配置，我们已经把创建、添加磁盘、重组阵列、文件系统扩容，按顺序实现了一遍。不过这些对于raid来说，还是缺少可靠性的测试验证。另外，操作归操作，还一和操作相关的各个理论，也是有补充的必要。所以，这个续篇，先接上文，补充一下和raid相关的理论。然后，再补上可靠性验证的操作。</p><h2 id="调整文件系统大小"><a href="#调整文件系统大小" class="headerlink" title="调整文件系统大小"></a>调整文件系统大小</h2><p>调整文件系统大小（不要与调整分区或卷大小混淆）可用于将物理卷上的空间变为可用状态，或使用物理卷上可用的其他空间。</p><h3 id="调整文件大小指导原则"><a href="#调整文件大小指导原则" class="headerlink" title="调整文件大小指导原则"></a>调整文件大小指导原则</h3><p>调整任何文件系统的大小都存在一定的风险，可能会造成数据遗失。</p><div class="note note-warning">            <p><span class="label label-warning">警告：</span><br>为了避免数据丢失，请确保在开始任何调整大小任务之前备份我们的数据。</p>          </div><p>计划调整文件系统大小时，请考虑以下指导原则。</p><h4 id="支持调整大小的文件系统"><a href="#支持调整大小的文件系统" class="headerlink" title="支持调整大小的文件系统"></a>支持调整大小的文件系统</h4><p>文件系统必须支持调整大小才能利用卷可用空间增加功能。</p><table><thead><tr><th>文件系统</th><th>实用程序</th><th>增大大小（增大）</th><th>减小大小（收缩）</th></tr></thead><tbody><tr><td>Btrfs</td><td>btrfs filesystem resize</td><td>联机</td><td>联机</td></tr><tr><td>XFS</td><td>xfs_growfs</td><td>联机</td><td>不支持</td></tr><tr><td>Ext2</td><td>resize2fs</td><td>联机或脱机</td><td>仅限脱机</td></tr><tr><td>Ext3</td><td>resize2fs</td><td>联机或脱机</td><td>仅限脱机</td></tr><tr><td>Ext4</td><td>resize2fs</td><td>联机或脱机</td><td>仅限脱机</td></tr><tr><td>ReiserFS</td><td>resize_reiserfs</td><td>联机或脱机</td><td>仅限脱机</td></tr></tbody></table><h4 id="增大文件系统的大小"><a href="#增大文件系统的大小" class="headerlink" title="增大文件系统的大小"></a>增大文件系统的大小</h4><p>我们可以将文件系统增大到设备上的最大可用空间，或指定一个准确大小。请确保在尝试增加文件系统的大小之前先增加设备或逻辑卷的大小。</p><p>为文件系统指定精确大小时，请确保新大小满足以下条件：</p><ul><li>新大小必须大于现有数据的大小；否则会发生数据丢失。</li><li>新大小必须等于或小于当前设备大小，因为文件系统大小不能超出可用空间。</li></ul><h4 id="减小文件系统的大小"><a href="#减小文件系统的大小" class="headerlink" title="减小文件系统的大小"></a>减小文件系统的大小</h4><p>当减小设备上的文件系统的大小时，请确保新的大小满足以下条件：</p><ul><li>新大小必须大于现有数据的大小；否则会发生数据丢失。</li><li>新大小必须等于或小于当前设备大小，因为文件系统大小不能超出可用空间。<br>如果还计划减小用于保存文件系统的逻辑卷的大小，请确保在尝试减小设备或逻辑卷的大小之前先减小文件系统的大小。</li></ul><div class="note note-info">            <p><span class="label label-info">重要：XFS</span><br>XFS格式文件系统的大小无法减少，因为XFS不支持此功能。</p>          </div><h3 id="更改Btrfs文件系统的大小"><a href="#更改Btrfs文件系统的大小" class="headerlink" title="更改Btrfs文件系统的大小"></a>更改Btrfs文件系统的大小</h3><p>装入 Btrfs 文件系统后，我们可以使用 btrfs filesystem resize 命令来更改该文件系统的大小。装入了文件系统时，增加和缩小大小均受支持。</p><div class="note note-info">            <p>使用 btrfs filesystem resize 命令通过下列其中一种方法更改文件系统的大小：</p><ul><li>要将文件系统大小扩展为设备的最大可用大小，请输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo btrfs filesystem resize max /mnt<br></code></pre></td></tr></table></figure><ul><li>要将文件系统扩展为指定大小，请输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo btrfs filesystem resize SIZE /mnt<br></code></pre></td></tr></table></figure><p>将 SIZE 替换为所需大小（以字节为单位）。我们还可以为值指定单位，例如 50000K (KB)、250M (MB) 或 2G (GB)。我们也可以在值前面加上加号 (+) 或减号 (-)，分别指定增加或缩小至目前的大小：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo btrfs filesystem resize +SIZE /mnt<br>sudo btrfs filesystem resize -SIZE /mnt<br></code></pre></td></tr></table></figure><p>通过输入以下命令，检查已装入文件系统的调整大小的结果</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><p>磁盘可用 (df) 命令显示磁盘的总大小、使用的块数以及文件系统上可用的块数。-h 选项会以可辨识的格式列印大小，如 1K、234M 或 2G。</p>          </div><h3 id="更改XFS文件系统的大小"><a href="#更改XFS文件系统的大小" class="headerlink" title="更改XFS文件系统的大小"></a>更改XFS文件系统的大小</h3><p>装入 XFS 文件系统后，我们可以使用 xfs_growfs 命令来增加该文件系统的大小。XFS 文件系统的大小无法减少。</p><div class="note note-info">            <ul><li>使用 xfs_growfs 命令增加文件系统的大小。下面的示例会将文件系统的大小扩充为最大可用值。请参见 man 8 xfs_growfs 了解更多选项。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo xfs_growfs -d /mnt<br></code></pre></td></tr></table></figure><ul><li>通过输入以下命令，检查已装入文件系统的调整大小的结果</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><p>磁盘可用 (df) 命令显示磁盘的总大小、使用的块数以及文件系统上可用的块数。-h 选项会以可辨识的格式列印大小，如 1K、234M 或 2G。</p>          </div><h3 id="更改Ext2、Ext3、Ext4文件系统的大小"><a href="#更改Ext2、Ext3、Ext4文件系统的大小" class="headerlink" title="更改Ext2、Ext3、Ext4文件系统的大小"></a>更改Ext2、Ext3、Ext4文件系统的大小</h3><p>不管是否装入了相应的分区，都可以使用 resize2fs 命令增加 Ext2、Ext3 和 Ext4 文件系统的大小。若要减少 Ext 文件系统的大小，需要将其卸载。</p><div class="note note-info">            <ul><li>要将文件系统大小扩展为名为 &#x2F;dev&#x2F;sda1 的设备的最大可用大小，请输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo resize2fs /dev/sda1<br></code></pre></td></tr></table></figure><p>如果未指定大小参数，大小将默认为该分区的大小。</p><ul><li>若要将文件系统更改为特定大小，请输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo resize2fs /dev/sda1 SIZE<br></code></pre></td></tr></table></figure><p>SIZE 参数指定为文件系统请求的新大小。如果不指定任何单位，则大小参数的单位是文件系统的块大小。也可以选择在大小参数后面加上下列其中一种单位指示项：s 表示 512 字节扇区；K 表示 KB（1 KB 为 1024 字节）；M 表示 MB；G 表示 GB。</p><ul><li>通过输入以下命令，检查已装入文件系统的调整大小的结果</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><p>磁盘可用 (df) 命令显示磁盘的总大小、使用的块数以及文件系统上可用的块数。-h 选项会以可辨识的格式列印大小，如 1K、234M 或 2G。</p>          </div><h3 id="更改Reiser文件系统的大小"><a href="#更改Reiser文件系统的大小" class="headerlink" title="更改Reiser文件系统的大小"></a>更改Reiser文件系统的大小</h3><p>ReiserFS 文件系统在装入或卸载时可增加大小。若要减少其大小，则需要将其卸载。</p><div class="note note-info">            <p>使用以下其中一种方法，更改名为 &#x2F;dev&#x2F;sda2 的设备上文件系统的大小：</p><ul><li>要将文件系统大小扩展为设备的最大可用大小，请输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo resize_reiserfs /dev/sda2<br></code></pre></td></tr></table></figure><p>不指定大小时，这会将卷增加到分区的完整大小。</p><ul><li>要将文件系统扩展为指定大小，请输入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo resize_reiserfs -s SIZE /dev/sda2<br></code></pre></td></tr></table></figure><p>将 SIZE 替换为所需大小（以字节为单位）。我们还可以为值指定单位，例如 50000K (KB)、250M (MB) 或 2G (GB)。我们也可以在值前面加上加号 (+) 或减号 (-)，分别指定增加或缩小至目前的大小：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo resize_reiserfs -s +SIZE /dev/sda2<br>sudo resize_reiserfs -s -SIZE /dev/sda2<br></code></pre></td></tr></table></figure><ul><li>通过输入以下命令，检查已装入文件系统的调整大小的结果</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -h<br></code></pre></td></tr></table></figure><p>磁盘可用 (df) 命令显示磁盘的总大小、使用的块数以及文件系统上可用的块数。-h 选项会以可辨识的格式列印大小，如 1K、234M 或 2G。</p>          </div><p>以上信息，参考自suse<a href="https://documentation.suse.com/zh-cn/sles/12-SP4/html/SLES-all/cha-resize-fs.html">官方文档</a>。</p><h2 id="常见的RAID磁盘阵列"><a href="#常见的RAID磁盘阵列" class="headerlink" title="常见的RAID磁盘阵列"></a>常见的RAID磁盘阵列</h2><table><thead><tr><th>RAID级别</th><th>简介</th><th>读写性能</th><th>安全性能</th><th>磁盘使用率</th><th>最少磁盘需求</th></tr></thead><tbody><tr><td>RAID0</td><td>RAID0将数据分条存储在多个磁盘上，可实现并行读写，提供最快的读写速率。</td><td>多个磁盘并行读写获取更高性能</td><td>最差,没有冗余能力，一个磁盘损坏，整个RAID阵列数据都不可用</td><td>100%</td><td>两块</td></tr><tr><td>RAID1</td><td>通过构造数据镜像实现数据冗余，阵列中一半的磁盘容量投入使用，另一半磁盘容量用来做镜像，提供数据备份。</td><td>读性能：与单个磁盘相同写性能：需要将数据写入是两个磁盘，写性能低于单个磁盘</td><td>最高,提供磁盘数据的完整备份，当阵列中的一个磁盘失效时，系统可以自动采用镜像磁盘的数据</td><td>50%</td><td>两块</td></tr><tr><td>RAID10</td><td>结合RAID1和RAID0两种磁盘阵列，先将磁盘两两组建成RAID1镜像，再组建RAID0将数据分条存储。</td><td>读性能：RAID0相同,写性能：RAID1相同</td><td>和RAID1的安全性能相同</td><td>50%</td><td>四块</td></tr><tr><td>RAID5</td><td>RAID5不需要单独指定数据校验磁盘，而是将每块磁盘生成的校验信息分块存储至阵列中的每块磁盘中。</td><td>读性能：和RAID0相同写性能：由于要写入奇偶校验信息，写性能低于单个磁盘</td><td>比RAID10的安全性能低</td><td>66.7%</td><td>三块</td></tr></tbody></table><p>以上信息参考自华为云<a href="https://support.huaweicloud.com/bestpractice-evs/evs_02_0019.html">文档</a>。</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>模拟一个磁盘故障，测试磁盘阵列及数据是否受影响。</p><p>之前已经创建的磁盘阵列，可以查看到热备盘及数据盘的状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a home]<span class="hljs-comment"># mdadm -E /dev/md0 </span><br>mdadm: No md superblock detected on /dev/md0.<br>[root@haproxy-node-a home]<span class="hljs-comment"># mdadm -D /dev/md0 </span><br>/dev/md0:<br>           Version : 1.2<br>     Creation Time : Fri Sep 16 14:04:54 2022<br>        Raid Level : raid5<br>        Array Size : 83816448 (79.93 GiB 85.83 GB)<br>     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)<br>      Raid Devices : 5<br>     Total Devices : 6<br>       Persistence : Superblock is persistent<br><br>       Update Time : Sat Sep 17 12:35:48 2022<br>             State : clean <br>    Active Devices : 5<br>   Working Devices : 6<br>    Failed Devices : 0<br>     Spare Devices : 1<br><br>            Layout : left-symmetric<br>        Chunk Size : 512K<br><br>Consistency Policy : resync<br><br>              Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>              UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>            Events : 149<br><br>    Number   Major   Minor   RaidDevice State<br>       0     252       16        0      active <span class="hljs-built_in">sync</span>   /dev/vdb<br>       1     252       32        1      active <span class="hljs-built_in">sync</span>   /dev/vdc<br>       4     252       48        2      active <span class="hljs-built_in">sync</span>   /dev/vdd<br>       5     252       80        3      active <span class="hljs-built_in">sync</span>   /dev/vdf<br>       3     252       64        4      active <span class="hljs-built_in">sync</span>   /dev/vde<br><br>       6     252       96        -      spare   /dev/vdg<br></code></pre></td></tr></table></figure><p>在md0挂载的目录中创建一个文件test.txt。<br>内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a home]<span class="hljs-comment"># cat test.txt </span><br>this is a <span class="hljs-built_in">test</span> file!<br></code></pre></td></tr></table></figure><h3 id="模拟vde磁盘故障"><a href="#模拟vde磁盘故障" class="headerlink" title="模拟vde磁盘故障"></a>模拟vde磁盘故障</h3><p>使用命令模拟vde磁盘故障，操作见下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a home]<span class="hljs-comment"># mdadm --manage /dev/md0 --fail /dev/vde</span><br>mdadm: <span class="hljs-built_in">set</span> /dev/vde faulty <span class="hljs-keyword">in</span> /dev/md0<br>[root@haproxy-node-a home]<span class="hljs-comment"># mdadm -D /dev/md0 </span><br>/dev/md0:<br>           Version : 1.2<br>     Creation Time : Fri Sep 16 14:04:54 2022<br>        Raid Level : raid5<br>        Array Size : 83816448 (79.93 GiB 85.83 GB)<br>     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)<br>      Raid Devices : 5<br>     Total Devices : 6<br>       Persistence : Superblock is persistent<br><br>       Update Time : Sat Sep 17 12:41:36 2022<br>             State : clean, degraded, recovering <br>    Active Devices : 4<br>   Working Devices : 5<br>    Failed Devices : 1<br>     Spare Devices : 1<br><br>            Layout : left-symmetric<br>        Chunk Size : 512K<br><br>Consistency Policy : resync<br><br>    Rebuild Status : 0% complete<br><br>              Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>              UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>            Events : 151<br><br>    Number   Major   Minor   RaidDevice State<br>       0     252       16        0      active <span class="hljs-built_in">sync</span>   /dev/vdb<br>       1     252       32        1      active <span class="hljs-built_in">sync</span>   /dev/vdc<br>       4     252       48        2      active <span class="hljs-built_in">sync</span>   /dev/vdd<br>       5     252       80        3      active <span class="hljs-built_in">sync</span>   /dev/vdf<br>       6     252       96        4      spare rebuilding   /dev/vdg     <span class="hljs-comment"># 原有的热备盘vdg已经在重构了。</span><br><br>       3     252       64        -      faulty   /dev/vde       <span class="hljs-comment"># 这里可以看到vde状态已经出错</span><br></code></pre></td></tr></table></figure><p>这里可以查看vdg的重构进度：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a home]<span class="hljs-comment"># cat /proc/mdstat </span><br>Personalities : [raid6] [raid5] [raid4] <br>md0 : active raid5 vdg[6] vdf[5] vdd[4] vde[3](F) vdc[1] vdb[0]<br>      83816448 blocks super 1.2 level 5, 512k chunk, algorithm 2 [5/4] [UUUU_]<br>      [====&gt;................]  recovery = 21.2% (4448384/20954112) finish=17.5min speed=15645K/sec<br>      <br>unused devices: &lt;none&gt;<br></code></pre></td></tr></table></figure><p>接下来是等待重构完成。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a home]<span class="hljs-comment"># mdadm -D /dev/md0 </span><br>/dev/md0:<br>           Version : 1.2<br>     Creation Time : Fri Sep 16 14:04:54 2022<br>        Raid Level : raid5<br>        Array Size : 83816448 (79.93 GiB 85.83 GB)<br>     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)<br>      Raid Devices : 5<br>     Total Devices : 6<br>       Persistence : Superblock is persistent<br><br>       Update Time : Sat Sep 17 13:02:45 2022<br>             State : clean <br>    Active Devices : 5<br>   Working Devices : 5<br>    Failed Devices : 1<br>     Spare Devices : 0<br><br>            Layout : left-symmetric<br>        Chunk Size : 512K<br><br>Consistency Policy : resync<br><br>              Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>              UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>            Events : 176<br><br>    Number   Major   Minor   RaidDevice State<br>       0     252       16        0      active <span class="hljs-built_in">sync</span>   /dev/vdb<br>       1     252       32        1      active <span class="hljs-built_in">sync</span>   /dev/vdc<br>       4     252       48        2      active <span class="hljs-built_in">sync</span>   /dev/vdd<br>       5     252       80        3      active <span class="hljs-built_in">sync</span>   /dev/vdf<br>       6     252       96        4      active <span class="hljs-built_in">sync</span>   /dev/vdg      <span class="hljs-comment"># 热备盘已经正常同步。</span><br><br>       3     252       64        -      faulty   /dev/vde<br></code></pre></td></tr></table></figure><p>我们可以验证，在一块磁盘故障的情况下，数据是否存在变化。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a home]<span class="hljs-comment"># ll</span><br>total 4<br>-rw-r--r--. 1 root root 21 Sep 17 12:34 test.txt<br>[root@haproxy-node-a home]<span class="hljs-comment"># cat test.txt </span><br>this is a <span class="hljs-built_in">test</span> file!<br></code></pre></td></tr></table></figure><div class="note note-info">            <p>在单块硬盘故障的情况下，热备盘会自动重构，故障盘状态为faulty，磁盘阵列中的数据保持不变。</p>          </div><h3 id="移除故障盘"><a href="#移除故障盘" class="headerlink" title="移除故障盘"></a>移除故障盘</h3><p>如上实验，已经故障的vde磁盘，可以移除，并添加新的磁盘，用于替代热备，来保证数据的完整性。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a home]<span class="hljs-comment"># mdadm /dev/md0 -r /dev/vde</span><br>mdadm: hot removed /dev/vde from /dev/md0               <span class="hljs-comment"># 移除了故障的磁盘</span><br>[root@haproxy-node-a home]<span class="hljs-comment"># mdadm -D /dev/md0 </span><br>/dev/md0:<br>           Version : 1.2<br>     Creation Time : Fri Sep 16 14:04:54 2022<br>        Raid Level : raid5<br>        Array Size : 83816448 (79.93 GiB 85.83 GB)<br>     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)<br>      Raid Devices : 5<br>     Total Devices : 5<br>       Persistence : Superblock is persistent<br><br>       Update Time : Sat Sep 17 13:08:40 2022<br>             State : clean <br>    Active Devices : 5<br>   Working Devices : 5<br>    Failed Devices : 0<br>     Spare Devices : 0<br><br>            Layout : left-symmetric<br>        Chunk Size : 512K<br><br>Consistency Policy : resync<br><br>              Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>              UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>            Events : 177<br><br>    Number   Major   Minor   RaidDevice State<br>       0     252       16        0      active <span class="hljs-built_in">sync</span>   /dev/vdb<br>       1     252       32        1      active <span class="hljs-built_in">sync</span>   /dev/vdc<br>       4     252       48        2      active <span class="hljs-built_in">sync</span>   /dev/vdd<br>       5     252       80        3      active <span class="hljs-built_in">sync</span>   /dev/vdf<br>       6     252       96        4      active <span class="hljs-built_in">sync</span>   /dev/vdg<br><br><span class="hljs-comment"># 如上状态，vde已经移除，原有的vdg热备盘已经完成raid重构。我们再看一下挂载的目录是否有变化</span><br><br>[root@haproxy-node-a home]<span class="hljs-comment"># df -hT</span><br>Filesystem              Type      Size  Used Avail Use% Mounted on<br>devtmpfs                devtmpfs  874M     0  874M   0% /dev<br>tmpfs                   tmpfs     886M  320K  885M   1% /dev/shm<br>tmpfs                   tmpfs     886M   17M  869M   2% /run<br>tmpfs                   tmpfs     886M     0  886M   0% /sys/fs/cgroup<br>/dev/mapper/centos-root xfs        47G  2.5G   45G   6% /<br>/dev/vda1               xfs      1014M  186M  829M  19% /boot<br>/dev/md0                xfs        80G   34M   80G   1% /home          <span class="hljs-comment"># 和移除硬盘前一致</span><br>tmpfs                   tmpfs     382M     0  382M   0% /run/user/0<br></code></pre></td></tr></table></figure><h3 id="换上新的热备盘"><a href="#换上新的热备盘" class="headerlink" title="换上新的热备盘"></a>换上新的热备盘</h3><p>到这里，验证的部分，已经完成了磁盘故障，热备盘重构，移除故障盘。接下来，缺的还需要补上，操作参考上一篇的扩容操作，只需要添加一块新的磁盘做为热备盘即可。</p><h4 id="添加硬盘并格式化"><a href="#添加硬盘并格式化" class="headerlink" title="添加硬盘并格式化"></a>添加硬盘并格式化</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a home]<span class="hljs-comment"># fdisk -l</span><br><br>Disk /dev/vda: 53.7 GB, 53687091200 bytes, 104857600 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0x000a9efb<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vda1   *        2048     2099199     1048576   83  Linux<br>/dev/vda2         2099200   104857599    51379200   8e  Linux LVM<br><br>Disk /dev/mapper/centos-root: 50.5 GB, 50457477120 bytes, 98549760 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br><br><br>Disk /dev/mapper/centos-swap: 2147 MB, 2147483648 bytes, 4194304 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br><br><br>Disk /dev/vdb: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0xaa22accc<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vdb1            2048    41943039    20970496   fd  Linux raid autodetect<br><br>Disk /dev/vdc: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0xbd7a8d98<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vdc1            2048    41943039    20970496   fd  Linux raid autodetect<br><br>Disk /dev/vdd: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0x01dada7d<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vdd1            2048    41943039    20970496   fd  Linux raid autodetect<br><br>Disk /dev/vde: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0x9b826ee3<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vde1            2048    41943039    20970496   fd  Linux raid autodetect<br><br>Disk /dev/md0: 85.8 GB, 85828042752 bytes, 167632896 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 524288 bytes / 1048576 bytes<br><br><br>Disk /dev/vdf: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0xea86a973<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vdf1            2048    41943039    20970496   fd  Linux raid autodetect<br><br>Disk /dev/vdg: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0xff30ed57<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vdg1            2048    41943039    20970496   fd  Linux raid autodetect<br><br>Disk /dev/vdh: 21.5 GB, 21474836480 bytes, 41943040 sectors     <span class="hljs-comment"># 新添加的热备盘</span><br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br><br>[root@haproxy-node-a home]<span class="hljs-comment"># fdisk /dev/vdh      # 格式化新添加的盘</span><br>Welcome to fdisk (util-linux 2.23.2).<br><br>Changes will remain <span class="hljs-keyword">in</span> memory only, until you decide to write them.<br>Be careful before using the write <span class="hljs-built_in">command</span>.<br><br>Device does not contain a recognized partition table<br>Building a new DOS disklabel with disk identifier 0xa29b128b.<br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): n<br>Partition <span class="hljs-built_in">type</span>:<br>   p   primary (0 primary, 0 extended, 4 free)<br>   e   extended<br>Select (default p): p<br>Partition number (1-4, default 1): <br>First sector (2048-41943039, default 2048): <br>Using default value 2048<br>Last sector, +sectors or +size&#123;K,M,G&#125; (2048-41943039, default 41943039): <br>Using default value 41943039<br>Partition 1 of <span class="hljs-built_in">type</span> Linux and of size 20 GiB is <span class="hljs-built_in">set</span><br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): t<br>Selected partition 1<br>Hex code (<span class="hljs-built_in">type</span> L to list all codes): fd<br>Changed <span class="hljs-built_in">type</span> of partition <span class="hljs-string">&#x27;Linux&#x27;</span> to <span class="hljs-string">&#x27;Linux raid autodetect&#x27;</span><br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): w<br>The partition table has been altered!<br><br>Calling ioctl() to re-read partition table.<br>Syncing disks.<br></code></pre></td></tr></table></figure><h4 id="扩容热备盘至md0"><a href="#扩容热备盘至md0" class="headerlink" title="扩容热备盘至md0"></a>扩容热备盘至md0</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a home]<span class="hljs-comment"># mdadm --manage /dev/md0 --add /dev/vdh</span><br>mdadm: added /dev/vdh<br></code></pre></td></tr></table></figure><p>再次查看md0状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a home]<span class="hljs-comment"># mdadm -D /dev/md0 </span><br>/dev/md0:<br>           Version : 1.2<br>     Creation Time : Fri Sep 16 14:04:54 2022<br>        Raid Level : raid5<br>        Array Size : 83816448 (79.93 GiB 85.83 GB)<br>     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)<br>      Raid Devices : 5<br>     Total Devices : 6<br>       Persistence : Superblock is persistent<br><br>       Update Time : Sat Sep 17 13:23:08 2022<br>             State : clean <br>    Active Devices : 5<br>   Working Devices : 6<br>    Failed Devices : 0<br>     Spare Devices : 1<br><br>            Layout : left-symmetric<br>        Chunk Size : 512K<br><br>Consistency Policy : resync<br><br>              Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>              UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>            Events : 178<br><br>    Number   Major   Minor   RaidDevice State<br>       0     252       16        0      active <span class="hljs-built_in">sync</span>   /dev/vdb<br>       1     252       32        1      active <span class="hljs-built_in">sync</span>   /dev/vdc<br>       4     252       48        2      active <span class="hljs-built_in">sync</span>   /dev/vdd<br>       5     252       80        3      active <span class="hljs-built_in">sync</span>   /dev/vdf<br>       6     252       96        4      active <span class="hljs-built_in">sync</span>   /dev/vdg<br><br>       7     252      112        -      spare   /dev/vdh        <span class="hljs-comment"># 新添加的磁盘已经成为了md0的热备盘</span><br></code></pre></td></tr></table></figure><div class="note note-access">            <p>至此已经完成raid 5创建，扩容，调整文件系统大小，模拟磁盘故障，热备盘重构，移除故障盘，添加新的磁盘，格式化，添加至md0，成为新的热备盘。raid 5创建与故障恢复的测试已经完成。</p>          </div><div class="note note-warning">            <p>在所有变更磁盘，重构raid后，一定不要忘记重写将mdadm配置信息写入配置文件中。<br>mdadm -D –scan &gt; &#x2F;etc&#x2F;mdadm.conf<br>这个非常重要。</p>          </div>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>linux</tag>
      
      <tag>RAID</tag>
      
      <tag>mdadm</tag>
      
      <tag>file system</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 7 RAID配置</title>
    <link href="/2022/09/16/CentOS-7-RAID%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/09/16/CentOS-7-RAID%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-RAID配置"><a href="#CentOS-7-RAID配置" class="headerlink" title="CentOS 7 RAID配置"></a>CentOS 7 RAID配置</h1><p>mdadm是multiple devices admin的简称，它是Linux下的一款标准的软件 RAID 管理工具。</p><span id="more"></span><p>在linux系统中目前以MD(Multiple Devices)虚拟块设备的方式实现软件RAID,利用多个底层的块设备虚拟出一个新的虚拟设备,并且利用条带化(stripping)技术将数据块均匀分布到多个磁盘上来提高虚拟设备的读写性能,利用不同的数据冗祭算法来保护用户数据不会因为某个块设备的故障而完全丢失,而且还能在设备被替换后将丢失的数据恢复到新的设备上。</p><p>目前MD支持linear,multipath,raid0(stripping),raid1(mirror),raid4,raid5,raid6,raid10等不同的冗余级别和级成方式,当然也能支持多个RAID陈列的层叠组成raid1 0,raid5 1等类型的陈列。</p><h2 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h2><p>正常情况，可以通过服务器上的raid 阵列卡，来创建RAID磁盘。如果服务器上没有raid 阵列卡，也可以尝试使用mdadm创建软raid。实验在正常的虚拟机上添加四块硬盘，组成raid 5磁盘阵列， 三个块数据加一块备份。</p><h3 id="添加磁盘"><a href="#添加磁盘" class="headerlink" title="添加磁盘"></a>添加磁盘</h3><p>给虚拟机添加四块磁盘，磁盘编号从vd{b,c,d,e}。系统查看已添加的四块磁盘。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># fdisk -l</span><br><br>Disk /dev/vda: 53.7 GB, 53687091200 bytes, 104857600 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0x000a9efb<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vda1   *        2048     2099199     1048576   83  Linux<br>/dev/vda2         2099200   104857599    51379200   8e  Linux LVM<br><br>Disk /dev/mapper/centos-root: 50.5 GB, 50457477120 bytes, 98549760 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br><br><br>Disk /dev/mapper/centos-swap: 2147 MB, 2147483648 bytes, 4194304 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br><br><br>Disk /dev/vdb: 21.5 GB, 21474836480 bytes, 41943040 sectors         <span class="hljs-comment"># 新添加的磁盘1</span><br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br><br>Disk /dev/vdc: 21.5 GB, 21474836480 bytes, 41943040 sectors         <span class="hljs-comment"># 新添加的磁盘2</span><br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br><br><br>Disk /dev/vdd: 21.5 GB, 21474836480 bytes, 41943040 sectors         <span class="hljs-comment"># 新添加的磁盘3</span><br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br><br><br>Disk /dev/vde: 21.5 GB, 21474836480 bytes, 41943040 sectors         <span class="hljs-comment"># 新添加的磁盘4</span><br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br></code></pre></td></tr></table></figure><p>查看原有的文件系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># df -hT</span><br>Filesystem              Type      Size  Used Avail Use% Mounted on<br>devtmpfs                devtmpfs  874M     0  874M   0% /dev<br>tmpfs                   tmpfs     886M  180K  885M   1% /dev/shm<br>tmpfs                   tmpfs     886M   17M  869M   2% /run<br>tmpfs                   tmpfs     886M     0  886M   0% /sys/fs/cgroup<br>/dev/mapper/centos-root xfs        47G  2.5G   45G   6% /<br>/dev/vda1               xfs      1014M  186M  829M  19% /boot<br>tmpfs                   tmpfs     382M     0  382M   0% /run/user/0<br></code></pre></td></tr></table></figure><p>可以看到CentOS的文件系统为xfs。以及各目录挂载的位置。</p><h3 id="磁盘检查"><a href="#磁盘检查" class="headerlink" title="磁盘检查"></a>磁盘检查</h3><p>新添加的磁盘，可以先检查一下，是否已经做过raid。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mdadm -E /dev/vd&#123;b,c,d,e&#125;<br></code></pre></td></tr></table></figure><h3 id="磁盘分区初始化"><a href="#磁盘分区初始化" class="headerlink" title="磁盘分区初始化"></a>磁盘分区初始化</h3><p>分别对新添加的四块磁盘进行分区操作，主要包含以下操作：</p><ul><li>创建新分区 n</li><li>选择分区类型 l</li><li>调整分区类型 t</li><li>Linux raid auto fd</li><li>保存分区配置 w</li><li>查看分区信息 p</li></ul><p>以vdc为例，参考命令块内容操作，其它三个操作一样。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># fdisk /dev/vdc </span><br>Welcome to fdisk (util-linux 2.23.2).<br><br>Changes will remain <span class="hljs-keyword">in</span> memory only, until you decide to write them.<br>Be careful before using the write <span class="hljs-built_in">command</span>.<br><br>Device does not contain a recognized partition table<br>Building a new DOS disklabel with disk identifier 0xbd7a8d98.<br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): p<br><br>Disk /dev/vdc: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0xbd7a8d98<br><br>   Device Boot      Start         End      Blocks   Id  System<br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): n<br>Partition <span class="hljs-built_in">type</span>:<br>   p   primary (0 primary, 0 extended, 4 free)<br>   e   extended<br>Select (default p): p<br>Partition number (1-4, default 1): <br>First sector (2048-41943039, default 2048): <br>Using default value 2048<br>Last sector, +sectors or +size&#123;K,M,G&#125; (2048-41943039, default 41943039): <br>Using default value 41943039<br>Partition 1 of <span class="hljs-built_in">type</span> Linux and of size 20 GiB is <span class="hljs-built_in">set</span><br><br>Command (m <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>): l<br><br> 0  Empty           24  NEC DOS         81  Minix / old Lin bf  Solaris        <br> 1  FAT12           27  Hidden NTFS Win 82  Linux swap / So c1  DRDOS/sec (FAT-<br> 2  XENIX root      39  Plan 9          83  Linux           c4  DRDOS/sec (FAT-<br> 3  XENIX usr       3c  PartitionMagic  84  OS/2 hidden C:  c6  DRDOS/sec (FAT-<br> 4  FAT16 &lt;32M      40  Venix 80286     85  Linux extended  c7  Syrinx         <br> 5  Extended        41  PPC PReP Boot   86  NTFS volume <span class="hljs-built_in">set</span> da  Non-FS data    <br> 6  FAT16           42  SFS             87  NTFS volume <span class="hljs-built_in">set</span> db  CP/M / CTOS / .<br> 7  HPFS/NTFS/exFAT 4d  QNX4.x          88  Linux plaintext de  Dell Utility   <br> 8  AIX             4e  QNX4.x 2nd part 8e  Linux LVM       <span class="hljs-built_in">df</span>  BootIt         <br> 9  AIX bootable    4f  QNX4.x 3rd part 93  Amoeba          e1  DOS access     <br> a  OS/2 Boot Manag 50  OnTrack DM      94  Amoeba BBT      e3  DOS R/O        <br> b  W95 FAT32       51  OnTrack DM6 Aux 9f  BSD/OS          e4  SpeedStor      <br> c  W95 FAT32 (LBA) 52  CP/M            a0  IBM Thinkpad hi eb  BeOS fs        <br> e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a5  FreeBSD         ee  GPT            <br> f  W95 Ext<span class="hljs-string">&#x27;d (LBA) 54  OnTrackDM6      a6  OpenBSD         ef  EFI (FAT-12/16/</span><br><span class="hljs-string">10  OPUS            55  EZ-Drive        a7  NeXTSTEP        f0  Linux/PA-RISC b</span><br><span class="hljs-string">11  Hidden FAT12    56  Golden Bow      a8  Darwin UFS      f1  SpeedStor      </span><br><span class="hljs-string">12  Compaq diagnost 5c  Priam Edisk     a9  NetBSD          f4  SpeedStor      </span><br><span class="hljs-string">14  Hidden FAT16 &lt;3 61  SpeedStor       ab  Darwin boot     f2  DOS secondary  </span><br><span class="hljs-string">16  Hidden FAT16    63  GNU HURD or Sys af  HFS / HFS+      fb  VMware VMFS    </span><br><span class="hljs-string">17  Hidden HPFS/NTF 64  Novell Netware  b7  BSDI fs         fc  VMware VMKCORE </span><br><span class="hljs-string">18  AST SmartSleep  65  Novell Netware  b8  BSDI swap       fd  Linux raid auto</span><br><span class="hljs-string">1b  Hidden W95 FAT3 70  DiskSecure Mult bb  Boot Wizard hid fe  LANstep        </span><br><span class="hljs-string">1c  Hidden W95 FAT3 75  PC/IX           be  Solaris boot    ff  BBT            </span><br><span class="hljs-string">1e  Hidden W95 FAT1 80  Old Minix      </span><br><span class="hljs-string"></span><br><span class="hljs-string">Command (m for help): t</span><br><span class="hljs-string">Selected partition 1</span><br><span class="hljs-string">Hex code (type L to list all codes): fd</span><br><span class="hljs-string">Changed type of partition &#x27;</span>Linux<span class="hljs-string">&#x27; to &#x27;</span>Linux raid autodetect<span class="hljs-string">&#x27;</span><br><span class="hljs-string"></span><br><span class="hljs-string">Command (m for help): w</span><br><span class="hljs-string">The partition table has been altered!</span><br><span class="hljs-string"></span><br><span class="hljs-string">Calling ioctl() to re-read partition table.</span><br><span class="hljs-string">Syncing disks.</span><br></code></pre></td></tr></table></figure><h3 id="验证分区是否为RAID"><a href="#验证分区是否为RAID" class="headerlink" title="验证分区是否为RAID"></a>验证分区是否为RAID</h3><p>再次检查已经分区过的磁盘，得到分区信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># mdadm -E /dev/vd&#123;b,c,d,e&#125;</span><br>/dev/vdb:<br>   MBR Magic : aa55<br>Partition[0] :     41940992 sectors at         2048 (<span class="hljs-built_in">type</span> fd)<br>/dev/vdc:<br>   MBR Magic : aa55<br>Partition[0] :     41940992 sectors at         2048 (<span class="hljs-built_in">type</span> fd)<br>/dev/vdd:<br>   MBR Magic : aa55<br>Partition[0] :     41940992 sectors at         2048 (<span class="hljs-built_in">type</span> fd)<br>/dev/vde:<br>   MBR Magic : aa55<br>Partition[0] :     41940992 sectors at         2048 (<span class="hljs-built_in">type</span> fd)<br></code></pre></td></tr></table></figure><h3 id="创建raid-5磁盘"><a href="#创建raid-5磁盘" class="headerlink" title="创建raid 5磁盘"></a>创建raid 5磁盘</h3><div class="note note-info">            <p>mdadm -n 指定磁盘数量， -x 指定备份盘数量， -l 指定raid 级别，数字 5 或 raid5 均可，最后指定原如磁盘设备。</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># mdadm -Cv /dev/md0 -n3 -l raid5 -x 1 /dev/vd&#123;b,c,d,e&#125;</span><br>mdadm: layout defaults to left-symmetric<br>mdadm: layout defaults to left-symmetric<br>mdadm: chunk size defaults to 512K<br>mdadm: partition table exists on /dev/vdb<br>mdadm: partition table exists on /dev/vdb but will be lost or<br>       meaningless after creating array<br>mdadm: partition table exists on /dev/vdc<br>mdadm: partition table exists on /dev/vdc but will be lost or<br>       meaningless after creating array<br>mdadm: partition table exists on /dev/vdd<br>mdadm: partition table exists on /dev/vdd but will be lost or<br>       meaningless after creating array<br>mdadm: partition table exists on /dev/vde<br>mdadm: partition table exists on /dev/vde but will be lost or<br>       meaningless after creating array<br>mdadm: size <span class="hljs-built_in">set</span> to 20954112K<br>Continue creating array? y<br>mdadm: Defaulting to version 1.2 metadata<br>mdadm: array /dev/md0 started.<br></code></pre></td></tr></table></figure><h3 id="查看raid-创建信息"><a href="#查看raid-创建信息" class="headerlink" title="查看raid 创建信息"></a>查看raid 创建信息</h3><p>创建raid 5 磁盘阵列，可以查看raid创建的进度，见下结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># cat /proc/mdstat</span><br>Personalities : [raid6] [raid5] [raid4] <br>md0 : active raid5 vdd[4] vde[3](S) vdc[1] vdb[0]<br>      41908224 blocks super 1.2 level 5, 512k chunk, algorithm 2 [3/2] [UU_]<br>      [===============&gt;.....]  recovery = 75.3% (15780992/20954112) finish=0.8min speed=105513K/sec<br>      <br>unused devices: &lt;none&gt;<br>[root@haproxy-node-a ~]<span class="hljs-comment"># cat /proc/mdstat</span><br>Personalities : [raid6] [raid5] [raid4] <br>md0 : active raid5 vdd[4] vde[3](S) vdc[1] vdb[0]<br>      41908224 blocks super 1.2 level 5, 512k chunk, algorithm 2 [3/2] [UU_]<br>      [=================&gt;...]  recovery = 88.4% (18524672/20954112) finish=0.3min speed=104563K/sec<br>      <br>unused devices: &lt;none&gt;<br>[root@haproxy-node-a ~]<span class="hljs-comment"># cat /proc/mdstat</span><br>Personalities : [raid6] [raid5] [raid4] <br>md0 : active raid5 vdd[4] vde[3](S) vdc[1] vdb[0]<br>      41908224 blocks super 1.2 level 5, 512k chunk, algorithm 2 [3/3] [UUU]<br>      <br>unused devices: &lt;none&gt;<br></code></pre></td></tr></table></figure><h3 id="查看raid-5的信息"><a href="#查看raid-5的信息" class="headerlink" title="查看raid 5的信息"></a>查看raid 5的信息</h3><p>同样使用上面的验证命令，这次得到下面的结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># mdadm -E /dev/vd&#123;b,c,d,e&#125;</span><br>/dev/vdb:<br>          Magic : a92b4efc<br>        Version : 1.2<br>    Feature Map : 0x0<br>     Array UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>           Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>  Creation Time : Fri Sep 16 14:04:54 2022<br>     Raid Level : raid5<br>   Raid Devices : 3<br><br> Avail Dev Size : 41908224 sectors (19.98 GiB 21.46 GB)<br>     Array Size : 41908224 KiB (39.97 GiB 42.91 GB)<br>    Data Offset : 34816 sectors<br>   Super Offset : 8 sectors<br>   Unused Space : before=34664 sectors, after=0 sectors<br>          State : clean<br>    Device UUID : 3b365a02:36b9e4fd:ea3f65fc:f5488542<br><br>    Update Time : Fri Sep 16 14:08:20 2022<br>  Bad Block Log : 512 entries available at offset 136 sectors<br>       Checksum : 1086a417 - correct<br>         Events : 18<br><br>         Layout : left-symmetric<br>     Chunk Size : 512K<br><br>   Device Role : Active device 0        <span class="hljs-comment"># 可以看到vdb为激活状态</span><br>   Array State : AAA (<span class="hljs-string">&#x27;A&#x27;</span> == active, <span class="hljs-string">&#x27;.&#x27;</span> == missing, <span class="hljs-string">&#x27;R&#x27;</span> == replacing)<br>/dev/vdc:<br>          Magic : a92b4efc<br>        Version : 1.2<br>    Feature Map : 0x0<br>     Array UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>           Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>  Creation Time : Fri Sep 16 14:04:54 2022<br>     Raid Level : raid5<br>   Raid Devices : 3<br><br> Avail Dev Size : 41908224 sectors (19.98 GiB 21.46 GB)<br>     Array Size : 41908224 KiB (39.97 GiB 42.91 GB)<br>    Data Offset : 34816 sectors<br>   Super Offset : 8 sectors<br>   Unused Space : before=34664 sectors, after=0 sectors<br>          State : clean<br>    Device UUID : ae142c9c:9c01f688:82e21f85:4da922be<br><br>    Update Time : Fri Sep 16 14:08:20 2022<br>  Bad Block Log : 512 entries available at offset 136 sectors<br>       Checksum : 39c1cde1 - correct<br>         Events : 18<br><br>         Layout : left-symmetric<br>     Chunk Size : 512K<br><br>   Device Role : Active device 1        <span class="hljs-comment"># 可以看到vdc为激活状态</span><br>   Array State : AAA (<span class="hljs-string">&#x27;A&#x27;</span> == active, <span class="hljs-string">&#x27;.&#x27;</span> == missing, <span class="hljs-string">&#x27;R&#x27;</span> == replacing)<br>/dev/vdd:<br>          Magic : a92b4efc<br>        Version : 1.2<br>    Feature Map : 0x0<br>     Array UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>           Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>  Creation Time : Fri Sep 16 14:04:54 2022<br>     Raid Level : raid5<br>   Raid Devices : 3<br><br> Avail Dev Size : 41908224 sectors (19.98 GiB 21.46 GB)<br>     Array Size : 41908224 KiB (39.97 GiB 42.91 GB)<br>    Data Offset : 34816 sectors<br>   Super Offset : 8 sectors<br>   Unused Space : before=34664 sectors, after=0 sectors<br>          State : clean<br>    Device UUID : 2ee270bf:4403d299:95a0f6f2:c4cd9ea5<br><br>    Update Time : Fri Sep 16 14:08:20 2022<br>  Bad Block Log : 512 entries available at offset 136 sectors<br>       Checksum : c3357f96 - correct<br>         Events : 18<br><br>         Layout : left-symmetric<br>     Chunk Size : 512K<br><br>   Device Role : Active device 2        <span class="hljs-comment"># 可以看到vdd为激活状态</span><br>   Array State : AAA (<span class="hljs-string">&#x27;A&#x27;</span> == active, <span class="hljs-string">&#x27;.&#x27;</span> == missing, <span class="hljs-string">&#x27;R&#x27;</span> == replacing)<br>/dev/vde:<br>          Magic : a92b4efc<br>        Version : 1.2<br>    Feature Map : 0x0<br>     Array UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>           Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>  Creation Time : Fri Sep 16 14:04:54 2022<br>     Raid Level : raid5<br>   Raid Devices : 3<br><br> Avail Dev Size : 41908224 sectors (19.98 GiB 21.46 GB)<br>     Array Size : 41908224 KiB (39.97 GiB 42.91 GB)<br>    Data Offset : 34816 sectors<br>   Super Offset : 8 sectors<br>   Unused Space : before=34664 sectors, after=0 sectors<br>          State : clean<br>    Device UUID : 452bfa49:99adb562:7602a209:20b2ff3f<br><br>    Update Time : Fri Sep 16 14:08:20 2022<br>  Bad Block Log : 512 entries available at offset 136 sectors<br>       Checksum : c7aeb93c - correct<br>         Events : 18<br><br>         Layout : left-symmetric<br>     Chunk Size : 512K<br><br>   Device Role : spare          <span class="hljs-comment"># 可以看到vde为备份盘</span><br>   Array State : AAA (<span class="hljs-string">&#x27;A&#x27;</span> == active, <span class="hljs-string">&#x27;.&#x27;</span> == missing, <span class="hljs-string">&#x27;R&#x27;</span> == replacing)<br></code></pre></td></tr></table></figure><p>上面的信息输出太多了，还可以这样看md的状态，新创建的raid从0开始编号。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># mdadm -D /dev/md0 </span><br>/dev/md0:<br>           Version : 1.2<br>     Creation Time : Fri Sep 16 14:04:54 2022<br>        Raid Level : raid5<br>        Array Size : 41908224 (39.97 GiB 42.91 GB)<br>     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)<br>      Raid Devices : 3<br>     Total Devices : 4<br>       Persistence : Superblock is persistent<br><br>       Update Time : Fri Sep 16 14:08:20 2022<br>             State : clean <br>    Active Devices : 3<br>   Working Devices : 4<br>    Failed Devices : 0<br>     Spare Devices : 1<br><br>            Layout : left-symmetric<br>        Chunk Size : 512K<br><br>Consistency Policy : resync<br><br>              Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>              UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>            Events : 18<br><br>    Number   Major   Minor   RaidDevice State<br>       0     252       16        0      active <span class="hljs-built_in">sync</span>   /dev/vdb<br>       1     252       32        1      active <span class="hljs-built_in">sync</span>   /dev/vdc<br>       4     252       48        2      active <span class="hljs-built_in">sync</span>   /dev/vdd<br><br>       3     252       64        -      spare   /dev/vde<br></code></pre></td></tr></table></figure><p>如创建的一样，b、c、d三块盘为活跃状态，e为备份盘。</p><h3 id="格式化并挂载raid"><a href="#格式化并挂载raid" class="headerlink" title="格式化并挂载raid"></a>格式化并挂载raid</h3><p>至此我们已经将raid 5创建好了，只需要把md0当成一块正常添加的磁盘使用即可。如实验，将md0格式化为xfs文件系统，并挂载在&#x2F;home目录下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># mkfs.xfs -f /dev/md0       </span><br>meta-data=/dev/md0               isize=512    agcount=16, agsize=654720 blks<br>         =                       sectsz=512   attr=2, projid32bit=1<br>         =                       crc=1        finobt=0, sparse=0<br>data     =                       bsize=4096   blocks=10475520, imaxpct=25<br>         =                       sunit=128    swidth=256 blks<br>naming   =version 2              bsize=4096   ascii-ci=0 ftype=1<br><span class="hljs-built_in">log</span>      =internal <span class="hljs-built_in">log</span>           bsize=4096   blocks=5120, version=2<br>         =                       sectsz=512   sunit=8 blks, lazy-count=1<br>realtime =none                   extsz=4096   blocks=0, rtextents=0<br><br><br><br>[root@haproxy-node-a ~]<span class="hljs-comment"># df -hT</span><br>Filesystem              Type      Size  Used Avail Use% Mounted on<br>devtmpfs                devtmpfs  874M     0  874M   0% /dev<br>tmpfs                   tmpfs     886M  200K  885M   1% /dev/shm<br>tmpfs                   tmpfs     886M   17M  869M   2% /run<br>tmpfs                   tmpfs     886M     0  886M   0% /sys/fs/cgroup<br>/dev/mapper/centos-root xfs        47G  2.5G   45G   6% /<br>/dev/vda1               xfs      1014M  186M  829M  19% /boot<br>tmpfs                   tmpfs     382M     0  382M   0% /run/user/0<br>[root@haproxy-node-a ~]<span class="hljs-comment"># mount /dev/md0 /home/</span><br>[root@haproxy-node-a ~]<span class="hljs-comment"># df -hT</span><br>Filesystem              Type      Size  Used Avail Use% Mounted on<br>devtmpfs                devtmpfs  874M     0  874M   0% /dev<br>tmpfs                   tmpfs     886M  200K  885M   1% /dev/shm<br>tmpfs                   tmpfs     886M   17M  869M   2% /run<br>tmpfs                   tmpfs     886M     0  886M   0% /sys/fs/cgroup<br>/dev/mapper/centos-root xfs        47G  2.5G   45G   6% /<br>/dev/vda1               xfs      1014M  186M  829M  19% /boot<br>tmpfs                   tmpfs     382M     0  382M   0% /run/user/0<br>/dev/md0                xfs        40G   33M   40G   1% /home       <span class="hljs-comment"># 新挂载的md0</span><br></code></pre></td></tr></table></figure><h3 id="添加自动挂截"><a href="#添加自动挂截" class="headerlink" title="添加自动挂截"></a>添加自动挂截</h3><p>查看分区类型：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># blkid /dev/md0</span><br>/dev/md0: UUID=<span class="hljs-string">&quot;b7e24434-a5a5-4b7f-82f7-8f5bcb7669a2&quot;</span> TYPE=<span class="hljs-string">&quot;xfs&quot;</span> <br></code></pre></td></tr></table></figure><p>添加自动挂载：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/fstab<br><span class="hljs-comment">#</span><br><span class="hljs-comment"># /etc/fstab</span><br><span class="hljs-comment"># Created by anaconda on Fri Aug 19 11:44:47 2022</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk&#x27;</span><br><span class="hljs-comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span><br><span class="hljs-comment">#</span><br>/dev/mapper/centos-root /                       xfs     defaults        0 0<br>UUID=e79d9b36-6226-4269-a1d1-cff60d68c2e4 /boot                   xfs     defaults        0 0<br>/dev/mapper/centos-swap swap                    swap    defaults        0 0<br>/dev/md0        /home   xfs     defaults        0 0             <span class="hljs-comment"># 写入自动挂载</span><br></code></pre></td></tr></table></figure><div class="note note-info">            <p>在挂载完，我们可以检查一下挂载信息是否正确。检查fstab语法。</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># mount -av</span><br>/                        : ignored<br>/boot                    : already mounted<br>swap                     : ignored<br>/home                    : already mounted<br></code></pre></td></tr></table></figure><h3 id="保存md配置信息"><a href="#保存md配置信息" class="headerlink" title="保存md配置信息"></a>保存md配置信息</h3><p>写入md0的配置信息至mdadm的配置文件中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># mdadm -D --scan &gt; /etc/mdadm.conf</span><br>[root@haproxy-node-a ~]<span class="hljs-comment"># cat /etc/mdadm.conf </span><br>ARRAY /dev/md0 metadata=1.2 spares=1 name=haproxy-node-a:0 UUID=7860ea0c:fb5693d3:176f627f:be6979c7<br>[root@haproxy-node-a ~]<span class="hljs-comment"># </span><br></code></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>模拟硬盘故障，扩充或删除硬盘，查看raid 5的变化。</p><h3 id="raid-扩容"><a href="#raid-扩容" class="headerlink" title="raid 扩容"></a>raid 扩容</h3><p>在虚拟机中添加一块磁盘。新添加磁盘信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a home]<span class="hljs-comment"># fdisk -l</span><br><br>Disk /dev/vda: 53.7 GB, 53687091200 bytes, 104857600 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0x000a9efb<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vda1   *        2048     2099199     1048576   83  Linux<br>/dev/vda2         2099200   104857599    51379200   8e  Linux LVM<br><br>Disk /dev/mapper/centos-root: 50.5 GB, 50457477120 bytes, 98549760 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br><br><br>Disk /dev/mapper/centos-swap: 2147 MB, 2147483648 bytes, 4194304 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br><br><br>Disk /dev/vdb: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0xaa22accc<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vdb1            2048    41943039    20970496   fd  Linux raid autodetect<br><br>Disk /dev/vdc: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0xbd7a8d98<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vdc1            2048    41943039    20970496   fd  Linux raid autodetect<br><br>Disk /dev/vdd: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0x01dada7d<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vdd1            2048    41943039    20970496   fd  Linux raid autodetect<br><br>Disk /dev/vde: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0x9b826ee3<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vde1            2048    41943039    20970496   fd  Linux raid autodetect<br><br>Disk /dev/md0: 42.9 GB, 42914021376 bytes, 83816448 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 524288 bytes / 1048576 bytes<br><br><br>Disk /dev/vdf: 21.5 GB, 21474836480 bytes, 41943040 sectors         <span class="hljs-comment"># 新添加的磁盘</span><br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br></code></pre></td></tr></table></figure><p>将磁盘vdf初始化，见上面磁盘初始化操作。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">fdisk /dev/vdf<br>.........<br>Disk /dev/vdf: 21.5 GB, 21474836480 bytes, 41943040 sectors<br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 512 bytes / 512 bytes<br>Disk label <span class="hljs-built_in">type</span>: dos<br>Disk identifier: 0xea86a973<br><br>   Device Boot      Start         End      Blocks   Id  System<br>/dev/vdf1            2048    41943039    20970496   fd  Linux raid autodetect<br></code></pre></td></tr></table></figure><p>将vdf添加到md0。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># mdadm --manage /dev/md0 --add /dev/vdf</span><br>mdadm: added /dev/vdf<br></code></pre></td></tr></table></figure><p>查看md0中新添加的磁盘状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># mdadm -D /dev/md0 </span><br>/dev/md0:<br>           Version : 1.2<br>     Creation Time : Fri Sep 16 14:04:54 2022<br>        Raid Level : raid5<br>        Array Size : 41908224 (39.97 GiB 42.91 GB)<br>     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)<br>      Raid Devices : 3<br>     Total Devices : 5<br>       Persistence : Superblock is persistent<br><br>       Update Time : Fri Sep 16 17:42:17 2022<br>             State : clean <br>    Active Devices : 3<br>   Working Devices : 5<br>    Failed Devices : 0<br>     Spare Devices : 2<br><br>            Layout : left-symmetric<br>        Chunk Size : 512K<br><br>Consistency Policy : resync<br><br>              Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>              UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>            Events : 19<br><br>    Number   Major   Minor   RaidDevice State<br>       0     252       16        0      active <span class="hljs-built_in">sync</span>   /dev/vdb<br>       1     252       32        1      active <span class="hljs-built_in">sync</span>   /dev/vdc<br>       4     252       48        2      active <span class="hljs-built_in">sync</span>   /dev/vdd<br><br>       3     252       64        -      spare   /dev/vde<br>       5     252       80        -      spare   /dev/vdf        <span class="hljs-comment"># 新扩容上去的vdf成了备份盘</span><br></code></pre></td></tr></table></figure><h3 id="扩容"><a href="#扩容" class="headerlink" title="扩容"></a>扩容</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 这里增长的raid-devices = 4 就正确了。数据盘原为3块，一块热备。这里配置了5，即全部成了数据盘。</span><br>[root@haproxy-node-a ~]<span class="hljs-comment"># mdadm --grow /dev/md0 --raid-devices=5</span><br><br>[root@haproxy-node-a ~]<span class="hljs-comment"># mdadm -D /dev/md0 </span><br>/dev/md0:<br>           Version : 1.2<br>     Creation Time : Fri Sep 16 14:04:54 2022<br>        Raid Level : raid5<br>        Array Size : 41908224 (39.97 GiB 42.91 GB)<br>     Used Dev Size : 20954112 (19.98 GiB 21.46 GB)<br>      Raid Devices : 5<br>     Total Devices : 5<br>       Persistence : Superblock is persistent<br><br>       Update Time : Fri Sep 16 20:18:59 2022<br>             State : clean, reshaping <br>    Active Devices : 5<br>   Working Devices : 5<br>    Failed Devices : 0<br>     Spare Devices : 0<br><br>            Layout : left-symmetric<br>        Chunk Size : 512K<br><br>Consistency Policy : resync<br><br>    Reshape Status : 3% complete<br>     Delta Devices : 2, (3-&gt;5)<br><br>              Name : haproxy-node-a:0  (<span class="hljs-built_in">local</span> to host haproxy-node-a)<br>              UUID : 7860ea0c:fb5693d3:176f627f:be6979c7<br>            Events : 35<br><br>    Number   Major   Minor   RaidDevice State<br>       0     252       16        0      active <span class="hljs-built_in">sync</span>   /dev/vdb<br>       1     252       32        1      active <span class="hljs-built_in">sync</span>   /dev/vdc<br>       4     252       48        2      active <span class="hljs-built_in">sync</span>   /dev/vdd<br>       5     252       80        3      active <span class="hljs-built_in">sync</span>   /dev/vdf       <span class="hljs-comment"># 新添加的 vdf已经成了数据盘</span><br>       3     252       64        4      active <span class="hljs-built_in">sync</span>   /dev/vde       <span class="hljs-comment"># 原有热备盘也给配置成了数据盘。</span><br><br><span class="hljs-comment"># 再次查看raid重构进度</span><br>[root@haproxy-node-a ~]<span class="hljs-comment"># cat /proc/mdstat</span><br>Personalities : [raid6] [raid5] [raid4] <br>md0 : active raid5 vdf[5] vdd[4] vde[3] vdc[1] vdb[0]<br>      41908224 blocks super 1.2 level 5, 512k chunk, algorithm 2 [5/5] [UUUUU]<br>      [=========&gt;...........]  reshape = 47.1% (9870848/20954112) finish=15.5min speed=11884K/sec<br><span class="hljs-comment"># 发现已经是五个U了，等raid重构结束</span><br>[root@haproxy-node-a ~]<span class="hljs-comment"># cat /proc/mdstat</span><br>Personalities : [raid6] [raid5] [raid4] <br>md0 : active raid5 vdf[5] vdd[4] vde[3] vdc[1] vdb[0]<br>      41908224 blocks super 1.2 level 5, 512k chunk, algorithm 2 [5/5] [UUUUU]<br>      [==================&gt;..]  reshape = 90.0% (18875904/20954112) finish=1.0min speed=32304K/sec<br>      <br>unused devices: &lt;none&gt;<br>[root@haproxy-node-a ~]<span class="hljs-comment"># cat /proc/mdstat</span><br>Personalities : [raid6] [raid5] [raid4] <br>md0 : active raid5 vdf[5] vdd[4] vde[3] vdc[1] vdb[0]<br>      41908224 blocks super 1.2 level 5, 512k chunk, algorithm 2 [5/5] [UUUUU]<br>      [==================&gt;..]  reshape = 92.3% (19344384/20954112) finish=0.8min speed=32288K/sec<br>      <br>unused devices: &lt;none&gt;<br>[root@haproxy-node-a ~]<span class="hljs-comment"># cat /proc/mdstat</span><br>Personalities : [raid6] [raid5] [raid4] <br>md0 : active raid5 vdf[5] vdd[4] vde[3] vdc[1] vdb[0]<br>      83816448 blocks super 1.2 level 5, 512k chunk, algorithm 2 [5/5] [UUUUU]   <span class="hljs-comment"># raid重构结束</span><br>      <br>unused devices: &lt;none&gt;<br></code></pre></td></tr></table></figure><div class="note note-info">            <p>再看一下md0的磁盘容量，这里需要对比一下扩容前md0的容量：</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">Disk /dev/md0: 42.9 GB, 42914021376 bytes, 83816448 sectors    <span class="hljs-comment"># 扩容前的容量</span><br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 524288 bytes / 1048576 bytes<br></code></pre></td></tr></table></figure><div class="note note-info">            <p>这个是md0扩容后的磁盘容量：</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># fdisk -l</span><br>.........<br>Disk /dev/md0: 85.8 GB, 85828042752 bytes, 167632896 sectors      <span class="hljs-comment"># 扩容后的容量，即上一步把两个热备盘vde,vdf全加上了</span><br>Units = sectors of 1 * 512 = 512 bytes<br>Sector size (logical/physical): 512 bytes / 512 bytes<br>I/O size (minimum/optimal): 524288 bytes / 1048576 bytes<br></code></pre></td></tr></table></figure><h3 id="调整文件系统大小"><a href="#调整文件系统大小" class="headerlink" title="调整文件系统大小"></a>调整文件系统大小</h3><div class="note note-info">            <p>到这里，已经把新添加的硬盘添加至md0了。不过会发现，文件系统依然没有变化，这里，需要调整文件系统大小。操作还是对比调整前和调整后，调前调整前的保持不变。</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># df -hT</span><br>Filesystem              Type      Size  Used Avail Use% Mounted on<br>devtmpfs                devtmpfs  874M     0  874M   0% /dev<br>tmpfs                   tmpfs     886M  200K  885M   1% /dev/shm<br>tmpfs                   tmpfs     886M   17M  869M   2% /run<br>tmpfs                   tmpfs     886M     0  886M   0% /sys/fs/cgroup<br>/dev/mapper/centos-root xfs        47G  2.5G   45G   6% /<br>/dev/vda1               xfs      1014M  186M  829M  19% /boot<br>tmpfs                   tmpfs     382M     0  382M   0% /run/user/0<br>/dev/md0                xfs        40G   33M   40G   1% /home           <span class="hljs-comment"># 调整前挂载的md0为40G</span><br></code></pre></td></tr></table></figure><p>接下来调整xfs文件系统容量，调整使用以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># xfs_growfs -d /home/</span><br>meta-data=/dev/md0               isize=512    agcount=16, agsize=654720 blks<br>         =                       sectsz=512   attr=2, projid32bit=1<br>         =                       crc=1        finobt=0 spinodes=0<br>data     =                       bsize=4096   blocks=10475520, imaxpct=25<br>         =                       sunit=128    swidth=256 blks<br>naming   =version 2              bsize=4096   ascii-ci=0 ftype=1<br><span class="hljs-built_in">log</span>      =internal               bsize=4096   blocks=5120, version=2<br>         =                       sectsz=512   sunit=8 blks, lazy-count=1<br>realtime =none                   extsz=4096   blocks=0, rtextents=0<br>data blocks changed from 10475520 to 20954112         <span class="hljs-comment"># 数据库已经更新</span><br></code></pre></td></tr></table></figure><div class="note note-info">            <p>我们再看调整后的结果：</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># df -hT</span><br>Filesystem              Type      Size  Used Avail Use% Mounted on<br>devtmpfs                devtmpfs  874M     0  874M   0% /dev<br>tmpfs                   tmpfs     886M  320K  885M   1% /dev/shm<br>tmpfs                   tmpfs     886M   17M  869M   2% /run<br>tmpfs                   tmpfs     886M     0  886M   0% /sys/fs/cgroup<br>/dev/mapper/centos-root xfs        47G  2.5G   45G   6% /<br>/dev/vda1               xfs      1014M  186M  829M  19% /boot<br>/dev/md0                xfs        80G   34M   80G   1% /home        <span class="hljs-comment"># 这里已经扩容到80G，即为md0扩容后的容量</span><br>tmpfs                   tmpfs     382M     0  382M   0% /run/user/0<br></code></pre></td></tr></table></figure><div class="note note-access">            <p>写到这里，我们已经，会了创建raid磁盘阵列，向磁盘阵列中添加硬盘并重构，再扩容到文件系统中。</p>          </div><p>如上实验，我们挂载的为xfs文件系统，对于其它文件系统，如何调整文件系统大小，这里先停一下，这一篇贴得实在有点长，我们放在下一篇。继续补充raid的其它测试验证及文件系统操作。下文见。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>linux</tag>
      
      <tag>RAID</tag>
      
      <tag>mdadm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 部署 softether服务</title>
    <link href="/2022/08/22/CentOS-%E9%83%A8%E7%BD%B2-softether%E6%9C%8D%E5%8A%A1/"/>
    <url>/2022/08/22/CentOS-%E9%83%A8%E7%BD%B2-softether%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-部署-softether服务"><a href="#CentOS-部署-softether服务" class="headerlink" title="CentOS 部署 softether服务"></a>CentOS 部署 softether服务</h1><p>SoftEther VPN 项目开发和分发 SoftEther VPN， 一个开源的免费跨平台多协议 VPN 程序， 作为日本筑波大学的一个学术项目，在 Apache 许可证 2.0 下发布。</p><span id="more"></span><h2 id="安装配置"><a href="#安装配置" class="headerlink" title="安装配置"></a>安装配置</h2><h3 id="安装程序依赖"><a href="#安装程序依赖" class="headerlink" title="安装程序依赖"></a>安装程序依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum groupinstall <span class="hljs-string">&quot;Development Tools&quot;</span><br>yum install readline-devel openssl-devel ncurses-devel<br></code></pre></td></tr></table></figure><h3 id="下载程序并安装"><a href="#下载程序并安装" class="headerlink" title="下载程序并安装"></a>下载程序并安装</h3><p>softether的下载<a href="http://softether.fishinfo.cn/cn.aspx">链接</a></p><p>选择VPN SERVER组件，选择对应的系统和CPU构架。下载的服务安装文件上传到服务器上，解压缩安装包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf softether-vpnserver-v4.39-9772-beta-2022.04.26-linux-x64-64bit.tar.gz <br><span class="hljs-built_in">mv</span> vpnserver /usr/local/<br><span class="hljs-built_in">cd</span> /usr/local/<br><span class="hljs-built_in">chmod</span> 755 ./vpnserver/ -R<br><span class="hljs-built_in">cd</span> vpnserver<br></code></pre></td></tr></table></figure><p>编译安装文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># make</span><br>--------------------------------------------------------------------<br><br>SoftEther VPN Server (Ver 4.39, Build 9772, Intel x64 / AMD64) <span class="hljs-keyword">for</span> Linux Build Utility<br>Copyright (c) SoftEther Project at University of Tsukuba, Japan. All Rights Reserved.<br><br>--------------------------------------------------------------------<br><br><br>Copyright (c) all contributors on SoftEther VPN project <span class="hljs-keyword">in</span> GitHub.<br>Copyright (c) Daiyuu Nobori, SoftEther Project at University of Tsukuba, and SoftEther Corporation.<br><br>Licensed under the Apache License, Version 2.0 (the <span class="hljs-string">&quot;License&quot;</span>);<br>you may not use this file except <span class="hljs-keyword">in</span> compliance with the License.<br>You may obtain a copy of the License at<br><br>    http://www.apache.org/licenses/LICENSE-2.0<br><br>Unless required by applicable law or agreed to <span class="hljs-keyword">in</span> writing, software distributed under the License is distributed on an <span class="hljs-string">&quot;AS IS&quot;</span> BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br>See the License <span class="hljs-keyword">for</span> the specific language governing permissions and limitations under the License.<br><br><br>DISCLAIMER<br>==========<br><br>THE SOFTWARE IS PROVIDED <span class="hljs-string">&quot;AS IS&quot;</span>, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.<br><br>THIS SOFTWARE IS DEVELOPED IN JAPAN, AND DISTRIBUTED FROM JAPAN, UNDER JAPANESE LAWS. YOU MUST AGREE IN ADVANCE TO USE, COPY, MODIFY, MERGE, PUBLISH, DISTRIBUTE, SUBLICENSE, AND/OR SELL COPIES OF THIS SOFTWARE, THAT ANY JURIDICAL DISPUTES WHICH ARE CONCERNED TO THIS SOFTWARE OR ITS CONTENTS, AGAINST US (SOFTETHER PROJECT, SOFTETHER CORPORATION, DAIYUU NOBORI OR OTHER SUPPLIERS), OR ANY JURIDICAL DISPUTES AGAINST US WHICH ARE CAUSED BY ANY KIND OF USING, COPYING, MODIFYING, MERGING, PUBLISHING, DISTRIBUTING, SUBLICENSING, AND/OR SELLING COPIES OF THIS SOFTWARE SHALL BE REGARDED AS BE CONSTRUED AND CONTROLLED BY JAPANESE LAWS, AND YOU MUST FURTHER CONSENT TO EXCLUSIVE JURISDICTION AND VENUE IN THE COURTS SITTING IN TOKYO, JAPAN. YOU MUST WAIVE ALL DEFENSES OF LACK OF PERSONAL JURISDICTION AND FORUM NON CONVENIENS. PROCESS MAY BE SERVED ON EITHER PARTY IN THE MANNER AUTHORIZED BY APPLICABLE LAW OR COURT RULE.<br><br>USE ONLY IN JAPAN. DO NOT USE THIS SOFTWARE IN ANOTHER COUNTRY UNLESS YOU HAVE A CONFIRMATION THAT THIS SOFTWARE DOES NOT VIOLATE ANY CRIMINAL LAWS OR CIVIL RIGHTS IN THAT PARTICULAR COUNTRY. USING THIS SOFTWARE IN OTHER COUNTRIES IS COMPLETELY AT YOUR OWN RISK. THE SOFTETHER VPN PROJECT HAS DEVELOPED AND DISTRIBUTED THIS SOFTWARE TO COMPLY ONLY WITH THE JAPANESE LAWS AND EXISTING CIVIL RIGHTS INCLUDING PATENTS WHICH ARE SUBJECTS APPLY IN JAPAN. OTHER COUNTRIES<span class="hljs-string">&#x27; LAWS OR CIVIL RIGHTS ARE NONE OF OUR CONCERNS NOR RESPONSIBILITIES. WE HAVE NEVER INVESTIGATED ANY CRIMINAL REGULATIONS, CIVIL LAWS OR INTELLECTUAL PROPERTY RIGHTS INCLUDING PATENTS IN ANY OF OTHER 200+ COUNTRIES AND TERRITORIES. BY NATURE, THERE ARE 200+ REGIONS IN THE WORLD, WITH DIFFERENT LAWS. IT IS IMPOSSIBLE TO VERIFY EVERY COUNTRIES&#x27;</span> LAWS, REGULATIONS AND CIVIL RIGHTS TO MAKE THE SOFTWARE COMPLY WITH ALL COUNTRIES<span class="hljs-string">&#x27; LAWS BY THE PROJECT. EVEN IF YOU WILL BE SUED BY A PRIVATE ENTITY OR BE DAMAGED BY A PUBLIC SERVANT IN YOUR COUNTRY, THE DEVELOPERS OF THIS SOFTWARE WILL NEVER BE LIABLE TO RECOVER OR COMPENSATE SUCH DAMAGES, CRIMINAL OR CIVIL</span><br><span class="hljs-string">RESPONSIBILITIES. NOTE THAT THIS LINE IS NOT LICENSE RESTRICTION BUT JUST A STATEMENT FOR WARNING AND DISCLAIMER.</span><br><span class="hljs-string"></span><br><span class="hljs-string">READ AND UNDERSTAND THE &#x27;</span>src/WARNING.TXT<span class="hljs-string">&#x27; FILE BEFORE USING THIS SOFTWARE. SOME SOFTWARE PROGRAMS FROM THIRD PARTIES ARE INCLUDED ON THIS SOFTWARE WITH LICENSE CONDITIONS WHICH ARE DESCRIBED ON THE &#x27;</span>src/THIRD_PARTY.TXT<span class="hljs-string">&#x27; FILE.</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">--------------------------------------------------------------------</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">make[1]: Entering directory `/usr/local/vpnserver&#x27;</span><br>Preparing SoftEther VPN Server...<br>ranlib lib/libcharset.a<br>ranlib lib/libcrypto.a<br>ranlib lib/libedit.a<br>ranlib lib/libiconv.a<br>ranlib lib/libintelaes.a<br>ranlib lib/libncurses.a<br>ranlib lib/libssl.a<br>ranlib lib/libz.a<br>ranlib code/vpnserver.a<br>gcc code/vpnserver.a -fPIE -O2 -fsigned-char -pthread -m64 -lm -lrt -lpthread -L./ lib/libssl.a lib/libcrypto.a lib/libiconv.a lib/libcharset.a lib/libedit.a lib/libncurses.a lib/libz.a lib/libintelaes.a -ldl -o vpnserver<br>ranlib code/vpncmd.a<br>gcc code/vpncmd.a -fPIE -O2 -fsigned-char -pthread -m64 -lm -lrt -lpthread -L./ lib/libssl.a lib/libcrypto.a lib/libiconv.a lib/libcharset.a lib/libedit.a lib/libncurses.a lib/libz.a lib/libintelaes.a -ldl -o vpncmd<br>./vpncmd /tool /cmd:Check<br>vpncmd <span class="hljs-built_in">command</span> - SoftEther VPN Command Line Management Utility<br>SoftEther VPN Command Line Management Utility (vpncmd <span class="hljs-built_in">command</span>)<br>Version 4.39 Build 9772   (English)<br>Compiled 2022/04/26 18:00:50 by buildsan at crosswin<br>Copyright (c) SoftEther VPN Project. All Rights Reserved.<br><br>VPN Tools has been launched. By inputting HELP, you can view a list of the commands that can be used.<br><br>VPN Tools&gt;Check<br>Check <span class="hljs-built_in">command</span> - Check whether SoftEther VPN Operation is Possible<br>---------------------------------------------------<br>SoftEther VPN Operation Environment Check Tool<br><br>Copyright (c) SoftEther VPN Project.<br>All Rights Reserved.<br><br>If this operation environment check tool is run on a system and that system passes, it is most likely that SoftEther VPN software can operate on that system. This check may take a <span class="hljs-keyword">while</span>. Please <span class="hljs-built_in">wait</span>...<br><br>Checking <span class="hljs-string">&#x27;Kernel System&#x27;</span>... <br>              Pass<br>Checking <span class="hljs-string">&#x27;Memory Operation System&#x27;</span>... <br>              Pass<br>Checking <span class="hljs-string">&#x27;ANSI / Unicode string processing system&#x27;</span>... <br>              Pass<br>Checking <span class="hljs-string">&#x27;File system&#x27;</span>... <br>              Pass<br>Checking <span class="hljs-string">&#x27;Thread processing system&#x27;</span>... <br>              Pass<br>Checking <span class="hljs-string">&#x27;Network system&#x27;</span>... <br>              Pass<br><br>All checks passed. It is most likely that SoftEther VPN Server / Bridge can operate normally on this system.<br><br>The <span class="hljs-built_in">command</span> completed successfully.<br><br><br>--------------------------------------------------------------------<br>The preparation of SoftEther VPN Server is completed !<br><br><br>*** How to switch the display language of the SoftEther VPN Server Service ***<br>SoftEther VPN Server supports the following languages:<br>  - Japanese<br>  - English<br>  - Simplified Chinese<br><br>You can choose your prefered language of SoftEther VPN Server at any time.<br>To switch the current language, open and edit the <span class="hljs-string">&#x27;lang.config&#x27;</span> file.<br><br><br>Note: the administrative password is not <span class="hljs-built_in">set</span> on the VPN Server. Please <span class="hljs-built_in">set</span> your own administrative password as soon as possible by vpncmd or the GUI manager.<br><br><br>*** How to start the SoftEther VPN Server Service ***<br><br>Please execute <span class="hljs-string">&#x27;./vpnserver start&#x27;</span> to run the SoftEther VPN Server Background Service.<br>And please execute <span class="hljs-string">&#x27;./vpncmd&#x27;</span> to run the SoftEther VPN Command-Line Utility to configure SoftEther VPN Server.<br><br>Of course, you can use the VPN Server Manager GUI Application <span class="hljs-keyword">for</span> Windows / Mac OS X on the other Windows / Mac OS X computers <span class="hljs-keyword">in</span> order to configure the SoftEther VPN Server remotely.<br><br>*** For Windows <span class="hljs-built_in">users</span> ***<br>You can download the SoftEther VPN Server Manager <span class="hljs-keyword">for</span> Windows<br>from the http://www.softether-download.com/ web site.<br>This manager application helps you to completely and easily manage the VPN server services running <span class="hljs-keyword">in</span> remote hosts.<br><br><br>*** For Mac OS X <span class="hljs-built_in">users</span> ***<br>In April 2016 we released the SoftEther VPN Server Manager <span class="hljs-keyword">for</span> Mac OS X.<br>You can download it from the http://www.softether-download.com/ web site.<br>VPN Server Manager <span class="hljs-keyword">for</span> Mac OS X works perfectly as same as the traditional Windows versions. It helps you to completely and easily manage the VPN server services running <span class="hljs-keyword">in</span> remote hosts.<br><br><br><br>*** PacketiX VPN Server HTML5 Web Administration Console (NEW) ***<br>This VPN Server / Bridge has the built-in HTML5 Web Administration Console.<br><br>After you start the server daemon, you can open the HTML5 Web Administration Console is available at<br><br>https://127.0.0.1:5555/<br>or<br>https://ip_address_of_the_vpn_server:5555/<br><br>This HTML5 page is obviously under construction, and your HTML5 development contribution is very appreciated.<br><br>--------------------------------------------------------------------<br><br>make[1]: Leaving directory `/usr/local/vpnserver<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ./.install.sh </span><br>--------------------------------------------------------------------<br><br>SoftEther VPN Server (Ver 4.39, Build 9772, Intel x64 / AMD64) <span class="hljs-keyword">for</span> Linux Build Utility<br>Copyright (c) SoftEther Project at University of Tsukuba, Japan. All Rights Reserved.<br><br>--------------------------------------------------------------------<br><br><br>Copyright (c) all contributors on SoftEther VPN project <span class="hljs-keyword">in</span> GitHub.<br>Copyright (c) Daiyuu Nobori, SoftEther Project at University of Tsukuba, and SoftEther Corporation.<br><br>Licensed under the Apache License, Version 2.0 (the <span class="hljs-string">&quot;License&quot;</span>);<br>you may not use this file except <span class="hljs-keyword">in</span> compliance with the License.<br>You may obtain a copy of the License at<br><br>    http://www.apache.org/licenses/LICENSE-2.0<br><br>Unless required by applicable law or agreed to <span class="hljs-keyword">in</span> writing, software distributed under the License is distributed on an <span class="hljs-string">&quot;AS IS&quot;</span> BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br>See the License <span class="hljs-keyword">for</span> the specific language governing permissions and limitations under the License.<br><br><br>DISCLAIMER<br>==========<br><br>THE SOFTWARE IS PROVIDED <span class="hljs-string">&quot;AS IS&quot;</span>, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.<br><br>THIS SOFTWARE IS DEVELOPED IN JAPAN, AND DISTRIBUTED FROM JAPAN, UNDER JAPANESE LAWS. YOU MUST AGREE IN ADVANCE TO USE, COPY, MODIFY, MERGE, PUBLISH, DISTRIBUTE, SUBLICENSE, AND/OR SELL COPIES OF THIS SOFTWARE, THAT ANY JURIDICAL DISPUTES WHICH ARE CONCERNED TO THIS SOFTWARE OR ITS CONTENTS, AGAINST US (SOFTETHER PROJECT, SOFTETHER CORPORATION, DAIYUU NOBORI OR OTHER SUPPLIERS), OR ANY JURIDICAL DISPUTES AGAINST US WHICH ARE CAUSED BY ANY KIND OF USING, COPYING, MODIFYING, MERGING, PUBLISHING, DISTRIBUTING, SUBLICENSING, AND/OR SELLING COPIES OF THIS SOFTWARE SHALL BE REGARDED AS BE CONSTRUED AND CONTROLLED BY JAPANESE LAWS, AND YOU MUST FURTHER CONSENT TO EXCLUSIVE JURISDICTION AND VENUE IN THE COURTS SITTING IN TOKYO, JAPAN. YOU MUST WAIVE ALL DEFENSES OF LACK OF PERSONAL JURISDICTION AND FORUM NON CONVENIENS. PROCESS MAY BE SERVED ON EITHER PARTY IN THE MANNER AUTHORIZED BY APPLICABLE LAW OR COURT RULE.<br><br>USE ONLY IN JAPAN. DO NOT USE THIS SOFTWARE IN ANOTHER COUNTRY UNLESS YOU HAVE A CONFIRMATION THAT THIS SOFTWARE DOES NOT VIOLATE ANY CRIMINAL LAWS OR CIVIL RIGHTS IN THAT PARTICULAR COUNTRY. USING THIS SOFTWARE IN OTHER COUNTRIES IS COMPLETELY AT YOUR OWN RISK. THE SOFTETHER VPN PROJECT HAS DEVELOPED AND DISTRIBUTED THIS SOFTWARE TO COMPLY ONLY WITH THE JAPANESE LAWS AND EXISTING CIVIL RIGHTS INCLUDING PATENTS WHICH ARE SUBJECTS APPLY IN JAPAN. OTHER COUNTRIES<span class="hljs-string">&#x27; LAWS OR CIVIL RIGHTS ARE NONE OF OUR CONCERNS NOR RESPONSIBILITIES. WE HAVE NEVER INVESTIGATED ANY CRIMINAL REGULATIONS, CIVIL LAWS OR INTELLECTUAL PROPERTY RIGHTS INCLUDING PATENTS IN ANY OF OTHER 200+ COUNTRIES AND TERRITORIES. BY NATURE, THERE ARE 200+ REGIONS IN THE WORLD, WITH DIFFERENT LAWS. IT IS IMPOSSIBLE TO VERIFY EVERY COUNTRIES&#x27;</span> LAWS, REGULATIONS AND CIVIL RIGHTS TO MAKE THE SOFTWARE COMPLY WITH ALL COUNTRIES<span class="hljs-string">&#x27; LAWS BY THE PROJECT. EVEN IF YOU WILL BE SUED BY A PRIVATE ENTITY OR BE DAMAGED BY A PUBLIC SERVANT IN YOUR COUNTRY, THE DEVELOPERS OF THIS SOFTWARE WILL NEVER BE LIABLE TO RECOVER OR COMPENSATE SUCH DAMAGES, CRIMINAL OR CIVIL</span><br><span class="hljs-string">RESPONSIBILITIES. NOTE THAT THIS LINE IS NOT LICENSE RESTRICTION BUT JUST A STATEMENT FOR WARNING AND DISCLAIMER.</span><br><span class="hljs-string"></span><br><span class="hljs-string">READ AND UNDERSTAND THE &#x27;</span>src/WARNING.TXT<span class="hljs-string">&#x27; FILE BEFORE USING THIS SOFTWARE. SOME SOFTWARE PROGRAMS FROM THIRD PARTIES ARE INCLUDED ON THIS SOFTWARE WITH LICENSE CONDITIONS WHICH ARE DESCRIBED ON THE &#x27;</span>src/THIRD_PARTY.TXT<span class="hljs-string">&#x27; FILE.</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">--------------------------------------------------------------------</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">Preparing SoftEther VPN Server...</span><br><span class="hljs-string">ranlib lib/libcharset.a</span><br><span class="hljs-string">ranlib lib/libcrypto.a</span><br><span class="hljs-string">ranlib lib/libedit.a</span><br><span class="hljs-string">ranlib lib/libiconv.a</span><br><span class="hljs-string">ranlib lib/libintelaes.a</span><br><span class="hljs-string">ranlib lib/libncurses.a</span><br><span class="hljs-string">ranlib lib/libssl.a</span><br><span class="hljs-string">ranlib lib/libz.a</span><br><span class="hljs-string">ranlib code/vpnserver.a</span><br><span class="hljs-string">gcc code/vpnserver.a -fPIE -O2 -fsigned-char -pthread -m64 -lm -lrt -lpthread -L./ lib/libssl.a lib/libcrypto.a lib/libiconv.a lib/libcharset.a lib/libedit.a lib/libncurses.a lib/libz.a lib/libintelaes.a -ldl -o vpnserver</span><br><span class="hljs-string">ranlib code/vpncmd.a</span><br><span class="hljs-string">gcc code/vpncmd.a -fPIE -O2 -fsigned-char -pthread -m64 -lm -lrt -lpthread -L./ lib/libssl.a lib/libcrypto.a lib/libiconv.a lib/libcharset.a lib/libedit.a lib/libncurses.a lib/libz.a lib/libintelaes.a -ldl -o vpncmd</span><br><span class="hljs-string">./vpncmd /tool /cmd:Check</span><br><span class="hljs-string">vpncmd command - SoftEther VPN Command Line Management Utility</span><br><span class="hljs-string">SoftEther VPN Command Line Management Utility (vpncmd command)</span><br><span class="hljs-string">Version 4.39 Build 9772   (English)</span><br><span class="hljs-string">Compiled 2022/04/26 18:00:50 by buildsan at crosswin</span><br><span class="hljs-string">Copyright (c) SoftEther VPN Project. All Rights Reserved.</span><br><span class="hljs-string"></span><br><span class="hljs-string">VPN Tools has been launched. By inputting HELP, you can view a list of the commands that can be used.</span><br><span class="hljs-string"></span><br><span class="hljs-string">VPN Tools&gt;Check</span><br><span class="hljs-string">Check command - Check whether SoftEther VPN Operation is Possible</span><br><span class="hljs-string">---------------------------------------------------</span><br><span class="hljs-string">SoftEther VPN Operation Environment Check Tool</span><br><span class="hljs-string"></span><br><span class="hljs-string">Copyright (c) SoftEther VPN Project.</span><br><span class="hljs-string">All Rights Reserved.</span><br><span class="hljs-string"></span><br><span class="hljs-string">If this operation environment check tool is run on a system and that system passes, it is most likely that SoftEther VPN software can operate on that system. This check may take a while. Please wait...</span><br><span class="hljs-string"></span><br><span class="hljs-string">Checking &#x27;</span>Kernel System<span class="hljs-string">&#x27;... </span><br><span class="hljs-string">              Pass</span><br><span class="hljs-string">Checking &#x27;</span>Memory Operation System<span class="hljs-string">&#x27;... </span><br><span class="hljs-string">              Pass</span><br><span class="hljs-string">Checking &#x27;</span>ANSI / Unicode string processing system<span class="hljs-string">&#x27;... </span><br><span class="hljs-string">              Pass</span><br><span class="hljs-string">Checking &#x27;</span>File system<span class="hljs-string">&#x27;... </span><br><span class="hljs-string">              Pass</span><br><span class="hljs-string">Checking &#x27;</span>Thread processing system<span class="hljs-string">&#x27;... </span><br><span class="hljs-string">              Pass</span><br><span class="hljs-string">Checking &#x27;</span>Network system<span class="hljs-string">&#x27;... </span><br><span class="hljs-string">              Pass</span><br><span class="hljs-string"></span><br><span class="hljs-string">All checks passed. It is most likely that SoftEther VPN Server / Bridge can operate normally on this system.</span><br><span class="hljs-string"></span><br><span class="hljs-string">The command completed successfully.</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">--------------------------------------------------------------------</span><br><span class="hljs-string">The preparation of SoftEther VPN Server is completed !</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">*** How to switch the display language of the SoftEther VPN Server Service ***</span><br><span class="hljs-string">SoftEther VPN Server supports the following languages:</span><br><span class="hljs-string">  - Japanese</span><br><span class="hljs-string">  - English</span><br><span class="hljs-string">  - Simplified Chinese</span><br><span class="hljs-string"></span><br><span class="hljs-string">You can choose your prefered language of SoftEther VPN Server at any time.</span><br><span class="hljs-string">To switch the current language, open and edit the &#x27;</span>lang.config<span class="hljs-string">&#x27; file.</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">Note: the administrative password is not set on the VPN Server. Please set your own administrative password as soon as possible by vpncmd or the GUI manager.</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">*** How to start the SoftEther VPN Server Service ***</span><br><span class="hljs-string"></span><br><span class="hljs-string">Please execute &#x27;</span>./vpnserver start<span class="hljs-string">&#x27; to run the SoftEther VPN Server Background Service.</span><br><span class="hljs-string">And please execute &#x27;</span>./vpncmd<span class="hljs-string">&#x27; to run the SoftEther VPN Command-Line Utility to configure SoftEther VPN Server.</span><br><span class="hljs-string"></span><br><span class="hljs-string">Of course, you can use the VPN Server Manager GUI Application for Windows / Mac OS X on the other Windows / Mac OS X computers in order to configure the SoftEther VPN Server remotely.</span><br><span class="hljs-string"></span><br><span class="hljs-string">*** For Windows users ***</span><br><span class="hljs-string">You can download the SoftEther VPN Server Manager for Windows</span><br><span class="hljs-string">from the http://www.softether-download.com/ web site.</span><br><span class="hljs-string">This manager application helps you to completely and easily manage the VPN server services running in remote hosts.</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">*** For Mac OS X users ***</span><br><span class="hljs-string">In April 2016 we released the SoftEther VPN Server Manager for Mac OS X.</span><br><span class="hljs-string">You can download it from the http://www.softether-download.com/ web site.</span><br><span class="hljs-string">VPN Server Manager for Mac OS X works perfectly as same as the traditional Windows versions. It helps you to completely and easily manage the VPN server services running in remote hosts.</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">*** PacketiX VPN Server HTML5 Web Administration Console (NEW) ***</span><br><span class="hljs-string">This VPN Server / Bridge has the built-in HTML5 Web Administration Console.</span><br><span class="hljs-string"></span><br><span class="hljs-string">After you start the server daemon, you can open the HTML5 Web Administration Console is available at</span><br><span class="hljs-string"></span><br><span class="hljs-string">https://127.0.0.1:5555/</span><br><span class="hljs-string">or</span><br><span class="hljs-string">https://ip_address_of_the_vpn_server:5555/</span><br><span class="hljs-string"></span><br><span class="hljs-string">This HTML5 page is obviously under construction, and your HTML5 development contribution is very appreciated.</span><br><span class="hljs-string"></span><br><span class="hljs-string">--------------------------------------------------------------------</span><br></code></pre></td></tr></table></figure><h3 id="创建启动程序"><a href="#创建启动程序" class="headerlink" title="创建启动程序"></a>创建启动程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim //usr/lib/systemd/system/vpnserver.service<br>[Unit]<br>Description=SoftEther VPN Server<br>After=network.target<br><br>[Service]<br>Type=forking<br>ExecStart=/usr/local/vpnserver/vpnserver start<br>ExecStop=/usr/local/vpnserver/vpnserver stop<br><br>[Install]<br>WantedBy=multi-user.target<br><br>systemctl daemon-reload<br><br><span class="hljs-comment"># 启动vpnserver服务</span><br><br>systemctl start vpnserver<br>systemctl status vpnserver<br>● vpnserver.service - SoftEther VPN Server<br>   Loaded: loaded (/usr/lib/systemd/system/vpnserver.service; disabled; vendor preset: disabled)<br>   Active: active (running) since Mon 2022-08-22 21:53:01 CST; 1min 57s ago<br>  Process: 17066 ExecStart=/usr/local/vpnserver/vpnserver start (code=exited, status=0/SUCCESS)<br> Main PID: 17070 (vpnserver)<br>   CGroup: /system.slice/vpnserver.service<br>           ├─17070 /usr/local/vpnserver/vpnserver execsvc<br>           └─17102 /usr/local/vpnserver/vpnserver execsvc<br><br>Aug 22 21:53:01 haproxy-node-a systemd[1]: Starting SoftEther VPN Server...<br>Aug 22 21:53:01 haproxy-node-a vpnserver[17066]: The SoftEther VPN Server service has been started.<br>Aug 22 21:53:01 haproxy-node-a vpnserver[17066]: Let<span class="hljs-string">&#x27;s get started by accessing to the following URL from your PC:</span><br><span class="hljs-string">Aug 22 21:53:01 haproxy-node-a vpnserver[17066]: https://192.168.10.81:5555/</span><br><span class="hljs-string">Aug 22 21:53:01 haproxy-node-a vpnserver[17066]: or</span><br><span class="hljs-string">Aug 22 21:53:01 haproxy-node-a vpnserver[17066]: https://192.168.10.81/</span><br><span class="hljs-string">Aug 22 21:53:01 haproxy-node-a vpnserver[17066]: Note: IP address may vary. Specify your server&#x27;</span>s IP address.<br>Aug 22 21:53:01 haproxy-node-a vpnserver[17066]: A TLS certificate warning will appear because the server uses self signed certificate...arning.<br>Aug 22 21:53:01 haproxy-node-a systemd[1]: Started SoftEther VPN Server.<br>Hint: Some lines were ellipsized, use -l to show <span class="hljs-keyword">in</span> full.<br></code></pre></td></tr></table></figure><h3 id="防火墙放通服务"><a href="#防火墙放通服务" class="headerlink" title="防火墙放通服务"></a>防火墙放通服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-service=http<br>firewall-cmd --permanent --add-service=https<br>firewall-cmd --permanent --add-port=5555/tcp<br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><h3 id="更改语言"><a href="#更改语言" class="headerlink" title="更改语言"></a>更改语言</h3><p>softether安装目录中有一个lang.config文件。将配置更改为cn。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim lang.config<br><span class="hljs-comment"># PacketiX VPN / SoftEther VPN Language Setting File</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># Specify your preferred Language ID on this setting file.</span><br><span class="hljs-comment"># The text messages will be displayed in the specified language.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># Please note that you must restart a program to apply the modification of</span><br><span class="hljs-comment"># this setting-file.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># Only one line is acceptable. Any other lines are ignored.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># The change of this file will effect after the next execution of a program.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># Note for UNIX / Linux Users:</span><br><span class="hljs-comment">#  You have to set the LANG environment variable if you want to display</span><br><span class="hljs-comment">#  non-English characters. If no LANG environment is set, any multi-byte</span><br><span class="hljs-comment">#  characters (i.e. Japanese or Chinese) will not be displayed correctly.</span><br><span class="hljs-comment"># </span><br><span class="hljs-comment"># Available Language IDs are:</span><br><span class="hljs-comment">#  ja: Japanese (日本語)</span><br><span class="hljs-comment">#  en: English (English)</span><br><span class="hljs-comment">#  cn: Simplified Chinese (简体中文)</span><br><br><br><span class="hljs-comment"># Specify a Language ID here.</span><br>cn<br></code></pre></td></tr></table></figure><h3 id="vpncmd配置"><a href="#vpncmd配置" class="headerlink" title="vpncmd配置"></a>vpncmd配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash">./vpncmd <br>vpncmd 命令 - SoftEther VPN 命令行管理工具<br>SoftEther VPN 命令行管理工具 (vpncmd 命令)<br>Version 4.39 Build 9772   (Simplified_Chinese)<br>Compiled 2022/04/26 18:00:50 by buildsan at crosswin<br>Copyright (c) SoftEther VPN Project. All Rights Reserved.<br><br>通过使用 vpncmd 程序，可以取得以下成果。<br><br>1. VPN Server 或 VPN Bridge 的管理。<br>2. VPN Client 的管理。<br>3. 使用 VPN 工具 (证书创建和网络传输速度测试工具)<br><br>选择 1, 2 或 3: 1<br><br>指定的主机名或目标 VPN Server 或 VPN Bridge 正在 运行的计算机 IP 地址。<br>通过以 <span class="hljs-string">&quot;主机名:端口号&quot;</span> 格式指定，您还可以指定端口号。<br>(当没有指定端口号时，使用 443。)<br>如果不输入任何内容并按下回车键，将连接到端口号为 443 的本地主机 (这台电脑)。<br>目标 IP 地址的主机名:<br><br>如果通过虚拟 HUB 管理模式连接到服务器，请输入虚拟 HUB 的名称。<br>如果通过服务器管理模式连接，无须输入任何内容请按回车键。<br>指定虚拟 HUB 名称:<br>与服务器 <span class="hljs-string">&quot;localhost&quot;</span> 的连接已建立 (端口 443)。<br><br>您有整个 VPN Server 的管理员权限。<br></code></pre></td></tr></table></figure><h3 id="Softether服务对外映射"><a href="#Softether服务对外映射" class="headerlink" title="Softether服务对外映射"></a>Softether服务对外映射</h3><p>在公网出口设备上映射softether对应的服务端口。</p><h3 id="服务器管理"><a href="#服务器管理" class="headerlink" title="服务器管理"></a>服务器管理</h3><p>从官网上下载服务器管理软件。下载<a href="http://softether.fishinfo.cn/cn.aspx">链接</a>。管理工具含有windows和mac os的程序。<br>下载完成后，安装管理程序。下载和安装程序的过程略过，以下开始通过管理工具配置。</p><p>打开server配置工具。<br>新建连接。连接的服务器为上面配置的服务器。本实例192.168.10.81。<br><img src="https://blog.ywmy.xyz/softether%2Fmanager%20tool.jpg" alt="manager tool.jpg"><br>连接后，需要配置管理员密码，见下图：<br><img src="https://blog.ywmy.xyz/softether%2Fmanager%20tool-2.jpg" alt="manager tool-2.jpg"><br>接着按配置向导操作，比如提供员工远程访问的，或配置对等网络，本例选择远程访问：<br><img src="https://blog.ywmy.xyz/softether%2Fmanager%20tool-3.jpg" alt="manager tool-3.jpg"><br>确认初始化server服务：<br><img src="https://blog.ywmy.xyz/softether%2Fmanager%20tool-4.jpg" alt="manager tool-4.jpg"><br>创建服务器的HUB，可以按公司或组织名命令，后面连接配置会用到：<br><img src="https://blog.ywmy.xyz/softether%2Fmanager%20tool-5.jpg" alt="manager tool-5.jpg"><br>动态DNS配置，默认或看需求更改：<br><img src="https://blog.ywmy.xyz/softether%2Fmanager%20tool-6.jpg" alt="manager tool-6.jpg"><br>服务配置好了：<br><img src="https://blog.ywmy.xyz/softether%2Fmanager%20tool-7.jpg" alt="manager tool-7.jpg"><br>配置登录用的用户名和密码：<br><img src="https://blog.ywmy.xyz/softether%2Fmanager%20tool-8.jpg" alt="manager tool-8.jpg"><br>新建用户：<br><img src="https://blog.ywmy.xyz/softether%2Fmanager%20tool-9.jpg" alt="manager tool-9.jpg"><br>配置用户属性，通过，本实例选择用户密码认证：<br><img src="https://blog.ywmy.xyz/softether%2Fmanager%20tool-10.jpg" alt="manager tool-10.jpg"></p><blockquote><p>特别说明在HUB管理员面，除了配置认证外，还需要配置虚拟NAT和虚拟DHCP服务器，启用SecureNAT。配置完成后，才可以实现NAT转发，和softether客户端DHCP分配。才可以连通softether路由可达的内网。</p></blockquote><h3 id="客户端连接"><a href="#客户端连接" class="headerlink" title="客户端连接"></a>客户端连接</h3><p>从官方网站下载softether客户端，安装过程略，启动客户端程序。</p><p>创建新的连接：<br><img src="https://blog.ywmy.xyz/softether%2Fsoftether-client-tool.jpg" alt="softether-client-tool.jpg"><br>配置服务器连接信息：<br><img src="https://blog.ywmy.xyz/softether%2Fsoftether-client-tool-1.jpg" alt="softether-client-tool-1.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>vpn</tag>
      
      <tag>softether</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 7 keepalived部署</title>
    <link href="/2022/08/19/CentOS-7-keepalived%E9%83%A8%E7%BD%B2/"/>
    <url>/2022/08/19/CentOS-7-keepalived%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-keepalived部署"><a href="#CentOS-7-keepalived部署" class="headerlink" title="CentOS 7 keepalived部署"></a>CentOS 7 keepalived部署</h1><p>CentOS 7环境下，keepavived服务配置，VRRP IP飘移测试。</p><span id="more"></span><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Keepalived 是一个用 C 语言编写的路由软件。该项目的主要目标是为 Linux 系统和基于 Linux 的基础架构提供简单而强大的负载平衡和高可用性设施。负载平衡框架依赖于众所周知且广泛使用的Linux 虚拟服务器 (IPVS) 内核模块，提供第 4 层负载平衡。Keepalived 实现了一组检查器，以根据其健康状况动态和自适应地维护和管理负载平衡的服务器池。另一方面，高可用性是通过 VRRP实现的协议。VRRP 是路由器故障转移的基础。此外，Keepalived 实现了一组与 VRRP 有限状态机的挂钩，提供低级和高速协议交互。为了提供最快的网络故障检测，Keepalived 实现了BFD协议。VRRP 状态转换可以考虑 BFD 提示来驱动快速状态转换。Keepalived 框架可以单独使用，也可以一起使用，以提供弹性基础架构。</p><h2 id="keepalived-部署环境"><a href="#keepalived-部署环境" class="headerlink" title="keepalived 部署环境"></a>keepalived 部署环境</h2><p>配置主机：<br>虚拟IP：192.168.10.80<br>主服务器：192.168.10.81<br>备服务器：192.168.10.82</p><p>主机需要保证时间一致。</p><h2 id="安装keepalived"><a href="#安装keepalived" class="headerlink" title="安装keepalived"></a>安装keepalived</h2><p>直接通过yum安装keepalived。在两台主机分别安装keepalived。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install keepalived -y<br></code></pre></td></tr></table></figure><h3 id="配置keepalived"><a href="#配置keepalived" class="headerlink" title="配置keepalived"></a>配置keepalived</h3><p>主服务器配置参考：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-a ~]<span class="hljs-comment"># cat /etc/keepalived/keepalived.conf </span><br>! Configuration File <span class="hljs-keyword">for</span> keepalived<br><br>global_defs &#123;<br>   notification_email &#123;<br>     acassen@firewall.loc<br>     failover@firewall.loc<br>     sysadmin@firewall.loc<br>   &#125;<br>   notification_email_from Alexandre.Cassen@firewall.loc<br>   smtp_server 192.168.200.1<br>   smtp_connect_timeout 30<br>   router_id LVS_DEVEL<br>   vrrp_skip_check_adv_addr<br>   vrrp_strict<br>   vrrp_garp_interval 0<br>   vrrp_gna_interval 0<br>&#125;<br><br>vrrp_instance VI_1 &#123;<br>    state MASTER<br>    interface eth0<br>    virtual_router_id 51<br>    priority 100<br>    advert_int 1<br>    authentication &#123;<br>        auth_type PASS<br>        auth_pass 1111<br>    &#125;<br>    virtual_ipaddress &#123;<br>        192.168.10.80<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>备服务器配置参考：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@haproxy-node-b ~]<span class="hljs-comment"># cat /etc/keepalived/keepalived.conf </span><br>! Configuration File <span class="hljs-keyword">for</span> keepalived<br><br>global_defs &#123;<br>   notification_email &#123;<br>     acassen@firewall.loc<br>     failover@firewall.loc<br>     sysadmin@firewall.loc<br>   &#125;<br>   notification_email_from Alexandre.Cassen@firewall.loc<br>   smtp_server 192.168.200.1<br>   smtp_connect_timeout 30<br>   router_id LVS_DEVEL<br>   vrrp_skip_check_adv_addr<br>   vrrp_strict<br>   vrrp_garp_interval 0<br>   vrrp_gna_interval 0<br>&#125;<br><br>vrrp_instance VI_1 &#123;<br>    state BACKUP<br>    interface eth0<br>    virtual_router_id 51<br>    priority 90<br>    advert_int 1<br>    authentication &#123;<br>        auth_type PASS<br>        auth_pass 1111<br>    &#125;<br>    virtual_ipaddress &#123;<br>        192.168.10.80<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><blockquote><p>提示说明</p></blockquote><ul><li>虚拟路由器：Virtual Router </li><li>虚拟路由器标识：VRID(0-255)</li><li>物理路由器：<ul><li>master  ：主设备</li><li>backup  ：备用设备</li><li>priority：优先级</li></ul></li><li>VIP：Virtual IP </li><li>VMAC：Virutal MAC</li><li>GraciousARP</li></ul><blockquote><p>安全认证</p></blockquote><ul><li>简单的字符认证</li><li>HMAC机制，只对信息做认证</li></ul><blockquote><p>工作模式</p></blockquote><ul><li>主&#x2F;备：单虚拟路径器；</li><li>主&#x2F;主：主&#x2F;备（虚拟路径器），备&#x2F;主（虚拟路径器）</li></ul><blockquote><p>工作类型</p></blockquote><ul><li>抢占式：当出现比现有主服务器优先级高的服务器时，会发送通告抢占角色成为主服务器</li><li>非抢占式</li></ul><h3 id="配置防火墙"><a href="#配置防火墙" class="headerlink" title="配置防火墙"></a>配置防火墙</h3><p>如果您正在运行防火墙（通过 firewalld 或 iptables），则必须允许 VRRP 流量在 keepalived 节点之间传递。要将防火墙配置为允许使用 firewalld 的 VRRP 流量，请运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># firewall-cmd --add-rich-rule=&#x27;rule protocol value=&quot;vrrp&quot; accept&#x27; --permanent</span><br><span class="hljs-comment"># firewall-cmd --reload</span><br></code></pre></td></tr></table></figure><p>如果省略区域，将使用默认区域。 但是，如果您需要通过 iptables 允许 VRRP 流量，请运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># iptables -I INPUT -p vrrp -j ACCEPT</span><br><span class="hljs-comment"># iptables-save &gt; /etc/sysconfig/iptables</span><br><span class="hljs-comment"># systemctl restart iptables</span><br></code></pre></td></tr></table></figure><p>配置参考<a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/load_balancer_administration/s1-lvs-connect-vsa#firewallrequirements-VSA">链接</a></p><h3 id="验证keepalived"><a href="#验证keepalived" class="headerlink" title="验证keepalived"></a>验证keepalived</h3><p>抢占工keepalived配置，启动keepalived后，优先级高的获得VIP，主服务器网卡信息如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ip addr</span><br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 0c:da:41:1d:1a:ee brd ff:ff:ff:ff:ff:ff      <span class="hljs-comment"># 主服务器MAC</span><br>    inet 192.168.10.81/24 brd 192.168.10.255 scope global noprefixroute eth0    <span class="hljs-comment"># 主服务器IP</span><br>       valid_lft forever preferred_lft forever<br>    inet 192.168.10.80/32 scope global eth0             <span class="hljs-comment"># 已获得VIP</span><br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::5551:3346:d6b7:73d5/64 scope <span class="hljs-built_in">link</span> noprefixroute <br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><p>备服务器只有本地网卡IP信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ip addr</span><br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 0c:da:41:1d:db:f5 brd ff:ff:ff:ff:ff:ff      <span class="hljs-comment"># 备服务器MAC</span><br>    inet 192.168.10.82/24 brd 192.168.10.255 scope global noprefixroute eth0    <span class="hljs-comment">#备服务器IP</span><br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::22c7:f98f:8813:7eca/64 scope <span class="hljs-built_in">link</span> noprefixroute <br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><p>使用arping 测试VIP 192.168.10.80，得到结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">arping 192.168.10.80<br>ARPING 192.168.10.80 from 192.168.10.70 eth0<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  1.101ms   <span class="hljs-comment"># 回显主服务器MAC</span><br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  0.948ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  0.870ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  0.690ms<br>^CSent 4 probes (1 broadcast(s))<br>Received 4 response(s)<br></code></pre></td></tr></table></figure><blockquote><p>通过主机arping测试，得到arp缓存为主服务器arp。</p></blockquote><p>将主服务器网络断开。再次测试，查看keepalived状态，此时，备服务器已经分配到VIP，192.168.10.80：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ip addr</span><br>1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000<br>    <span class="hljs-built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00<br>    inet 127.0.0.1/8 scope host lo<br>       valid_lft forever preferred_lft forever<br>    inet6 ::1/128 scope host <br>       valid_lft forever preferred_lft forever<br>2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000<br>    <span class="hljs-built_in">link</span>/ether 0c:da:41:1d:db:f5 brd ff:ff:ff:ff:ff:ff   <span class="hljs-comment"># 备服务器MAC   </span><br>    inet 192.168.10.82/24 brd 192.168.10.255 scope global noprefixroute eth0    <span class="hljs-comment"># 备服务器IP</span><br>       valid_lft forever preferred_lft forever<br>    inet 192.168.10.80/32 scope global eth0<br>       valid_lft forever preferred_lft forever<br>    inet6 fe80::22c7:f98f:8813:7eca/64 scope <span class="hljs-built_in">link</span> noprefixroute <br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><p>使用arping 测试VIP 192.168.10.80，得到结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">root@node70 ~]<span class="hljs-comment"># arping 192.168.10.80</span><br>ARPING 192.168.10.80 from 192.168.10.70 eth0<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  1.101ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  0.948ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  0.870ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  0.690ms<br>^CSent 4 probes (1 broadcast(s))<br>Received 4 response(s)<br>[root@node70 ~]<span class="hljs-comment"># arping 192.168.10.80</span><br>ARPING 192.168.10.80 from 192.168.10.70 eth0<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  1.456ms   <span class="hljs-comment"># 已经回显备服务器MAC</span><br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  1.013ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  0.792ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  0.799ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  0.874ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  0.869ms<br>^CSent 6 probes (1 broadcast(s))<br>Received 6 response(s)<br></code></pre></td></tr></table></figure><blockquote><p>关闭主服务器网络服务后，备服务器能够正常获得VIP 192.168.10.80，VIP实现迁移。</p></blockquote><p>再次重启主服务器的keepalived服务，主服务器再次获得VIP。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@node70 ~]<span class="hljs-comment"># arping 192.168.10.80</span><br>ARPING 192.168.10.80 from 192.168.10.70 eth0<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  1.101ms   <span class="hljs-comment"># 主服务器</span><br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  0.948ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  0.870ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  0.690ms<br>^CSent 4 probes (1 broadcast(s))<br>Received 4 response(s)<br>[root@node70 ~]<span class="hljs-comment"># arping 192.168.10.80</span><br>ARPING 192.168.10.80 from 192.168.10.70 eth0<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  1.456ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  1.013ms   <span class="hljs-comment"># 备服务器</span><br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  0.792ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  0.799ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  0.874ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:DB:F5]  0.869ms<br>^CSent 6 probes (1 broadcast(s))<br>Received 6 response(s)<br>[root@node70 ~]<span class="hljs-comment"># arping 192.168.10.80</span><br>ARPING 192.168.10.80 from 192.168.10.70 eth0<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  1.033ms<br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  0.977ms   <span class="hljs-comment"># 主服务器</span><br>Unicast reply from 192.168.10.80 [0C:DA:41:1D:1A:EE]  0.714ms<br>^CSent 3 probes (1 broadcast(s))<br>Received 3 response(s)<br></code></pre></td></tr></table></figure><blockquote><p>keepalived主备切换，故障恢复测试完成。</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>keepalived</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>salt 安装部署</title>
    <link href="/2022/08/19/salt-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/"/>
    <url>/2022/08/19/salt-%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-安装部署salt"><a href="#CentOS-7-安装部署salt" class="headerlink" title="CentOS 7 安装部署salt"></a>CentOS 7 安装部署salt</h1><p>centos 环境下的salt安装部署过程，记录备忘。</p><span id="more"></span><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>saltstack是由thomas Hatch于2011年创建的一个开源项目，设计初衷是为了实现一个快速的远程执行系统。</p><p>下载地址：<a href="https://mirrors.aliyun.com/saltstack/">https://mirrors.aliyun.com/saltstack/</a></p><h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><h3 id="支持OS"><a href="#支持OS" class="headerlink" title="支持OS"></a>支持OS</h3><p>saltstack 已经支持 Debian, RedHat&#x2F;Centos, Ubuntu,Susu, Fedora, Windows,macOS, Amazon Linux 和 Raspbian 这些操作系统，您可以参考saltstack 提供的文档来配置安装并使用salt 软件。</p><h3 id="具体配置"><a href="#具体配置" class="headerlink" title="具体配置"></a>具体配置</h3><p>Saltstack 的官方文档对其支持的每种操作系统上 salt 的安装已经提供了具体的说明，在您可以访问本站的镜像页面：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">https://mirrors.aliyun.com/saltstack/<br></code></pre></td></tr></table></figure><ol><li>导入阿里镜像源的GPG-KEY和REPO</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm --import https://mirrors.aliyun.com/saltstack/py3/redhat/7/x86_64/latest/SALTSTACK-GPG-KEY.pub<br>curl -fsSL https://mirrors.aliyun.com/saltstack/py3/redhat/7/x86_64/latest.repo | <span class="hljs-built_in">tee</span> /etc/yum.repos.d/salt-lastest.repo<br><span class="hljs-comment"># 更改salt repo配置是的请求地址，改为阿里云镜像源</span><br>sudo sed -i <span class="hljs-string">&quot;s/repo.saltstack.com/mirrors.aliyun.com\/saltstack/g&quot;</span> /etc/yum.repos.d/salt-latest.repo<br></code></pre></td></tr></table></figure><ol start="2"><li>更新软件源</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum clean expire-cache<br><span class="hljs-comment"># 或者</span><br>yum makecache<br></code></pre></td></tr></table></figure><ol start="3"><li>安装salt-minion,salt-master,或都其它的salt组件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">- sudo yum install salt-master<br>- sudo yum install salt-minion<br>- sudo yum install salt-ssh<br>- sudo yum install salt-syndic<br>- sudo yum install salt-cloud<br>- sudo yum install salt-api<br></code></pre></td></tr></table></figure><ol start="4"><li>启用salt-minion,salt-master或其它salt服务</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> salt-master &amp;&amp; sudo systemctl start salt-master<br>sudo systemctl <span class="hljs-built_in">enable</span> salt-minion &amp;&amp; sudo systemctl start salt-minion<br>sudo systemctl <span class="hljs-built_in">enable</span> salt-syndic &amp;&amp; sudo systemctl start salt-syndic<br>sudo systemctl <span class="hljs-built_in">enable</span> salt-api &amp;&amp; sudo systemctl start salt-api<br></code></pre></td></tr></table></figure><p>对应的其它发行版本的配置见阿里源的salt配置文档。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>salt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mariadb Galera集群部署</title>
    <link href="/2022/08/18/Mariadb-Galera%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
    <url>/2022/08/18/Mariadb-Galera%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="Mariadb-Galera集群部署"><a href="#Mariadb-Galera集群部署" class="headerlink" title="Mariadb Galera集群部署"></a>Mariadb Galera集群部署</h1><p>Galera Cluster 本质上是用来在多个数据库服务器之间形成一个集群。它广泛与 MySQL、MariaDB 和 XtraDB 数据库软件系统结合使用。Galera Cluster 是这些数据库系统的组成部分。因此，它可以与其中之一一起安装。<br>本测试实例为三台mariadb组Galera Cluster。<br>记录操作步骤，备忘。</p><span id="more"></span><p>测试节点参考：<br>node1 192.168.10.70<br>node2 192.168.10.71<br>node3 192.168.10.72</p><h2 id="安装-mariadb-galera"><a href="#安装-mariadb-galera" class="headerlink" title="安装 mariadb galera"></a>安装 mariadb galera</h2><p>1、配置mariadb软件源</p><p>官方的源配置参考以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># MariaDB.repo</span><br><br>[mariadb]<br>name = MariaDB<br>baseurl = https://yum.mariadb.org/version/package<br>gpgkey = https://yum.mariadb.org/RPM-GPG-KEY-MariaDB<br>gpgcheck = 1<br></code></pre></td></tr></table></figure><p>具体源配置可以通过[配置链接][1]来查看。也可以配置为国内的阿里源或清华源。国内源配置参考如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[mariadb]<br><span class="hljs-comment"># 阿里源</span><br>name = MariaDB<br>baseurl = https://mirrors.aliyun.com/mariadb/yum/10.9/rhel/7/x86_64/<br>pkpkey = https://mirrors.aliyun.com/mariadb/yum/RPM-GPG-KEY-MariaDB<br>gpgcheck = 1<br><br>[mariadb]<br><span class="hljs-comment"># 清华源</span><br>name = MariaDB<br>baseurl = https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/10.9/rhel/7/x86_64/<br>pkpkey = https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/RPM-GPG-KEY-MariaDB<br>gpgcheck = 1<br></code></pre></td></tr></table></figure><p>2、更新配置的源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 导入gpg key</span><br>rpm --import https://mirrors.aliyun.com/mariadb/yum/RPM-GPG-KEY-MariaDB<br><span class="hljs-comment"># 更新配置的源</span><br>yum makecache<br></code></pre></td></tr></table></figure><p>3、安装mariadb galera</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># galera 作为依赖会自动安装</span><br>yum install mariadb-server mariadb-common galera rsync<br></code></pre></td></tr></table></figure><p>4、galera配置<br>mariadb的配置文件在&#x2F;etc&#x2F;my.cnf.d&#x2F;目录下，可以先备份默认的配置文件，再按实际需求配置。例如node70的配置见下引用内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/my.cnf.d<br><span class="hljs-built_in">cp</span> server.cnf server.cnf.$(<span class="hljs-built_in">date</span> <span class="hljs-string">&quot;+%Y-%m-%d&quot;</span>)<br><br>vim server.cnf<br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># These groups are read by MariaDB server.</span><br><span class="hljs-comment"># Use it for options that only the server (but not clients) should see</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># See the examples of server my.cnf files in /usr/share/mysql/</span><br><span class="hljs-comment">#</span><br><br><span class="hljs-comment"># this is read by the standalone daemon and embedded servers</span><br>[server]<br>datadir=/var/lib/mysql<br>socket=/var/lib/mysql/mysql.sock<br>bind-address=0.0.0.0<br>user=mysql<br><br>innodb_flush_log_at_trx_commit=0<br>innodb_buffer_pool_size=128M<br><br>binlog_format=ROW<br><span class="hljs-comment"># this is only for the mysqld standalone daemon</span><br>[mysqld]<br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># * Galera-related settings</span><br><span class="hljs-comment">#</span><br>[galera]<br><span class="hljs-comment"># Mandatory settings</span><br><span class="hljs-comment">#wsrep_on=ON</span><br><span class="hljs-comment">#wsrep_provider=</span><br><span class="hljs-comment">#wsrep_cluster_address=</span><br><span class="hljs-comment">#binlog_format=row</span><br><span class="hljs-comment">#default_storage_engine=InnoDB</span><br>wsrep_on=ON<br>wsrep_provider=/usr/lib64/galera-4/libgalera_smm.so     <br>wsrep_node_name=<span class="hljs-string">&#x27;node70&#x27;</span>                    <br>wsrep_node_address=<span class="hljs-string">&#x27;192.168.10.70&#x27;</span><br>wsrep_cluster_name=<span class="hljs-string">&#x27;galera-cluster&#x27;</span><br>wsrep_cluster_address=<span class="hljs-string">&quot;gcomm://192.168.10.70,192.168.10.71,192.168.10.72&quot;</span><br><br>binlog_format=row<br><br>default_storage_engine=InnoDB<br>innodb_autoinc_lock_mode=2<br><br><span class="hljs-comment">#innodb_autoinc_lock_mode=2</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Allow server to accept connections on all interfaces.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#bind-address=0.0.0.0</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Optional setting</span><br><span class="hljs-comment">#wsrep_slave_threads=1</span><br><span class="hljs-comment">#innodb_flush_log_at_trx_commit=0</span><br><br><span class="hljs-comment"># this is only for embedded server</span><br>[embedded]<br><br><span class="hljs-comment"># This group is only read by MariaDB servers, not by MySQL.</span><br><span class="hljs-comment"># If you use the same .cnf file for MySQL and MariaDB,</span><br><span class="hljs-comment"># you can put MariaDB-only options here</span><br>[mariadb]<br><br><span class="hljs-comment"># This group is only read by MariaDB-10.7 servers.</span><br><span class="hljs-comment"># If you use the same .cnf file for MariaDB of different versions,</span><br><span class="hljs-comment"># use this group for options that older servers don&#x27;t understand</span><br>[mariadb-10.7]<br></code></pre></td></tr></table></figure><p>node71 的galera配置见下引用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#</span><br><span class="hljs-comment"># These groups are read by MariaDB server.</span><br><span class="hljs-comment"># Use it for options that only the server (but not clients) should see</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># See the examples of server my.cnf files in /usr/share/mysql/</span><br><span class="hljs-comment">#</span><br><br><span class="hljs-comment"># this is read by the standalone daemon and embedded servers</span><br>[server]<br>datadir=/var/lib/mysql<br>socket=/var/lib/mysql/mysql.sock<br>bind-address=0.0.0.0<br>user=mysql<br><br>innodb_flush_log_at_trx_commit=0<br>innodb_buffer_pool_size=128M<br><br>binlog_format=ROW<br><span class="hljs-comment"># this is only for the mysqld standalone daemon</span><br>[mysqld]<br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># * Galera-related settings</span><br><span class="hljs-comment">#</span><br>[galera]<br><span class="hljs-comment"># Mandatory settings</span><br><span class="hljs-comment">#wsrep_on=ON</span><br><span class="hljs-comment">#wsrep_provider=</span><br><span class="hljs-comment">#wsrep_cluster_address=</span><br><span class="hljs-comment">#binlog_format=row</span><br><span class="hljs-comment">#default_storage_engine=InnoDB</span><br>wsrep_on=ON<br>wsrep_provider=/usr/lib64/galera-4/libgalera_smm.so<br>wsrep_node_name=<span class="hljs-string">&#x27;node71&#x27;</span><br>wsrep_node_address=<span class="hljs-string">&#x27;192.168.10.71&#x27;</span><br>wsrep_cluster_name=<span class="hljs-string">&#x27;galera-cluster&#x27;</span><br>wsrep_cluster_address=<span class="hljs-string">&quot;gcomm://192.168.10.70,192.168.10.71,192.168.10.72&quot;</span><br><br>binlog_format=row<br><br>default_storage_engine=InnoDB<br>innodb_autoinc_lock_mode=2<br><br><span class="hljs-comment">#innodb_autoinc_lock_mode=2</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Allow server to accept connections on all interfaces.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#bind-address=0.0.0.0</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Optional setting</span><br><span class="hljs-comment">#wsrep_slave_threads=1</span><br><span class="hljs-comment">#innodb_flush_log_at_trx_commit=0</span><br><br><span class="hljs-comment"># this is only for embedded server</span><br>[embedded]<br><br><span class="hljs-comment"># This group is only read by MariaDB servers, not by MySQL.</span><br><span class="hljs-comment"># If you use the same .cnf file for MySQL and MariaDB,</span><br><span class="hljs-comment"># you can put MariaDB-only options here</span><br>[mariadb]<br><br><span class="hljs-comment"># This group is only read by MariaDB-10.7 servers.</span><br><span class="hljs-comment"># If you use the same .cnf file for MariaDB of different versions,</span><br><span class="hljs-comment"># use this group for options that older servers don&#x27;t understand</span><br>[mariadb-10.7]<br></code></pre></td></tr></table></figure><p>node72上的配置如上所示，更改wsrep node name, wsrep node address为第三个节点的主机信息即可。</p><p>5、Galera Cluster 防火墙配置</p><p>配置Galera Cluster需要在防火墙上放通以下端口，操作下示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-service=mysql<br>firewall-cmd --permanent --add-port=4444/tcp<br>firewall-cmd --permanent --add-port=4567/tcp<br>firewall-cmd --permanent --add-port=4567/udp<br>firewall-cmd --permanent --add-port=4568/tcp<br>firewall-cmd --permanent --add-port=9200/tcp<br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><p>三台集群服务器上的防火墙配置保持一致。</p><p>6、启动Galera Cluster集群</p><p>在任意节点上执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">galera_new_cluster<br>systemctl <span class="hljs-built_in">enable</span> mariadb<br></code></pre></td></tr></table></figure><p>依次在另两个节点上执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start mariadb<br>systemctl <span class="hljs-built_in">enable</span> mariadb<br><span class="hljs-comment"># 或</span><br>systemctl <span class="hljs-built_in">enable</span> --now mariadb<br></code></pre></td></tr></table></figure><p>如无报错，则数据库集群启动完毕。</p><p>7、验证数据库集群</p><p>任意一台节点登录mysql。查看wsrep相关的配置状态。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><code class="hljs bash">MariaDB [(none)]&gt; show status like <span class="hljs-string">&quot;wsrep_cluster_size&quot;</span>;<br>+--------------------+-------+<br>| Variable_name      | Value |<br>+--------------------+-------+<br>| wsrep_cluster_size | 3     |<br>+--------------------+-------+<br>1 row <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.001 sec)<br><br>MariaDB [(none)]&gt; show status like <span class="hljs-string">&quot;wsrep_ready&quot;</span>;<br>+---------------+-------+<br>| Variable_name | Value |<br>+---------------+-------+<br>| wsrep_ready   | ON    |<br>+---------------+-------+<br>1 row <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.001 sec)<br><br><span class="hljs-comment"># wsrep相关的配置状态</span><br><br>MariaDB [(none)]&gt; show status like <span class="hljs-string">&quot;wsrep%&quot;</span>;<br>+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+<br>| Variable_name                 | Value                                                                                                                                          |<br>+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+<br>| wsrep_local_state_uuid        | 7e5591e4-1ec4-11ed-a606-d7bc4e9aadb5                                                                                                           |<br>| wsrep_protocol_version        | 10                                                                                                                                             |<br>| wsrep_last_committed          | 12                                                                                                                                             |<br>| wsrep_replicated              | 0                                                                                                                                              |<br>| wsrep_replicated_bytes        | 0                                                                                                                                              |<br>| wsrep_repl_keys               | 0                                                                                                                                              |<br>| wsrep_repl_keys_bytes         | 0                                                                                                                                              |<br>| wsrep_repl_data_bytes         | 0                                                                                                                                              |<br>| wsrep_repl_other_bytes        | 0                                                                                                                                              |<br>| wsrep_received                | 3                                                                                                                                              |<br>| wsrep_received_bytes          | 256                                                                                                                                            |<br>| wsrep_local_commits           | 0                                                                                                                                              |<br>| wsrep_local_cert_failures     | 0                                                                                                                                              |<br>| wsrep_local_replays           | 0                                                                                                                                              |<br>| wsrep_local_send_queue        | 0                                                                                                                                              |<br>| wsrep_local_send_queue_max    | 1                                                                                                                                              |<br>| wsrep_local_send_queue_min    | 0                                                                                                                                              |<br>| wsrep_local_send_queue_avg    | 0                                                                                                                                              |<br>| wsrep_local_recv_queue        | 0                                                                                                                                              |<br>| wsrep_local_recv_queue_max    | 1                                                                                                                                              |<br>| wsrep_local_recv_queue_min    | 0                                                                                                                                              |<br>| wsrep_local_recv_queue_avg    | 0                                                                                                                                              |<br>| wsrep_local_cached_downto     | 12                                                                                                                                             |<br>| wsrep_flow_control_paused_ns  | 0                                                                                                                                              |<br>| wsrep_flow_control_paused     | 0                                                                                                                                              |<br>| wsrep_flow_control_sent       | 0                                                                                                                                              |<br>| wsrep_flow_control_recv       | 0                                                                                                                                              |<br>| wsrep_flow_control_active     | <span class="hljs-literal">false</span>                                                                                                                                          |<br>| wsrep_flow_control_requested  | <span class="hljs-literal">false</span>                                                                                                                                          |<br>| wsrep_cert_deps_distance      | 0                                                                                                                                              |<br>| wsrep_apply_oooe              | 0                                                                                                                                              |<br>| wsrep_apply_oool              | 0                                                                                                                                              |<br>| wsrep_apply_window            | 0                                                                                                                                              |<br>| wsrep_apply_waits             | 0                                                                                                                                              |<br>| wsrep_commit_oooe             | 0                                                                                                                                              |<br>| wsrep_commit_oool             | 0                                                                                                                                              |<br>| wsrep_commit_window           | 0                                                                                                                                              |<br>| wsrep_local_state             | 4                                                                                                                                              |<br>| wsrep_local_state_comment     | Synced                                                                                                                                         |<br>| wsrep_cert_index_size         | 0                                                                                                                                              |<br>| wsrep_causal_reads            | 0                                                                                                                                              |<br>| wsrep_cert_interval           | 0                                                                                                                                              |<br>| wsrep_open_transactions       | 0                                                                                                                                              |<br>| wsrep_open_connections        | 0                                                                                                                                              |<br>| wsrep_incoming_addresses      | AUTO,AUTO,AUTO                                                                                                                                 |<br>| wsrep_cluster_weight          | 3                                                                                                                                              |<br>| wsrep_desync_count            | 0                                                                                                                                              |<br>| wsrep_evs_delayed             |                                                                                                                                                |<br>| wsrep_evs_evict_list          |                                                                                                                                                |<br>| wsrep_evs_repl_latency        | 0/0/0/0/0                                                                                                                                      |<br>| wsrep_evs_state               | OPERATIONAL                                                                                                                                    |<br>| wsrep_gcomm_uuid              | 60614047-1ed6-11ed-9a12-cffefacd6a64                                                                                                           |<br>| wsrep_gmcast_segment          | 0                                                                                                                                              |<br>| wsrep_applier_thread_count    | 1                                                                                                                                              |<br>| wsrep_cluster_capabilities    |                                                                                                                                                |<br>| wsrep_cluster_conf_id         | 11                                                                                                                                             |<br>| wsrep_cluster_size            | 3                                                                                                                                              |<br>| wsrep_cluster_state_uuid      | 7e5591e4-1ec4-11ed-a606-d7bc4e9aadb5                                                                                                           |<br>| wsrep_cluster_status          | Primary                                                                                                                                        |<br>| wsrep_connected               | ON                                                                                                                                             |<br>| wsrep_local_bf_aborts         | 0                                                                                                                                              |<br>| wsrep_local_index             | 2                                                                                                                                              |<br>| wsrep_provider_capabilities   | :MULTI_MASTER:CERTIFICATION:PARALLEL_APPLYING:TRX_REPLAY:ISOLATION:PAUSE:CAUSAL_READS:INCREMENTAL_WRITESET:UNORDERED:PREORDERED:STREAMING:NBO: |<br>| wsrep_provider_name           | Galera                                                                                                                                         |<br>| wsrep_provider_vendor         | Codership Oy &lt;info@codership.com&gt;                                                                                                              |<br>| wsrep_provider_version        | 26.4.11(r67341d0)                                                                                                                              |<br>| wsrep_ready                   | ON                                                                                                                                             |<br>| wsrep_rollbacker_thread_count | 1                                                                                                                                              |<br>| wsrep_thread_count            | 2                                                                                                                                              |<br>+-------------------------------+------------------------------------------------------------------------------------------------------------------------------------------------+<br>69 rows <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.001 sec)<br><br>7、验证Galera Cluster<br><br>node71上创建新的测试数据库，node72上查看同步状态。后在node72上删除已创建的测试数据库，在node70上查看是否同步。<br><br>```bash<br>[root@node71 ~]<span class="hljs-comment"># mysql -u root -p</span><br>Enter password: <br>Welcome to the MariaDB monitor.  Commands end with ; or \g.<br>Your MariaDB connection <span class="hljs-built_in">id</span> is 10<br>Server version: 10.9.1-MariaDB MariaDB Server<br><br>Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.<br><br>Type <span class="hljs-string">&#x27;help;&#x27;</span> or <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>. Type <span class="hljs-string">&#x27;\c&#x27;</span> to clear the current input statement.<br><br>MariaDB [(none)]&gt; create database <span class="hljs-built_in">test</span>;<br>Query OK, 1 row affected (0.011 sec)<br><br>MariaDB [(none)]&gt; show databases;<br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| sys                |<br>| <span class="hljs-built_in">test</span>               |<br>+--------------------+<br>5 rows <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.001 sec)<br><br>MariaDB [(none)]&gt; <br><br><span class="hljs-comment"># 查看node72上的数据库同步状态</span><br><br>[root@node72 ~]<span class="hljs-comment"># mysql -u root -p</span><br>Enter password: <br>Welcome to the MariaDB monitor.  Commands end with ; or \g.<br>Your MariaDB connection <span class="hljs-built_in">id</span> is 10<br>Server version: 10.9.1-MariaDB MariaDB Server<br><br>Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.<br><br>Type <span class="hljs-string">&#x27;help;&#x27;</span> or <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>. Type <span class="hljs-string">&#x27;\c&#x27;</span> to clear the current input statement.<br><br>MariaDB [(none)]&gt; show databases;<br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| sys                |<br>| <span class="hljs-built_in">test</span>               |              <span class="hljs-comment"># 已经看到node71上创建的test数据库</span><br>+--------------------+<br>5 rows <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.001 sec)<br><br>MariaDB [(none)]&gt; <br><br><span class="hljs-comment"># 在node72上删除创建的数据库</span><br><br>MariaDB [(none)]&gt; drop database <span class="hljs-built_in">test</span>;<br>Query OK, 0 rows affected (0.005 sec)<br><br>MariaDB [(none)]&gt; show databases;<br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| sys                |<br>+--------------------+<br>4 rows <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.000 sec)<br><br>MariaDB [(none)]&gt; <br><br><span class="hljs-comment"># 在node70上查看数据库同步状态</span><br><br>[root@node70 my.cnf.d]<span class="hljs-comment"># mysql -u root -p</span><br>Enter password: <br>Welcome to the MariaDB monitor.  Commands end with ; or \g.<br>Your MariaDB connection <span class="hljs-built_in">id</span> is 13<br>Server version: 10.9.1-MariaDB MariaDB Server<br><br>Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.<br><br>Type <span class="hljs-string">&#x27;help;&#x27;</span> or <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>. Type <span class="hljs-string">&#x27;\c&#x27;</span> to clear the current input statement.<br><br>MariaDB [(none)]&gt; show databases;<br>+--------------------+<br>| Database           |<br>+--------------------+<br>| information_schema |<br>| mysql              |<br>| performance_schema |<br>| sys                |<br>+--------------------+<br>4 rows <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.003 sec)<br><br>MariaDB [(none)]&gt; <br><br><span class="hljs-comment"># 可以看到test数据库删除操作已经同步到node70节点。</span><br></code></pre></td></tr></table></figure><p>MariaDB Galera Cluster集群搭建完毕。</p><p>8、集群自启动</p><p>如上所示，Galera集群启动时必须按照一个特定的规则启动，研究了下，发现规则如下：</p><ul><li><p>如果集群从来没有启动过（3个节点上都没有&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;grastate.dat文件），则必要由其中一个节点以–wsrep-new-cluster参数启动，另外两个节点正常启动即可</p></li><li><p>如果集群以前启动过，则参考&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;grastate.dat，找到safe_to_bootstrap为1的节点，在该节点上以–wsrep-new-cluster参数启动，另外两个节点正常启动即可</p></li><li><p>如果集群以前启动过，但参考&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;grastate.dat，找不到safe_to_bootstrap为1的节点（一般是因为mariadb服务非正常停止造成），则在3个节点中随便找1个节点，将&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;grastate.dat中的safe_to_bootstrap修改为1，再在该节点上以–wsrep-new-cluster参数启动，另外两个节点正常启动即可</p></li></ul><p>从以上3种场景可知，正常情况下很难保证mariadb galera cluster可以无人值守地完成开机自启动。</p><p>补充一个检测脚本，未验证，见下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /usr/local/bin/mariadb_cluster_helper.sh<br><br><span class="hljs-comment">#!/bin/bash</span><br>GRASTATE_FILE=/var/lib/mysql/grastate.dat<br>WSREP_NEW_CLUSTER_LOG_FILE=/tmp/wsrep_new_cluster.log<br><span class="hljs-comment"># 如果启动mariadb超过10秒还没返回0，则认为失败了</span><br>START_MARIADB_TIMEOUT=10<br><span class="hljs-comment"># 以--wsrep-new-cluster参数启动，超过5次检查，发现仍没有其它节点加入集群，则认为此路不通</span><br>SPECIAL_START_WAIT_MAX_COUNT=5<br><span class="hljs-comment"># 得到本机IP</span><br>MY_IP=$(grep <span class="hljs-string">&#x27;wsrep_node_address&#x27;</span> /etc/my.cnf.d/server.cnf | awk -F <span class="hljs-string">&#x27;=&#x27;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br><span class="hljs-comment"># 杀掉mysqld进程</span><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">kill_mysqld_process</span></span>() &#123;<br>    (ps -ef|grep mysqld|grep -v grep|awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>|xargs <span class="hljs-built_in">kill</span> -9) &amp;&gt;/dev/null<br>&#125;<br><span class="hljs-comment"># 正常启动mariadb</span><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">start_mariadb_normal</span></span>()&#123;<br>    <span class="hljs-comment"># 首先确保safe_to_bootstrap标记为0</span><br>    sed -i <span class="hljs-string">&#x27;s/^safe_to_bootstrap.*$/safe_to_bootstrap: 0/&#x27;</span> <span class="hljs-variable">$GRASTATE_FILE</span><br>    <span class="hljs-built_in">timeout</span> <span class="hljs-variable">$START_MARIADB_TIMEOUT</span> systemctl start mariadb &amp;&gt; /dev/null<br>    <span class="hljs-built_in">return</span> $?<br>&#125;<br><span class="hljs-comment"># 以--wsrep-new-cluster参数启动mariadb</span><br><span class="hljs-keyword">function</span> <span class="hljs-function"><span class="hljs-title">start_mariadb_special</span></span>()&#123;<br>    <span class="hljs-comment"># 首先确保safe_to_bootstrap标记为1</span><br>    sed -i <span class="hljs-string">&#x27;s/^safe_to_bootstrap.*$/safe_to_bootstrap: 1/&#x27;</span> <span class="hljs-variable">$GRASTATE_FILE</span><br>    <span class="hljs-comment"># 以--wsrep-new-cluster参数启动mariadb</span><br>    /usr/sbin/mysqld --user=mysql --wsrep-new-cluster &amp;&gt; <span class="hljs-variable">$WSREP_NEW_CLUSTER_LOG_FILE</span> &amp;<br>    <span class="hljs-built_in">disown</span> $!<br>    try_count=0<br>    <span class="hljs-comment"># 循环检查</span><br>    <span class="hljs-keyword">while</span> [ 1 ]; <span class="hljs-keyword">do</span><br>        <span class="hljs-comment"># 如果超过SPECIAL_START_WAIT_MAX_COUNT次检查，仍没有其它节点加入集群，则认为此路不通，尝试正常启动，跳出循环</span><br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$try_count</span> -gt <span class="hljs-variable">$SPECIAL_START_WAIT_MAX_COUNT</span> ] ; <span class="hljs-keyword">then</span><br>            kill_mysqld_process<br>            start_mariadb_normal<br>            <span class="hljs-built_in">return</span> $?<br>        <span class="hljs-keyword">fi</span><br>        new_joined_count=$(grep <span class="hljs-string">&#x27;synced with group&#x27;</span> /tmp/wsrep_new_cluster.log | grep -v <span class="hljs-variable">$MY_IP</span>|<span class="hljs-built_in">wc</span> -l)<br>        exception_count=$(grep <span class="hljs-string">&#x27;exception from gcomm, backend must be restarted&#x27;</span> <span class="hljs-variable">$WSREP_NEW_CLUSTER_LOG_FILE</span> | <span class="hljs-built_in">wc</span> -l)<br>        <span class="hljs-comment"># 如果新加入的节点数大于0，则认为集群就绪了，可正常启动了，跳出循环</span><br>        <span class="hljs-comment"># 如果运行日志中发现了异常(两个节点都以--wsrep-new-cluster参数启动，其中一个会报错)，则认为此路不通，尝试正常启动，跳出循环</span><br>        <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$new_joined_count</span> -gt 0 ] || [ <span class="hljs-variable">$exception_count</span> -gt 0 ] ; <span class="hljs-keyword">then</span><br>            kill_mysqld_process<br>            start_mariadb_normal<br>            <span class="hljs-built_in">return</span> $?<br>        <span class="hljs-keyword">else</span><br>            try_count=$(( <span class="hljs-variable">$try_count</span> + <span class="hljs-number">1</span> ))<br>        <span class="hljs-keyword">fi</span><br>        <span class="hljs-built_in">sleep</span> 5<br>    <span class="hljs-keyword">done</span><br>&#125;<br><span class="hljs-comment"># 首先杀掉mysqld进程</span><br>kill_mysqld_process<br>ret=-1<br><span class="hljs-comment"># 如果safe_to_bootstrap标记为1，则立即以--wsrep-new-cluster参数启动</span><br><span class="hljs-keyword">if</span> [ -f <span class="hljs-variable">$GRASTATE_FILE</span> ]; <span class="hljs-keyword">then</span><br>    safe_bootstrap_flag=$(grep <span class="hljs-string">&#x27;safe_to_bootstrap&#x27;</span> <span class="hljs-variable">$GRASTATE_FILE</span> | awk -F <span class="hljs-string">&#x27;: &#x27;</span> <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$safe_bootstrap_flag</span> -eq 1 ] ; <span class="hljs-keyword">then</span><br>        start_mariadb_special<br>        ret=$?<br>    <span class="hljs-keyword">else</span><br>        start_mariadb_normal<br>        ret=$?<br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">else</span><br>    start_mariadb_normal<br>    ret=$?<br><span class="hljs-keyword">fi</span><br><span class="hljs-comment"># 随机地按某种方式启动，直到以某种方式正常启动以止；否则杀掉mysqld进程，随机休息一会儿，重试</span><br><span class="hljs-keyword">while</span> [ <span class="hljs-variable">$ret</span> -ne 0 ]; <span class="hljs-keyword">do</span><br>    kill_mysqld_process<br>    sleep_time=$(( <span class="hljs-variable">$RANDOM</span> % <span class="hljs-number">10</span> ))<br>    <span class="hljs-built_in">sleep</span> <span class="hljs-variable">$sleep_time</span><br>    choice=$(( <span class="hljs-variable">$RANDOM</span> % <span class="hljs-number">2</span> ))<br>    ret=-1<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-variable">$choice</span> -eq 0 ] ; <span class="hljs-keyword">then</span><br>        start_mariadb_special<br>        ret=$?<br>    <span class="hljs-keyword">else</span><br>        start_mariadb_normal<br>        ret=$?<br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br><br><span class="hljs-comment"># 使上述脚本开机自启动</span><br><span class="hljs-built_in">chmod</span> +x /usr/local/bin/mariadb_cluster_helper.sh<br><span class="hljs-built_in">chmod</span> +x /etc/rc.d/rc.local<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;</span><br><span class="hljs-string">/usr/local/bin/mariadb_cluster_helper.sh &amp;&gt; /var/log/mariadb_cluster_helper.log &amp;&#x27;</span> &gt;&gt; /etc/rc.d/rc.local<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>mariadb</tag>
      
      <tag>mysql</tag>
      
      <tag>galera</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 7 安装Mariadb 10.9以及后续配置</title>
    <link href="/2022/08/18/CentOS-7-%E5%AE%89%E8%A3%85Mariadb-10-9%E4%BB%A5%E5%8F%8A%E5%90%8E%E7%BB%AD%E9%85%8D%E7%BD%AE/"/>
    <url>/2022/08/18/CentOS-7-%E5%AE%89%E8%A3%85Mariadb-10-9%E4%BB%A5%E5%8F%8A%E5%90%8E%E7%BB%AD%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-安装Mariadb-10-9以及后续配置"><a href="#CentOS-7-安装Mariadb-10-9以及后续配置" class="headerlink" title="CentOS 7 安装Mariadb 10.9以及后续配置"></a>CentOS 7 安装Mariadb 10.9以及后续配置</h1><p>Mariadb 安装完成后，启用本地用户名密码登录。</p><span id="more"></span><p>参考CentOS 7的mariadb 源配置后，可以通过yum安装Mariadb对应的源版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install mariadb-server mariadb-common<br><span class="hljs-comment"># 启用mariadb服务</span><br>systemctl start mariadb<br></code></pre></td></tr></table></figure><h2 id="mariadb-本地启用密码登录"><a href="#mariadb-本地启用密码登录" class="headerlink" title="mariadb 本地启用密码登录"></a>mariadb 本地启用密码登录</h2><p>启用服务后，首先会想到mysql_secure_installation命令设置root密码，设置完成后，尝试使用本地登录，发现设置的密码不起作用。不用密码也能正常登录。<br>Mariadb 在10.4.3之后的版本，默认安装了 unix_socket 身份验证插件，默认由 ‘root‘@’localhost’ 用户帐户使用。<br>unix_socket 身份验证插件允许用户在通过本地 Unix 套接字文件连接到 MariaDB 时使用操作系统凭据。这个 Unix 套接字文件由套接字系统变量定义。参考<a href="https://mariadb.com/kb/en/authentication-plugin-unix-socket/">链接</a>。</p><p>有时 Unix 套接字身份验证不能满足您的需要，因此可能需要将用户帐户切换回基于密码的身份验证。这可以通过执行语句告诉 MariaDB为该帐户使用另一个身份验证插件来轻松完成。ALTER USER该IDENTIFIED VIA子句指定了特定的身份验证插件。例如，如果您想切换到mysql_native_password身份验证插件，那么您可以执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ALTER USER root@localhost IDENTIFIED VIA mysql_native_password;<br>SET PASSWORD = PASSWORD(<span class="hljs-string">&#x27;foo&#x27;</span>);<br></code></pre></td></tr></table></figure><p>配置结束，再次执行mariadb-secure-installation命令配置。完成后，本机测试登录，使用密码可正常登录mariadb。</p>]]></content>
    
    
    <categories>
      
      <category>database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mariadb</tag>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 7 配置 mariadb 阿里源</title>
    <link href="/2022/08/18/centos-7-%E9%85%8D%E7%BD%AE-mariadb-%E9%98%BF%E9%87%8C%E6%BA%90/"/>
    <url>/2022/08/18/centos-7-%E9%85%8D%E7%BD%AE-mariadb-%E9%98%BF%E9%87%8C%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-配置-Mariadb-阿里源"><a href="#CentOS-7-配置-Mariadb-阿里源" class="headerlink" title="CentOS 7 配置 Mariadb 阿里源"></a>CentOS 7 配置 Mariadb 阿里源</h1><p>CentOS 7 默认源中的Mariadb 版本为 mysql  Ver 15.1 Distrib 5.5.68-MariaDB, for Linux (x86_64) using readline 5.1，官方的发行版本已经到10.9.1。可以配置官方的源，来使用最新的mariadb版本。</p><span id="more"></span><h2 id="mariadb-配置国内源"><a href="#mariadb-配置国内源" class="headerlink" title="mariadb 配置国内源"></a>mariadb 配置国内源</h2><p>1、导入GPG-KEY</p><p>导入阿里源的GPG-KEY</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm --import https://mirrors.aliyun.com/mariadb/yum/RPM-GPG-KEY-MariaDB<br></code></pre></td></tr></table></figure><p>2、编辑mariadb的阿里源，或国内其它源站点，如清华源</p><p>参考如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim mariadb.repo<br><br>[mariadb]<br><span class="hljs-comment"># 阿里源</span><br>name = MariaDB<br>baseurl = https://mirrors.aliyun.com/mariadb/yum/10.9/rhel/7/x86_64/   <span class="hljs-comment"># mariadb 10.9 的源</span><br>pkpkey = https://mirrors.aliyun.com/mariadb/yum/RPM-GPG-KEY-MariaDB<br>gpgcheck = 1<br><br>[mariadb]<br><span class="hljs-comment"># 清华源</span><br>name = MariaDB<br>baseurl = https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/10.9/rhel/7/x86_64/   <span class="hljs-comment"># mariadb 10.9 的源</span><br>pkpkey = https://mirrors.tuna.tsinghua.edu.cn/mariadb/yum/RPM-GPG-KEY-MariaDB<br>gpgcheck = 1<br></code></pre></td></tr></table></figure><p>3、更新源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum makecache <span class="hljs-comment"># 更新新添加的</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mariadb</tag>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Firewall and Security Groups</title>
    <link href="/2022/08/13/Firewall-and-Security-Groups/"/>
    <url>/2022/08/13/Firewall-and-Security-Groups/</url>
    
    <content type="html"><![CDATA[<h1 id="Firewall-and-Security-Groups"><a href="#Firewall-and-Security-Groups" class="headerlink" title="Ｆirewall and Security Groups"></a>Ｆirewall and Security Groups</h1><p>列举一些常用的数据基础设施端口如下，涉及数据库，集群相关的，不能只会关闭防火墙了。</p><span id="more"></span><p>常用的端口：</p><ul><li>ICMP（echo reply&#x2F; request）</li><li>SSH (default is 22)</li><li>HTTP (default is 80)</li><li>HTTPS (default is 443)</li><li>MySQL (default is 3306)</li><li>CMON RPC (default is 9500)</li><li>CMON RPC TLS (default is 9501)</li><li>CMON Events (default is 9510)</li><li>CMON SSH (default is 9511)</li><li>CMON Cloud (default is 9518)</li></ul><h2 id="数据库集群常用端口"><a href="#数据库集群常用端口" class="headerlink" title="数据库集群常用端口"></a>数据库集群常用端口</h2><p>数据库、集群相关常用端口。</p><table><thead><tr><th>数据库集群</th><th>端口</th></tr></thead><tbody><tr><td>MySQL&#x2F;MariaDB(simgle instance and replication)</td><td><li>22(ssh)<li>ICMP(echo reply&#x2F;request)<li>3306(MySQL)</td></tr><tr><td>MariaDB Galera Cluster&#x2F;Percona XtraDB Cluster</td><td><li>22(ssh)<li>ICMP(echo reply&#x2F;request)<li>3306(Mysql)<li>4444(SST)<li>4567 TCP&#x2F;UDP(Galera)<li>4568(Galera IST)<li>9200(HAProxy health check)</td></tr><tr><td>MySQL Cluster(NDB)</td><td><li>22(SSH)<li>ICMP(echo reply&#x2F;request)<li>1186(MySQL Cluster)<li>2200(MySQL Cluster)<li>3306(MySQL)</td></tr><tr><td>MongoDB replica set</td><td><li>22(SSH)<li>ICMP(echo reply&#x2F;request)<li>27017(mongod)</td></tr><tr><td>MongoDB shareded cluster</td><td><li>22(SSH)<li>ICMP(echo reply&#x2F;request)<li>27018(mongod)<li>27017(mongos)<li>27019(config server)</td></tr><tr><td>PostgreSQL</td><td><li>22(SSH)<li>ICMP(echo reply&#x2F;request)<li>5432(postgres)</td></tr><tr><td>HAProxy</td><td><li>22(SSH)<li>ICMP(echo reply&#x2F;request)<li>9600(HAP)<li>3307(MySQL load-balanced)<li>3308(MySQL load-balanced read-only)<li>5433(PostgreSQL load-balanced)<li>5434(PostgreSQL load-balanced read-only)</td></tr><tr><td>MariaDB MaxScale</td><td><li>22(SSH)<li>ICMP(echo reply&#x2F;request)6303(MaxCtrl-CLI)<li>4006(Round robin listener)<li>4008(Read&#x2F;Write split listener)<li>4442(Debug information)</td></tr><tr><td>Keepalived</td><td><li>22(SSH)<li>ICMP(echo reply&#x2F;request)<li>224.0.0.0&#x2F;8(multicast request)<li>IP protocol 112(VRRP)</td></tr><tr><td>Galera Arbitrator(garbd)</td><td><li>22(SSH)<li>ICMP(echo reply&#x2F;request)<li>4567(Galera)</td></tr><tr><td>ProxySQL</td><td><li>22(SSH)<li>ICMP(echo reply&#x2F;request)<li>6032(ProxySQL Admin)&lt;6303&gt;(MySQL load-bananced)</td></tr><tr><td>Prometheus</td><td><li>22(SSH)<li>ICMP(echo reply&#x2F;request)<li>9090(Prometheus)</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mariadb</tag>
      
      <tag>Galera Cluster</tag>
      
      <tag>Mysql Cluster</tag>
      
      <tag>MongoDB</tag>
      
      <tag>PostgreSQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>openvpn 集成 openldap 认证</title>
    <link href="/2022/08/10/openvpn-%E9%9B%86%E6%88%90-openldap-%E8%AE%A4%E8%AF%81/"/>
    <url>/2022/08/10/openvpn-%E9%9B%86%E6%88%90-openldap-%E8%AE%A4%E8%AF%81/</url>
    
    <content type="html"><![CDATA[<h1 id="openvpn集成openldap认证"><a href="#openvpn集成openldap认证" class="headerlink" title="openvpn集成openldap认证"></a>openvpn集成openldap认证</h1><p>已经搭建好的openvpn环境，可以使用openldap认证插件实现通过openldap统一认证。</p><span id="more"></span><h2 id="openldap插件配置"><a href="#openldap插件配置" class="headerlink" title="openldap插件配置"></a>openldap插件配置</h2><p>配置好openvpn环境后，可以安装open-auth-ldap认证插件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install openvpn-auth-ldap<br></code></pre></td></tr></table></figure><p>安装好的openvpn ldap 认证插件会在&#x2F;etc&#x2F;openvpn&#x2F;auth目录下生成配置文件。</p><h2 id="openldap认证配置"><a href="#openldap认证配置" class="headerlink" title="openldap认证配置"></a>openldap认证配置</h2><p>可以先备份一下默认的配置文件，再更改配置文件。以测试配置是否生效。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/openvpn/auth/ldap.conf /etc/openvpn/auth/ldap.conf.$(<span class="hljs-built_in">date</span> <span class="hljs-string">&quot;+%Y-%m-%d&quot;</span>)<br></code></pre></td></tr></table></figure><p>ldap 配置文件参考：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;LDAP&gt;<br><span class="hljs-comment"># LDAP server URL</span><br>URLldap://ldap_server_ip:389<br><br><span class="hljs-comment"># Bind DN (If your LDAP server doesn&#x27;t support anonymous binds)</span><br><span class="hljs-comment"># BindDNuid=Manager,ou=People,dc=example,dc=com</span><br>BindDNou=openvpn,ou=Project,dc=abc,dc=def<br><br><span class="hljs-comment"># Bind Password</span><br><span class="hljs-comment"># PasswordSecretPassword</span><br>PasswordSecrePassword<br><br><span class="hljs-comment"># Network timeout (in seconds)</span><br>Timeout15<br><br><span class="hljs-comment"># Enable Start TLS</span><br>TLSEnableno   <span class="hljs-comment"># TLS配置</span><br><br><span class="hljs-comment"># Follow LDAP Referrals (anonymously)</span><br>FollowReferrals <span class="hljs-built_in">yes</span><br><br><span class="hljs-comment"># TLS CA Certificate File</span><br>TLSCACertFile/usr/local/etc/ssl/ca.pem<br><br><span class="hljs-comment"># TLS CA Certificate Directory</span><br>TLSCACertDir/etc/ssl/certs<br><br><span class="hljs-comment"># Client Certificate and key</span><br><span class="hljs-comment"># If TLS client authentication is required</span><br>TLSCertFile/usr/local/etc/ssl/client-cert.pem<br>TLSKeyFile/usr/local/etc/ssl/client-key.pem<br><br><span class="hljs-comment"># Cipher Suite</span><br><span class="hljs-comment"># The defaults are usually fine here</span><br><span class="hljs-comment"># TLSCipherSuiteALL:!ADH:@STRENGTH</span><br>&lt;/LDAP&gt;<br><br>&lt;Authorization&gt;<br><span class="hljs-comment"># Base DN</span><br>BaseDN<span class="hljs-string">&quot;ou=People,dc=abc,dc=def&quot;</span><br><br><span class="hljs-comment"># User Search Filter</span><br><span class="hljs-comment"># SearchFilter&quot;(&amp;(uid=%u)(accountStatus=active))&quot;</span><br>SearchFilter<span class="hljs-string">&quot;uid=%u&quot;</span>   <span class="hljs-comment"># 配置认证</span><br><br><span class="hljs-comment"># Require Group Membership</span><br>RequireGroup<span class="hljs-literal">true</span><br><br><span class="hljs-comment"># Add non-group members to a PF table (disabled)</span><br><span class="hljs-comment">#PFTableips_vpn_users</span><br><br>&lt;Group&gt;<br>BaseDN<span class="hljs-string">&quot;ou=openvpn,ou=Project,dc=abc,dc=def&quot;</span><br>SearchFilter<span class="hljs-string">&quot;cn=your_group_name&quot;</span><br>MemberAttributeuniqueMember<br><span class="hljs-comment"># Add group members to a PF table (disabled)</span><br><span class="hljs-comment">#PFTableips_vpn_eng</span><br>&lt;/Group&gt;<br>&lt;/Authorization&gt;<br><br><br><span class="hljs-comment">## openvpn 服务端配置</span><br><br>变更openvpn服务器配置，将原有的配置方式改为openldap plugin认证。服务端配置文件参考如下：<br><br>```bash<br><span class="hljs-comment">#################################################</span><br><span class="hljs-comment"># Sample OpenVPN 2.0 config file for            #</span><br><span class="hljs-comment"># multi-client server.                          #</span><br><span class="hljs-comment">#                                               #</span><br><span class="hljs-comment"># This file is for the server side              #</span><br><span class="hljs-comment"># of a many-clients &lt;-&gt; one-server              #</span><br><span class="hljs-comment"># OpenVPN configuration.                        #</span><br><span class="hljs-comment">#                                               #</span><br><span class="hljs-comment"># OpenVPN also supports                         #</span><br><span class="hljs-comment"># single-machine &lt;-&gt; single-machine             #</span><br><span class="hljs-comment"># configurations (See the Examples page         #</span><br><span class="hljs-comment"># on the web site for more info).               #</span><br><span class="hljs-comment">#                                               #</span><br><span class="hljs-comment"># This config should work on Windows            #</span><br><span class="hljs-comment"># or Linux/BSD systems.  Remember on            #</span><br><span class="hljs-comment"># Windows to quote pathnames and use            #</span><br><span class="hljs-comment"># double backslashes, e.g.:                     #</span><br><span class="hljs-comment"># &quot;C:\\Program Files\\OpenVPN\\config\\foo.key&quot; #</span><br><span class="hljs-comment">#                                               #</span><br><span class="hljs-comment"># Comments are preceded with &#x27;#&#x27; or &#x27;;&#x27;         #</span><br><span class="hljs-comment">#################################################</span><br><br><span class="hljs-comment"># Which local IP address should OpenVPN</span><br><span class="hljs-comment"># listen on? (optional)</span><br>;<span class="hljs-built_in">local</span> a.b.c.d<br><br><span class="hljs-comment"># Which TCP/UDP port should OpenVPN listen on?</span><br><span class="hljs-comment"># If you want to run multiple OpenVPN instances</span><br><span class="hljs-comment"># on the same machine, use a different port</span><br><span class="hljs-comment"># number for each one.  You will need to</span><br><span class="hljs-comment"># open up this port on your firewall.</span><br>port 1194<br><br><span class="hljs-comment"># TCP or UDP server?</span><br>proto tcp<br>;proto udp<br><br><span class="hljs-comment"># &quot;dev tun&quot; will create a routed IP tunnel,</span><br><span class="hljs-comment"># &quot;dev tap&quot; will create an ethernet tunnel.</span><br><span class="hljs-comment"># Use &quot;dev tap0&quot; if you are ethernet bridging</span><br><span class="hljs-comment"># and have precreated a tap0 virtual interface</span><br><span class="hljs-comment"># and bridged it with your ethernet interface.</span><br><span class="hljs-comment"># If you want to control access policies</span><br><span class="hljs-comment"># over the VPN, you must create firewall</span><br><span class="hljs-comment"># rules for the the TUN/TAP interface.</span><br><span class="hljs-comment"># On non-Windows systems, you can give</span><br><span class="hljs-comment"># an explicit unit number, such as tun0.</span><br><span class="hljs-comment"># On Windows, use &quot;dev-node&quot; for this.</span><br><span class="hljs-comment"># On most systems, the VPN will not function</span><br><span class="hljs-comment"># unless you partially or fully disable</span><br><span class="hljs-comment"># the firewall for the TUN/TAP interface.</span><br>;dev tap<br>dev tun<br><br><span class="hljs-comment"># Windows needs the TAP-Win32 adapter name</span><br><span class="hljs-comment"># from the Network Connections panel if you</span><br><span class="hljs-comment"># have more than one.  On XP SP2 or higher,</span><br><span class="hljs-comment"># you may need to selectively disable the</span><br><span class="hljs-comment"># Windows firewall for the TAP adapter.</span><br><span class="hljs-comment"># Non-Windows systems usually don&#x27;t need this.</span><br>;dev-node MyTap<br><br><span class="hljs-comment"># SSL/TLS root certificate (ca), certificate</span><br><span class="hljs-comment"># (cert), and private key (key).  Each client</span><br><span class="hljs-comment"># and the server must have their own cert and</span><br><span class="hljs-comment"># key file.  The server and all clients will</span><br><span class="hljs-comment"># use the same ca file.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># See the &quot;easy-rsa&quot; directory for a series</span><br><span class="hljs-comment"># of scripts for generating RSA certificates</span><br><span class="hljs-comment"># and private keys.  Remember to use</span><br><span class="hljs-comment"># a unique Common Name for the server</span><br><span class="hljs-comment"># and each of the client certificates.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Any X509 key management system can be used.</span><br><span class="hljs-comment"># OpenVPN can also use a PKCS #12 formatted key file</span><br><span class="hljs-comment"># (see &quot;pkcs12&quot; directive in man page).</span><br>ca /etc/openvpn/easy-rsa/pki/ca.crt<br>cert /etc/openvpn/easy-rsa/pki/issued/server.crt<br>key /etc/openvpn/easy-rsa/pki/private/server.key  <span class="hljs-comment"># This file should be kept secret</span><br><br><span class="hljs-comment"># Diffie hellman parameters.</span><br><span class="hljs-comment"># Generate your own with:</span><br><span class="hljs-comment">#   openssl dhparam -out dh2048.pem 2048</span><br>dh /etc/openvpn/easy-rsa/pki/dh.pem<br><br><span class="hljs-comment"># Network topology</span><br><span class="hljs-comment"># Should be subnet (addressing via IP)</span><br><span class="hljs-comment"># unless Windows clients v2.0.9 and lower have to</span><br><span class="hljs-comment"># be supported (then net30, i.e. a /30 per client)</span><br><span class="hljs-comment"># Defaults to net30 (not recommended)</span><br>topology subnet<br><br><span class="hljs-comment"># Configure server mode and supply a VPN subnet</span><br><span class="hljs-comment"># for OpenVPN to draw client addresses from.</span><br><span class="hljs-comment"># The server will take 10.8.0.1 for itself,</span><br><span class="hljs-comment"># the rest will be made available to clients.</span><br><span class="hljs-comment"># Each client will be able to reach the server</span><br><span class="hljs-comment"># on 10.8.0.1. Comment this line out if you are</span><br><span class="hljs-comment"># ethernet bridging. See the man page for more info.</span><br>server 10.8.0.0 255.255.255.0<br><br><span class="hljs-comment"># Maintain a record of client &lt;-&gt; virtual IP address</span><br><span class="hljs-comment"># associations in this file.  If OpenVPN goes down or</span><br><span class="hljs-comment"># is restarted, reconnecting clients can be assigned</span><br><span class="hljs-comment"># the same virtual IP address from the pool that was</span><br><span class="hljs-comment"># previously assigned.</span><br>ifconfig-pool-persist ipp.txt<br><br><span class="hljs-comment"># Configure server mode for ethernet bridging.</span><br><span class="hljs-comment"># You must first use your OS&#x27;s bridging capability</span><br><span class="hljs-comment"># to bridge the TAP interface with the ethernet</span><br><span class="hljs-comment"># NIC interface.  Then you must manually set the</span><br><span class="hljs-comment"># IP/netmask on the bridge interface, here we</span><br><span class="hljs-comment"># assume 10.8.0.4/255.255.255.0.  Finally we</span><br><span class="hljs-comment"># must set aside an IP range in this subnet</span><br><span class="hljs-comment"># (start=10.8.0.50 end=10.8.0.100) to allocate</span><br><span class="hljs-comment"># to connecting clients.  Leave this line commented</span><br><span class="hljs-comment"># out unless you are ethernet bridging.</span><br>;server-bridge 10.8.0.4 255.255.255.0 10.8.0.50 10.8.0.100<br><br><span class="hljs-comment"># Configure server mode for ethernet bridging</span><br><span class="hljs-comment"># using a DHCP-proxy, where clients talk</span><br><span class="hljs-comment"># to the OpenVPN server-side DHCP server</span><br><span class="hljs-comment"># to receive their IP address allocation</span><br><span class="hljs-comment"># and DNS server addresses.  You must first use</span><br><span class="hljs-comment"># your OS&#x27;s bridging capability to bridge the TAP</span><br><span class="hljs-comment"># interface with the ethernet NIC interface.</span><br><span class="hljs-comment"># Note: this mode only works on clients (such as</span><br><span class="hljs-comment"># Windows), where the client-side TAP adapter is</span><br><span class="hljs-comment"># bound to a DHCP client.</span><br>;server-bridge<br><br><span class="hljs-comment"># Push routes to the client to allow it</span><br><span class="hljs-comment"># to reach other private subnets behind</span><br><span class="hljs-comment"># the server.  Remember that these</span><br><span class="hljs-comment"># private subnets will also need</span><br><span class="hljs-comment"># to know to route the OpenVPN client</span><br><span class="hljs-comment"># address pool (10.8.0.0/255.255.255.0)</span><br><span class="hljs-comment"># back to the OpenVPN server.</span><br>;push <span class="hljs-string">&quot;route 192.168.10.0 255.255.255.0&quot;</span><br>;push <span class="hljs-string">&quot;route 192.168.20.0 255.255.255.0&quot;</span><br><br><span class="hljs-comment"># To assign specific IP addresses to specific</span><br><span class="hljs-comment"># clients or if a connecting client has a private</span><br><span class="hljs-comment"># subnet behind it that should also have VPN access,</span><br><span class="hljs-comment"># use the subdirectory &quot;ccd&quot; for client-specific</span><br><span class="hljs-comment"># configuration files (see man page for more info).</span><br><br><span class="hljs-comment"># EXAMPLE: Suppose the client</span><br><span class="hljs-comment"># having the certificate common name &quot;Thelonious&quot;</span><br><span class="hljs-comment"># also has a small subnet behind his connecting</span><br><span class="hljs-comment"># machine, such as 192.168.40.128/255.255.255.248.</span><br><span class="hljs-comment"># First, uncomment out these lines:</span><br>;client-config-dir ccd<br>;route 192.168.40.128 255.255.255.248<br><span class="hljs-comment"># Then create a file ccd/Thelonious with this line:</span><br><span class="hljs-comment">#   iroute 192.168.40.128 255.255.255.248</span><br><span class="hljs-comment"># This will allow Thelonious&#x27; private subnet to</span><br><span class="hljs-comment"># access the VPN.  This example will only work</span><br><span class="hljs-comment"># if you are routing, not bridging, i.e. you are</span><br><span class="hljs-comment"># using &quot;dev tun&quot; and &quot;server&quot; directives.</span><br><br><span class="hljs-comment"># EXAMPLE: Suppose you want to give</span><br><span class="hljs-comment"># Thelonious a fixed VPN IP address of 10.9.0.1.</span><br><span class="hljs-comment"># First uncomment out these lines:</span><br>;client-config-dir ccd<br>;route 10.9.0.0 255.255.255.252<br><span class="hljs-comment"># Then add this line to ccd/Thelonious:</span><br><span class="hljs-comment">#   ifconfig-push 10.9.0.1 10.9.0.2</span><br><br><span class="hljs-comment"># Suppose that you want to enable different</span><br><span class="hljs-comment"># firewall access policies for different groups</span><br><span class="hljs-comment"># of clients.  There are two methods:</span><br><span class="hljs-comment"># (1) Run multiple OpenVPN daemons, one for each</span><br><span class="hljs-comment">#     group, and firewall the TUN/TAP interface</span><br><span class="hljs-comment">#     for each group/daemon appropriately.</span><br><span class="hljs-comment"># (2) (Advanced) Create a script to dynamically</span><br><span class="hljs-comment">#     modify the firewall in response to access</span><br><span class="hljs-comment">#     from different clients.  See man</span><br><span class="hljs-comment">#     page for more info on learn-address script.</span><br>;learn-address ./script<br><br><span class="hljs-comment"># If enabled, this directive will configure</span><br><span class="hljs-comment"># all clients to redirect their default</span><br><span class="hljs-comment"># network gateway through the VPN, causing</span><br><span class="hljs-comment"># all IP traffic such as web browsing and</span><br><span class="hljs-comment"># and DNS lookups to go through the VPN</span><br><span class="hljs-comment"># (The OpenVPN server machine may need to NAT</span><br><span class="hljs-comment"># or bridge the TUN/TAP interface to the internet</span><br><span class="hljs-comment"># in order for this to work properly).</span><br>push <span class="hljs-string">&quot;redirect-gateway def1 bypass-dhcp&quot;</span><br><br><span class="hljs-comment"># Certain Windows-specific network settings</span><br><span class="hljs-comment"># can be pushed to clients, such as DNS</span><br><span class="hljs-comment"># or WINS server addresses.  CAVEAT:</span><br><span class="hljs-comment"># http://openvpn.net/faq.html#dhcpcaveats</span><br><span class="hljs-comment"># The addresses below refer to the public</span><br><span class="hljs-comment"># DNS servers provided by opendns.com.</span><br>push <span class="hljs-string">&quot;dhcp-option DNS 223.5.5.5&quot;</span><br>push <span class="hljs-string">&quot;dhcp-option DNS 223.6.6.6&quot;</span><br><br><span class="hljs-comment"># Uncomment this directive to allow different</span><br><span class="hljs-comment"># clients to be able to &quot;see&quot; each other.</span><br><span class="hljs-comment"># By default, clients will only see the server.</span><br><span class="hljs-comment"># To force clients to only see the server, you</span><br><span class="hljs-comment"># will also need to appropriately firewall the</span><br><span class="hljs-comment"># server&#x27;s TUN/TAP interface.</span><br>;client-to-client<br><br><span class="hljs-comment"># Uncomment this directive if multiple clients</span><br><span class="hljs-comment"># might connect with the same certificate/key</span><br><span class="hljs-comment"># files or common names.  This is recommended</span><br><span class="hljs-comment"># only for testing purposes.  For production use,</span><br><span class="hljs-comment"># each client should have its own certificate/key</span><br><span class="hljs-comment"># pair.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># IF YOU HAVE NOT GENERATED INDIVIDUAL</span><br><span class="hljs-comment"># CERTIFICATE/KEY PAIRS FOR EACH CLIENT,</span><br><span class="hljs-comment"># EACH HAVING ITS OWN UNIQUE &quot;COMMON NAME&quot;,</span><br><span class="hljs-comment"># UNCOMMENT THIS LINE OUT.</span><br>duplicate-cn<br><br><span class="hljs-comment"># The keepalive directive causes ping-like</span><br><span class="hljs-comment"># messages to be sent back and forth over</span><br><span class="hljs-comment"># the link so that each side knows when</span><br><span class="hljs-comment"># the other side has gone down.</span><br><span class="hljs-comment"># Ping every 10 seconds, assume that remote</span><br><span class="hljs-comment"># peer is down if no ping received during</span><br><span class="hljs-comment"># a 120 second time period.</span><br>keepalive 10 120<br><br><span class="hljs-comment"># For extra security beyond that provided</span><br><span class="hljs-comment"># by SSL/TLS, create an &quot;HMAC firewall&quot;</span><br><span class="hljs-comment"># to help block DoS attacks and UDP port flooding.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Generate with:</span><br><span class="hljs-comment">#   openvpn --genkey --secret ta.key</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The server and each client must have</span><br><span class="hljs-comment"># a copy of this key.</span><br><span class="hljs-comment"># The second parameter should be &#x27;0&#x27;</span><br><span class="hljs-comment"># on the server and &#x27;1&#x27; on the clients.</span><br>tls-auth ta.key 0 <span class="hljs-comment"># This file is secret</span><br><br><span class="hljs-comment"># Select a cryptographic cipher.</span><br><span class="hljs-comment"># This config item must be copied to</span><br><span class="hljs-comment"># the client config file as well.</span><br><span class="hljs-comment"># Note that v2.4 client/server will automatically</span><br><span class="hljs-comment"># negotiate AES-256-GCM in TLS mode.</span><br><span class="hljs-comment"># See also the ncp-cipher option in the manpage</span><br>cipher AES-256-CBC<br><br><span class="hljs-comment"># Enable compression on the VPN link and push the</span><br><span class="hljs-comment"># option to the client (v2.4+ only, for earlier</span><br><span class="hljs-comment"># versions see below)</span><br>;compress lz4-v2<br>;push <span class="hljs-string">&quot;compress lz4-v2&quot;</span><br><br><span class="hljs-comment"># For compression compatible with older clients use comp-lzo</span><br><span class="hljs-comment"># If you enable it here, you must also</span><br><span class="hljs-comment"># enable it in the client config file.</span><br>comp-lzo<br><br><span class="hljs-comment"># The maximum number of concurrently connected</span><br><span class="hljs-comment"># clients we want to allow.</span><br>;max-clients 100<br><br><span class="hljs-comment"># It&#x27;s a good idea to reduce the OpenVPN</span><br><span class="hljs-comment"># daemon&#x27;s privileges after initialization.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># You can uncomment this out on</span><br><span class="hljs-comment"># non-Windows systems.</span><br>user nobody<br>group nobody<br><br><span class="hljs-comment"># The persist options will try to avoid</span><br><span class="hljs-comment"># accessing certain resources on restart</span><br><span class="hljs-comment"># that may no longer be accessible because</span><br><span class="hljs-comment"># of the privilege downgrade.</span><br>persist-key<br>persist-tun<br><br><span class="hljs-comment"># Output a short status file showing</span><br><span class="hljs-comment"># current connections, truncated</span><br><span class="hljs-comment"># and rewritten every minute.</span><br>status openvpn-status.log<br><br><span class="hljs-comment"># By default, log messages will go to the syslog (or</span><br><span class="hljs-comment"># on Windows, if running as a service, they will go to</span><br><span class="hljs-comment"># the &quot;\Program Files\OpenVPN\log&quot; directory).</span><br><span class="hljs-comment"># Use log or log-append to override this default.</span><br><span class="hljs-comment"># &quot;log&quot; will truncate the log file on OpenVPN startup,</span><br><span class="hljs-comment"># while &quot;log-append&quot; will append to it.  Use one</span><br><span class="hljs-comment"># or the other (but not both).</span><br><span class="hljs-built_in">log</span>         openvpn.log<br>log-append  openvpn.log<br><br><span class="hljs-comment"># Set the appropriate level of log</span><br><span class="hljs-comment"># file verbosity.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 0 is silent, except for fatal errors</span><br><span class="hljs-comment"># 4 is reasonable for general usage</span><br><span class="hljs-comment"># 5 and 6 can help to debug connection problems</span><br><span class="hljs-comment"># 9 is extremely verbose</span><br>verb 3<br><br><span class="hljs-comment"># Silence repeating messages.  At most 20</span><br><span class="hljs-comment"># sequential messages of the same message</span><br><span class="hljs-comment"># category will be output to the log.</span><br>;mute 20<br><br><span class="hljs-comment"># Notify the client that when the server restarts so it</span><br><span class="hljs-comment"># can automatically reconnect.</span><br>explicit-exit-notify 0<br><br><span class="hljs-comment"># openldap 认证配置项</span><br>plugin /usr/lib64/openvpn/plugin/lib/openvpn-auth-ldap.so <span class="hljs-string">&quot;/etc/openvpn/auth/ldap.conf cn=%u&quot;</span><br>client-cert-not-required<br>script-security 3 <br>username-as-common-name<br></code></pre></td></tr></table></figure><p>配置项见最后一部分注释下的配置内容，指定openldap认证的配置文件，不再使用证书认证。</p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><p>客户端只需要取消原配置文件中的证书，添加配置项，认证方式为用户认证即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">auth-user-pass<br></code></pre></td></tr></table></figure><h2 id="openldap-配置"><a href="#openldap-配置" class="headerlink" title="openldap 配置"></a>openldap 配置</h2><p>参考上面的openldap配置项，在openldap中添加对应的OU，配置OU的密码，创建openvpn对应的cn，添加需要认证的用户。属于对应membership的用户即可通过openldap创建的登录信息完成认证。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>openldap</tag>
      
      <tag>openvpn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>system JAVA程序启动器</title>
    <link href="/2022/07/19/system-JAVA%E7%A8%8B%E5%BA%8F%E5%90%AF%E5%8A%A8%E5%99%A8/"/>
    <url>/2022/07/19/system-JAVA%E7%A8%8B%E5%BA%8F%E5%90%AF%E5%8A%A8%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="systemd-作为JAVA程序的启动器"><a href="#systemd-作为JAVA程序的启动器" class="headerlink" title="systemd 作为JAVA程序的启动器"></a>systemd 作为JAVA程序的启动器</h1><p>JAVA程序中TOMCAT包含startup.sh脚本，启动时可以直接写&#x2F;etc&#x2F;rc.local。centos 7上可以直接使用systemd写一个启动。记录备忘。</p><span id="more"></span><h2 id="systemd-tomcat-service"><a href="#systemd-tomcat-service" class="headerlink" title="systemd tomcat service"></a>systemd tomcat service</h2><p>启动服务编写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br>Description=xiamen-api<br>After=network.target<br><br>[Service]<br>Environment=<span class="hljs-string">&#x27;JAVA_HOME=/usr/local/jdk&#x27;</span>          <span class="hljs-comment"># JDK环境变量路径</span><br>Environment=<span class="hljs-string">&#x27;JRE_HOME=/usr/local/jdk/jre&#x27;</span>       <span class="hljs-comment"># JRE环境变量路径</span><br>Type=forking<br>ExecStart=/your_app_local_path/bin/startup.sh<br>ExecReload=/bin/kill -s HUP <span class="hljs-variable">$MAINPID</span><br>ExecStop=/your_app_local_path/bin/shutdown.sh<br>RemainAfterExit=<span class="hljs-built_in">yes</span><br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>启用服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl daemon-reload<br>systemctl start your_app.service<br>systemctl <span class="hljs-built_in">enable</span> your_app.service<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>systemd</tag>
      
      <tag>JAVA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C primer Plus Chap 10</title>
    <link href="/2022/05/14/C-primer-Plus-Chap-10/"/>
    <url>/2022/05/14/C-primer-Plus-Chap-10/</url>
    
    <content type="html"><![CDATA[<h1 id="C-primer-Plus-Chap-10"><a href="#C-primer-Plus-Chap-10" class="headerlink" title="C primer Plus Chap 10"></a>C primer Plus Chap 10</h1><p>C primer Plus 第十章代码与练习记录。</p><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>c</tag>
      
      <tag>c primer plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C primer Plus Chap 09</title>
    <link href="/2022/05/14/C-primer-Plus-Chap-09/"/>
    <url>/2022/05/14/C-primer-Plus-Chap-09/</url>
    
    <content type="html"><![CDATA[<h1 id="C-primer-Plus-Chap-09"><a href="#C-primer-Plus-Chap-09" class="headerlink" title="C primer Plus Chap 09"></a>C primer Plus Chap 09</h1><p>C primer Plus 第九章代码与练习记录。</p><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>c</tag>
      
      <tag>c primer plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C primer Plus Chap 08</title>
    <link href="/2022/05/14/C-primer-Plus-Chap-08/"/>
    <url>/2022/05/14/C-primer-Plus-Chap-08/</url>
    
    <content type="html"><![CDATA[<h1 id="C-primer-Plus-Chap-08"><a href="#C-primer-Plus-Chap-08" class="headerlink" title="C primer Plus Chap 08"></a>C primer Plus Chap 08</h1><p>C primer Plus 第八章代码与练习记录。</p><span id="more"></span>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>c</tag>
      
      <tag>c primer plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C primer Plus Chap 07</title>
    <link href="/2022/05/14/C-primer-Plus-Chap-07/"/>
    <url>/2022/05/14/C-primer-Plus-Chap-07/</url>
    
    <content type="html"><![CDATA[<h1 id="C-primer-Plus-Chap-07"><a href="#C-primer-Plus-Chap-07" class="headerlink" title="C primer Plus Chap 07"></a>C primer Plus Chap 07</h1><p>C primer Plus 第七章代码与练习记录。</p><span id="more"></span><h2 id="C语言控制语句：分支和跳转"><a href="#C语言控制语句：分支和跳转" class="headerlink" title="C语言控制语句：分支和跳转"></a>C语言控制语句：分支和跳转</h2><ul><li>fx5.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;ctype.h&gt;</span><br>int main(void)<br>&#123;<br>int num;<br><span class="hljs-keyword">for</span>(num=1; num&lt;=11; num++)<br>&#123;<br><span class="hljs-keyword">if</span>(num % 3 == 0)<br>putchar(<span class="hljs-string">&#x27;$&#x27;</span>);<br><span class="hljs-keyword">else</span><br>putchar(<span class="hljs-string">&#x27;$&#x27;</span>);<br>putchar(<span class="hljs-string">&#x27;#&#x27;</span>);<br>putchar(<span class="hljs-string">&#x27;%&#x27;</span>);<br>&#125;<br>putchar(<span class="hljs-string">&#x27;\n&#x27;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$#</span>%<span class="hljs-variable">$#</span>%<span class="hljs-variable">$#</span>%<span class="hljs-variable">$#</span>%<span class="hljs-variable">$#</span>%<span class="hljs-variable">$#</span>%<span class="hljs-variable">$#</span>%<span class="hljs-variable">$#</span>%<span class="hljs-variable">$#</span>%<span class="hljs-variable">$#</span>%<span class="hljs-variable">$#</span>%<br></code></pre></td></tr></table></figure></li><li>fx6.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int i=0;<br><span class="hljs-keyword">while</span>(i&lt;3)<br>&#123;<br>switch(i++)<br>&#123;<br><span class="hljs-keyword">case</span> 0:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;fat&quot;</span>);<br><span class="hljs-keyword">case</span> 1:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;hat&quot;</span>);<br><span class="hljs-keyword">case</span> 2:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;cat&quot;</span>);<br>default:<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;oh no!&quot;</span>);<br>&#125;<br>putchar(<span class="hljs-string">&#x27;\n&#x27;</span>);<br>&#125;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">fathatcatoh no!<br>hatcatoh no!<br>catoh no!<br></code></pre></td></tr></table></figure></li><li>fx7.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>char ch;<br>int lc=0;<br>int uc=0;<br>int oc=0;<br><span class="hljs-keyword">while</span>((ch=getchar())!=<span class="hljs-string">&#x27;#&#x27;</span>)<br>&#123;<br><span class="hljs-keyword">if</span>(ch&gt;=<span class="hljs-string">&#x27;a&#x27;</span> &amp;&amp; ch&lt;=<span class="hljs-string">&#x27;z&#x27;</span>)<br>lc++;<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(ch&gt;=<span class="hljs-string">&#x27;A&#x27;</span> &amp;&amp; ch&lt;=<span class="hljs-string">&#x27;Z&#x27;</span>)<br>uc++;<br><span class="hljs-keyword">else</span> <br>oc++;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d lowercase, %d uppercase, %d other\n&quot;</span>, lc, uc, oc);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">a<br>b<br>c<br>A<br>B <br>C<br>1<br>2<br>3<br><span class="hljs-comment">#</span><br>3 lowercase, 3 uppercase, 12 other<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>c</tag>
      
      <tag>c primer plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C primer Plus Chap 06</title>
    <link href="/2022/05/14/C-primer-Plus-Chap-06/"/>
    <url>/2022/05/14/C-primer-Plus-Chap-06/</url>
    
    <content type="html"><![CDATA[<h1 id="C-primer-Plus-Chap-06"><a href="#C-primer-Plus-Chap-06" class="headerlink" title="C primer Plus Chap 06"></a>C primer Plus Chap 06</h1><p>C primer Plus 第六章代码与练习记录。</p><span id="more"></span><h2 id="C语言控制语句：循环"><a href="#C语言控制语句：循环" class="headerlink" title="C语言控制语句：循环"></a>C语言控制语句：循环</h2><ul><li>fx1.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int quack = 2;<br>//<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, quack+=5);<br>//<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, quack*=5);<br>//<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, quack-=6);<br>//<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, quack/=8);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span> ,quack%=3);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">2<br></code></pre></td></tr></table></figure></li><li>fx2.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>//int value;<br>double value;<br><span class="hljs-keyword">for</span>(value=36; value&gt;0; value/=2)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%10.2f\t&quot;</span>, value);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">36.00     18.00      9.00      4.50      2.25      1.12      0.56      0.28      0.14      0.07      0.04      0.02      0.01      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00<br></code></pre></td></tr></table></figure></li><li>fx6.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int i, j;<br><span class="hljs-keyword">for</span>(i=1; i&lt;=4; i++)<br>&#123;<br><span class="hljs-keyword">for</span>(j=1; j&lt;=8; j++)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;$&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">$$$$$$$$<br>$$$$$$$$<br>$$$$$$$$<br>$$$$$$$$<br></code></pre></td></tr></table></figure></li><li>fx7a.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int i = 0;<br><span class="hljs-keyword">while</span>(++i&lt;4)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,i);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;hi!\t&quot;</span>);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-keyword">do</span> <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;bye!\t&quot;</span>);<br><span class="hljs-keyword">while</span>(i++&lt;8);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">1hi!2hi!3hi!<br><span class="hljs-built_in">bye</span>!<span class="hljs-built_in">bye</span>!<span class="hljs-built_in">bye</span>!<span class="hljs-built_in">bye</span>!<span class="hljs-built_in">bye</span>!<br></code></pre></td></tr></table></figure></li><li>fx7b.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int i;<br>char ch;<br><span class="hljs-keyword">for</span>(i=0,ch=<span class="hljs-string">&#x27;A&#x27;</span>; i&lt;4; i++, ch+=2*i)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, ch);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ACGM<br></code></pre></td></tr></table></figure></li><li>fx8a.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>char ch;<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;ch);<br><span class="hljs-keyword">while</span>(ch != <span class="hljs-string">&#x27;g&#x27;</span>)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, ch);<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;ch);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">123<br>123<br>abc<br>abc<br>def<br>def<br>^C<br></code></pre></td></tr></table></figure></li><li>fx8b.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>char ch;<br><br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;ch);<br><span class="hljs-keyword">while</span>(ch!=<span class="hljs-string">&#x27;g&#x27;</span>)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, ++ch);<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;ch);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">123<br>234<br>   asd<br>bte<br>   qwer<br>rxfs<br>    ^C<br></code></pre></td></tr></table></figure></li><li>fx8c.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>char ch;<br><span class="hljs-keyword">do</span><br>&#123;<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;ch);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, ch);<br>&#125;<span class="hljs-keyword">while</span>(ch!=<span class="hljs-string">&#x27;g&#x27;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">qqww<br>qqww<br>g<br>g<br></code></pre></td></tr></table></figure></li><li>fx8d.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>char ch;<br>scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;ch);<br><span class="hljs-keyword">for</span>(ch=<span class="hljs-string">&#x27;$&#x27;</span>; ch!=<span class="hljs-string">&#x27;g&#x27;</span>; scanf(<span class="hljs-string">&quot;%c&quot;</span>, &amp;ch))<br>putchar(ch);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">change<br><span class="hljs-variable">$han</span>% <br></code></pre></td></tr></table></figure></li><li>fx9.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int n, m;<br>n = 30;<br><span class="hljs-keyword">while</span>(++n &lt;= 33)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d|&quot;</span>, n);<br>n = 30;<br><span class="hljs-keyword">do</span> <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d|&quot;</span>, n);<br><span class="hljs-keyword">while</span>(++n&lt;=33);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, n);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n***\n&quot;</span>);<br><br><span class="hljs-keyword">for</span>(n=2, m=6; n&lt;m; n*=2, m+=2)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d\n&quot;</span>, n, m);<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n***\n&quot;</span>);<br><br><span class="hljs-keyword">for</span>(n=5; n&gt;0; n--)<br>&#123;<br><span class="hljs-keyword">for</span>(m=0; m&lt;=n; m++)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;=&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">31|32|33|30|31|32|33|34<br>***<br>2 6<br>4 8<br>8 10<br><br>***<br>======<br>=====<br>====<br>===<br>==<br></code></pre></td></tr></table></figure></li><li>other.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int i, j;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;-------九九乘法表-------\n&quot;</span>);<br><span class="hljs-keyword">for</span>(i=1; i&lt;=9; i++)<br>&#123;<br><span class="hljs-keyword">for</span>(j=1; j&lt;=i; j++)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%2d*%2d=%2d  &quot;</span>, j, i, j*i);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">-------九九乘法表-------<br> 1* 1= 1  <br> 1* 2= 2   2* 2= 4  <br> 1* 3= 3   2* 3= 6   3* 3= 9  <br> 1* 4= 4   2* 4= 8   3* 4=12   4* 4=16  <br> 1* 5= 5   2* 5=10   3* 5=15   4* 5=20   5* 5=25  <br> 1* 6= 6   2* 6=12   3* 6=18   4* 6=24   5* 6=30   6* 6=36  <br> 1* 7= 7   2* 7=14   3* 7=21   4* 7=28   5* 7=35   6* 7=42   7* 7=49  <br> 1* 8= 8   2* 8=16   3* 8=24   4* 8=32   5* 8=40   6* 8=48   7* 8=56   8* 8=64  <br> 1* 9= 9   2* 9=18   3* 9=27   4* 9=36   5* 9=45   6* 9=54   7* 9=63   8* 9=72   9* 9=81 <br></code></pre></td></tr></table></figure></li><li>xt1.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int i;<br><span class="hljs-keyword">for</span>(i=1; i&lt;=26; i++)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c\t&quot;</span>, 96+i);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">abcdefghijklmnopqrstuvwxyz<br></code></pre></td></tr></table></figure></li><li>xt1a.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int i=1, ch[26];<br><span class="hljs-keyword">while</span>(i&lt;=26)<br>&#123;<br>ch[i]=i+96;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c\t&quot;</span>, ch[i]);<br>i++;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">abcdefghijklmnopqrstuvwxyz<br></code></pre></td></tr></table></figure></li><li>xt2.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int i, j;<br><span class="hljs-keyword">for</span>(i=1; i&lt;=5; i++)<br>&#123;<br><span class="hljs-keyword">for</span>(j=1; j&lt;=i; j++)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;$&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">$<br>$$<br>$$$<br>$$$$<br>$$$$$<br></code></pre></td></tr></table></figure></li><li>xt3.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int i, j;<br><span class="hljs-keyword">for</span>(i=1; i&lt;=6; i++)<br>&#123;<br><span class="hljs-keyword">for</span>(j=1; j&lt;=i; j++)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, 71-j);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">F<br>FE<br>FED<br>FEDC<br>FEDCB<br>FEDCBA<br></code></pre></td></tr></table></figure></li><li>xt4.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int i, j, k;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a number:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;i);<br><span class="hljs-keyword">for</span>(j=1; j&lt;=i; j++)<br>&#123;<br><span class="hljs-keyword">for</span>(k=1; k&lt;=i+1-j; k++)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br><span class="hljs-keyword">for</span>(k=1; k&lt;=j; k++)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, k+64);<br><span class="hljs-keyword">for</span>(k=1; k&lt;=j-1; k++)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, 64+j-k);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">12<br>            A<br>           ABA<br>          ABCBA<br>         ABCDCBA<br>        ABCDEDCBA<br>       ABCDEFEDCBA<br>      ABCDEFGFEDCBA<br>     ABCDEFGHGFEDCBA<br>    ABCDEFGHIHGFEDCBA<br>   ABCDEFGHIJIHGFEDCBA<br>  ABCDEFGHIJKJIHGFEDCBA<br> ABCDEFGHIJKLKJIHGFEDCBA<br></code></pre></td></tr></table></figure></li><li>xt5.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int ulimt, dlimt;<br><span class="hljs-keyword">do</span> <br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter the number of downlimt and uplimt(uplimt &lt; downlimt):\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d %d&quot;</span>, &amp;dlimt, &amp;ulimt);<br>&#125;<span class="hljs-keyword">while</span>(dlimt&gt;=ulimt);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d\n&quot;</span>, dlimt, ulimt);<br><br><span class="hljs-keyword">while</span>(dlimt&lt;=ulimt)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d is square=%d and cubed=%d.\n&quot;</span>, dlimt, dlimt*dlimt, dlimt*dlimt*dlimt);<br>dlimt++;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter the number of downlimt and uplimt(uplimt &lt; downlimt):<br>3<br>7<br>3 7<br>3 is square=9 and cubed=27.<br>4 is square=16 and cubed=64.<br>5 is square=25 and cubed=125.<br>6 is square=36 and cubed=216.<br>7 is square=49 and cubed=343.<br></code></pre></td></tr></table></figure></li><li>xt6.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;string.h&gt;</span><br>int main(void)<br>&#123;<br>char ch[10];<br>int i;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a word:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%s&quot;</span>, ch);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, ch);<br><span class="hljs-keyword">for</span>(i=strlen(ch)-1; i&gt;=0; i--)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, ch[i]);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter a word:<br>hello<br>hello<br>olleh<br></code></pre></td></tr></table></figure></li><li>xt7.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br><span class="hljs-built_in">float</span> number1, number2;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter two float number:\n&quot;</span>);<br><span class="hljs-keyword">while</span>(scanf(<span class="hljs-string">&quot;%f %f&quot;</span>, &amp;number1, &amp;number2)==2)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%f\n&quot;</span>, (number1-number2)/(number1*number2));<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please agin(q to exit the program):\n&quot;</span>);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the end \n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter two <span class="hljs-built_in">float</span> number:<br>12.3 3.14<br>0.237171<br>please agin(q to <span class="hljs-built_in">exit</span> the program):<br>q<br>the end <br></code></pre></td></tr></table></figure></li><li>xt8.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;float.h&gt;</span><br><span class="hljs-built_in">float</span> result(<span class="hljs-built_in">float</span> x, <span class="hljs-built_in">float</span> y);<br>int main(void)<br>&#123;<br><span class="hljs-built_in">float</span> number1, number2;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter two number:\n&quot;</span>);<br><span class="hljs-keyword">while</span>(scanf(<span class="hljs-string">&quot;%f %f&quot;</span>, &amp;number1, &amp;number2)==2)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;(%f-%f)/(%f*%f)=%f\n&quot;</span>, number1,number2,number1,number2,result(number1, number2));<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please try agin(q to exit):\n&quot;</span>);<br>&#125;<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><br><span class="hljs-built_in">float</span> result(<span class="hljs-built_in">float</span> x, <span class="hljs-built_in">float</span> y)<br>&#123;<br><span class="hljs-built_in">return</span>((x-y)/(x*y));<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter two number:<br>12 4<br>(12.000000-4.000000)/(12.000000*4.000000)=0.166667<br>please try agin(q to <span class="hljs-built_in">exit</span>):<br>q<br></code></pre></td></tr></table></figure></li><li>xt9.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int result(int x, int y);<br>int main(void)<br>&#123;<br>int lower, upper;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter lower and upper limits:&quot;</span>);<br><span class="hljs-keyword">while</span>(scanf(<span class="hljs-string">&quot;%d %d&quot;</span>, &amp;lower, &amp;upper)==2)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the sums of the squares form %d to %d is %d\n&quot;</span>, lower, upper, result(lower, upper));<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;enter the next set of limits:&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d %d&quot;</span>, &amp;lower, &amp;upper);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the end.\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><br>int result(int x, int y)<br>&#123;<br>int sums=0;<br><span class="hljs-keyword">while</span>(x&lt;y)<br>&#123;<br>sums = sums + x*x;<br>x++;<br>&#125;<br><span class="hljs-built_in">return</span> sums;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter lower and upper limits:1 4<br>the sums of the squares form 1 to 4 is 14<br>enter the next <span class="hljs-built_in">set</span> of limits:2 5<br>^C<br></code></pre></td></tr></table></figure></li><li>xt10.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int i, number[10];<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter ten number:\n&quot;</span>);<br><span class="hljs-keyword">for</span>(i=1; i&lt;=10; i++)<br>&#123;<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;number[i]);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;input complated\n&quot;</span>);<br><br><span class="hljs-keyword">for</span>(i=10; i&gt;=1; i--)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d  &quot;</span>,number[i]);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter ten number:<br>1 2 3 4 5 6 7 8 9 10<br>input complated<br>10  9  8  7  6  5  4  3  2  1<br></code></pre></td></tr></table></figure></li><li>xt11.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>double sum1=0, sum2=0;<br>int i, count, sign=1;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a number:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;count);<br><span class="hljs-keyword">for</span>(i=1.0; i&lt;=count; i++, sign*=-1)<br>&#123;<br>sum1+=1.0/i;<br>sum2+=sign/i;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1+1/2+1/3+1/4...=%f\n&quot;</span>, sum1);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1-1/2+1/3-1/4...=%f\n&quot;</span>, sum2);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter a number:<br>6<br>1+1/2+1/3+1/4...=2.450000<br>1-1/2+1/3-1/4...=1.000000<br></code></pre></td></tr></table></figure></li><li>xt12.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;math.h&gt;</span><br>int main(void)<br>&#123;<br>double i=0;<br><span class="hljs-keyword">do</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.0f\t&quot;</span>, pow(2.0,i));<br>&#125;<span class="hljs-keyword">while</span>(++i&lt;8);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">1248163264128<br></code></pre></td></tr></table></figure></li><li>xt12a.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int num[8], i;<br><span class="hljs-keyword">for</span>(i=0; i&lt;8; i++)<br>num[i]=2*i;<br>i=0;<br><span class="hljs-keyword">do</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\t&quot;</span>, num[i]);<br>&#125;<span class="hljs-keyword">while</span>(i++&lt;8);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">024681012140<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>c</tag>
      
      <tag>c primer plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C primer Plus Chap 05</title>
    <link href="/2022/05/14/C-primer-Plus-Chap-05/"/>
    <url>/2022/05/14/C-primer-Plus-Chap-05/</url>
    
    <content type="html"><![CDATA[<h1 id="C-primer-Plus-Chap-05"><a href="#C-primer-Plus-Chap-05" class="headerlink" title="C primer Plus Chap 05"></a>C primer Plus Chap 05</h1><p>C primer Plus 第五章代码与练习记录。</p><span id="more"></span><h2 id="运算符、表达式和语句"><a href="#运算符、表达式和语句" class="headerlink" title="运算符、表达式和语句"></a>运算符、表达式和语句</h2><ul><li>fx1.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int x, y;<br>//x = (2+3) * 6;<br>//x = (12+6)/2*3;<br>//y = x = (2+3)/4;<br>y = 3 + 2*(x = 7/2);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;x = %d, y = %d.\n&quot;</span>, x, y);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">x = 3, y = 9.<br></code></pre></td></tr></table></figure></li><li>fx2.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int x;<br>//x = (int)3.8 + 3.3;<br>//x = (2+3)*10.5;<br>//x = 3/5*22.0;<br>x = 22.0 * 3 / 5;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;x = %d.\n&quot;</span>, x);<br><br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">x = 13.<br></code></pre></td></tr></table></figure></li><li>fx3.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;float.h&gt;</span><br>int main(void)<br>&#123;<br>int i = 0;<br><span class="hljs-built_in">float</span> n;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;watch out! here come a bunch of fractions!\n&quot;</span>);<br><span class="hljs-keyword">while</span> (i++ &lt; 30)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\t&quot;</span>, i);<br>n = 1.0 / i; <br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%f\t&quot;</span>,n);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;that&#x27;s all, folks!\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">11.00000020.50000030.33333340.25000050.20000060.16666770.14285780.12500090.111111100.100000110.090909120.083333130.076923140.071429150.066667160.062500170.058824180.055556190.052632200.050000210.047619220.045455230.043478240.041667250.040000260.038462270.037037280.035714290.034483300.033333that<span class="hljs-string">&#x27;s all, folks!</span><br></code></pre></td></tr></table></figure></li><li>fx4.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#define S_TO_M 60</span><br>int main(void)<br>&#123;<br>int sec, min, left;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;this program converts seconds to minutes and seconds.\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;just enter the number of seconds.\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;sec);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the sec is %d\n&quot;</span>, sec);<br><span class="hljs-keyword">while</span>(sec&gt;0)<br>&#123;<br>min = sec / S_TO_M;<br>left = sec % S_TO_M;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d sec is %d min and %d sec.\n&quot;</span>, sec, min, left);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter the number of seconds:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;sec);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;bye!\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">this program converts seconds to minutes and seconds.<br>just enter the number of seconds.<br>123<br>the sec is 123<br>123 sec is 2 min and 3 sec.<br>please enter the number of seconds:<br>0<br><span class="hljs-built_in">bye</span>!<br></code></pre></td></tr></table></figure></li><li>fx5.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#define FORMAT &quot;%s! C is cool!\n&quot;</span><br>int main(void)<br>&#123;<br>int num = 10;<br><span class="hljs-built_in">printf</span>(FORMAT, FORMAT);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, ++num);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, num++);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, num--);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, num);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">%s! C is cool!<br>! C is cool!<br>11<br>11<br>12<br>11<br></code></pre></td></tr></table></figure></li><li>xf6.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>char c1, c2;<br>int diff;<br><span class="hljs-built_in">float</span> num;<br><br>c1 = <span class="hljs-string">&#x27;S&#x27;</span>;<br>c2 = <span class="hljs-string">&#x27;0&#x27;</span>;<br>diff = c1 - c2;<br>num = diff;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c%c%c: %d %3.2f\n&quot;</span>, c1, c2, c1, diff, num);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">S0S: 35 35.00<br></code></pre></td></tr></table></figure></li><li>fx7.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#define TEN 10</span><br>int main(void)<br>&#123;<br>int n = 0;<br><span class="hljs-keyword">while</span>(n++ &lt; TEN)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%5d&quot;</span>, n);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">1    2    3    4    5    6    7    8    9   10<br></code></pre></td></tr></table></figure></li><li>fx8.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int a = 96;<br><span class="hljs-keyword">while</span>(a++ &lt; 103)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%5c&quot;</span>, a);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">a    b    c    d    e    f    g<br></code></pre></td></tr></table></figure></li><li>fx9.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int x = 0;<br><span class="hljs-keyword">while</span>(++x &lt; 3)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%4d&quot;</span>, x);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">1   2<br></code></pre></td></tr></table></figure></li><li>fx9b.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int x = 100;<br><br><span class="hljs-keyword">while</span>(x++ &lt; 103)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%4d\n&quot;</span>, x);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%4d\n&quot;</span>, x);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">101<br>102<br>103<br>104<br></code></pre></td></tr></table></figure></li><li>fx9c.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>char ch = <span class="hljs-string">&#x27;s&#x27;</span>;<br><span class="hljs-keyword">while</span>(ch &lt; <span class="hljs-string">&#x27;w&#x27;</span>)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c\t&quot;</span>, ch);<br>ch++;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">stuv<br></code></pre></td></tr></table></figure></li><li>fx10.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#define MESG &quot;COMPUTER BYTES DOG&quot;</span><br>int main(void)<br>&#123;<br>int n = 0;<br><br><span class="hljs-keyword">while</span>(n&lt;5)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, MESG);<br>n++;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;that&#x27;s all.\n&quot;</span>);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">COMPUTER BYTES DOG<br>COMPUTER BYTES DOG<br>COMPUTER BYTES DOG<br>COMPUTER BYTES DOG<br>COMPUTER BYTES DOG<br>that<span class="hljs-string">&#x27;s all.</span><br></code></pre></td></tr></table></figure></li><li>xt1.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int x;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a number:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;x);<br>x = x + 10;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, x);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter number of nimutes:<br>26<br>26 minutes is about 0 hour and 26 minutes<br>please enter number of nimutes:<br>160<br>160 minutes is about 2 hour and 40 minutes<br>please enter number of nimutes:<br>0<br><span class="hljs-keyword">done</span>!<br></code></pre></td></tr></table></figure></li><li>xt2.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int number, count;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a number:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;number);<br>count = number + 10;<br><span class="hljs-keyword">while</span>(number++ &lt;= count)<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\t&quot;</span>, number-1);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter a number:<br>12<br>1213141516171819202122<br></code></pre></td></tr></table></figure></li><li>xt3.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>const D_TO_W = 7;<br>int day, week, left;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter the days:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;day);<br><span class="hljs-keyword">while</span>(day &gt; 0)<br>&#123;<br>week = day / D_TO_W;<br>left = day % D_TO_W;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d days are %d weeks, %d days.\n&quot;</span>, day, week, left);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter the days:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>, &amp;day);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;done!\n&quot;</span>);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter the days:<br>7<br>7 days are 1 weeks, 0 days.<br>please enter the days:<br>26<br>26 days are 3 weeks, 5 days.<br>please enter the days:<br>0<br><span class="hljs-keyword">done</span>!<br></code></pre></td></tr></table></figure></li><li>xt5.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>void cubed(<span class="hljs-built_in">float</span> n);<br>int main(void)<br>&#123;<br><span class="hljs-built_in">float</span> number;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;enter 0 to quit the programe.\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a number:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%f&quot;</span>, &amp;number);<br><span class="hljs-keyword">while</span>(number &gt; 0)<br>&#123;<br>cubed(number);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a number:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%f&quot;</span>, &amp;number);<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the end!\n&quot;</span>);<br><br>&#125;<br><br>void cubed(<span class="hljs-built_in">float</span> n)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.6f&#x27;s cubed is %.6f.\n&quot;</span>, n, n*n*n);<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">enter 0 to quit the programe.<br>please enter a number:<br>2<br>2.000000<span class="hljs-string">&#x27;s cubed is 8.000000.</span><br><span class="hljs-string">please enter a number:</span><br><span class="hljs-string">0</span><br><span class="hljs-string">the end!</span><br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>c</tag>
      
      <tag>c primer plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C primer Plus Chap 04</title>
    <link href="/2022/05/13/C-primer-Plus-Chap-04/"/>
    <url>/2022/05/13/C-primer-Plus-Chap-04/</url>
    
    <content type="html"><![CDATA[<h1 id="C-primer-Plus-Chap-04"><a href="#C-primer-Plus-Chap-04" class="headerlink" title="C primer Plus Chap 04"></a>C primer Plus Chap 04</h1><p>C primer Plus 第四章代码与练习记录。</p><span id="more"></span><h2 id="字符串和格式化输入输出"><a href="#字符串和格式化输入输出" class="headerlink" title="字符串和格式化输入输出"></a>字符串和格式化输入输出</h2><ul><li>xt1.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>char fname[10];<br>char sname[10];<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;printf enter your name:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%s %s&quot;</span>, sname, fname);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;your name is:\n&quot;</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s.%s\n&quot;</span>, sname, fname);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">printf</span> enter your name:<br>ian<br>mckellen<br>your name is:<br>ian.mckellen<br></code></pre></td></tr></table></figure></li><li>xt2.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;string.h&gt;</span><br>int main(void)<br>&#123;<br>char name[20];<br>int width;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter your name:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%s&quot;</span>, name);<br>width = strlen(name) + 3;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the name size of %d.\n&quot;</span>, width);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\&quot;%s\&quot;\n&quot;</span>, name);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\&quot;%20s\&quot;\n&quot;</span>, name);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\&quot;%-20s\&quot;\n&quot;</span>, name);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\&quot;%*s\&quot;\n&quot;</span>, width, name);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter your name:<br>ian<br>the name size of 6.<br><span class="hljs-string">&quot;ian&quot;</span><br><span class="hljs-string">&quot;                 ian&quot;</span><br><span class="hljs-string">&quot;ian                 &quot;</span><br><span class="hljs-string">&quot;   ian&quot;</span><br></code></pre></td></tr></table></figure></li><li>xt3.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br><span class="hljs-built_in">float</span> number;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a float number:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%f&quot;</span>, &amp;number);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the input is %.1f or %.1e\n&quot;</span>, number, number);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter a <span class="hljs-built_in">float</span> number:<br>3.14<br>the input is 3.1 or 3.1e+00<br></code></pre></td></tr></table></figure></li><li>xt4.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>char name[10];<br>int tall;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter your name and tall:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%s %d&quot;</span>, name, &amp;tall);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s, you are %d feet tall.\n&quot;</span>, name, tall);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter your name and tall:<br>admin@simple.com<br>174<br>admin@simple.com, you are 174 feet tall.<br></code></pre></td></tr></table></figure></li><li>xt5.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;string.h&gt;</span><br>int main(void)<br>&#123;<br>char fname[10], sname[10];<br>int lfname, lsname;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter your firstname and secound name:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%s %s&quot;</span>, fname, sname);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%10s %10s\n&quot;</span>, fname, sname);<br>lfname = strlen(fname);<br>lsname = strlen(sname);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s %s\n&quot;</span>, fname, sname);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%*d %*d\n&quot;</span>, lfname, lfname, lsname, lsname);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s %s\n&quot;</span>, fname, sname);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%-*d %-*d\n&quot;</span>, lfname, lfname, lsname, lsname);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">ian<br>mckellen<br>       ian   mckellen<br>ian mckellen<br>  3        8<br>ian mckellen<br>3   8  <br></code></pre></td></tr></table></figure></li><li>xt6.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#include &lt;float.h&gt;</span><br>int main(void)<br>&#123;<br>double numbera;<br><span class="hljs-built_in">float</span> numberb;<br>numbera = 1.0/3.0;<br>numberb = 1.0/3.0;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lf\t&quot;</span>, numbera);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%f\n&quot;</span>, numberb);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\t&quot;</span>, FLT_DIG);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, DBL_DIG);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">0.3333330.333333<br>615<br></code></pre></td></tr></table></figure></li><li>xt7.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br><span class="hljs-comment">#define L 3,785</span><br><span class="hljs-comment">#define KM 1.609</span><br>int main(void)<br>&#123;<br><span class="hljs-built_in">float</span> gl, yl, yh;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter GL and YL:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%f %f&quot;</span>, &amp;gl, &amp;yl);<br>yh = (gl*L)/(yl*KM);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1km need %.1f l oil\n&quot;</span>, yh);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter GL and YL:<br>4<br>8<br>1km need 61.0 l oil<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>c</tag>
      
      <tag>c primer plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C primer Plus Chap 03</title>
    <link href="/2022/05/07/C-primer-Plus-Chap-03/"/>
    <url>/2022/05/07/C-primer-Plus-Chap-03/</url>
    
    <content type="html"><![CDATA[<h1 id="C-primer-Plus-Chap-03"><a href="#C-primer-Plus-Chap-03" class="headerlink" title="C primer Plus Chap 03"></a>C primer Plus Chap 03</h1><p>C primer Plus 第三章代码与练习记录。</p><span id="more"></span><h2 id="数据和C"><a href="#数据和C" class="headerlink" title="数据和C"></a>数据和C</h2><ul><li>xt1.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">/*整数上溢，浮点数上溢和浮点数下溢*/<br><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>/*查看int的字长*/<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;type int has a size of %lu bytes.\n&quot;</span>,sizeof(int));<br>int intoverflow = 2147483647;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the number is %d.\n&quot;</span>,intoverflow);<br>intoverflow = intoverflow + 1;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;int overflow + 1 vavlue = %d.\n&quot;</span>,intoverflow);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">type</span> int has a size of 4 bytes.<br>the number is 2147483647.<br>int overflow + 1 vavlue = -2147483648.<br></code></pre></td></tr></table></figure></li><li>xt2.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">/*xt2.c--输入一个ASCII码值，输入相应的字符*/<br><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int number;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a number:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>,&amp;number);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the number %d is character %c.\n&quot;</span>,number,number);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter a number:<br>100<br>the number 100 is character d.<br></code></pre></td></tr></table></figure></li><li>xt3.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">/*xt3.c--编写程序发出警报声，并打印文字*/<br><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\astartled by the sudden sound, sally shouted. \&quot;by the great pumpkin, what was that!\&quot;\n&quot;</span>);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">startled by the sudden sound, sally shouted. <span class="hljs-string">&quot;by the great pumpkin, what was that!&quot;</span><br></code></pre></td></tr></table></figure></li><li>xt4.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">/*xt4.c--读入一个浮点数，分别以小数形式和指数形式打印*/<br><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br><span class="hljs-built_in">float</span> number;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a number:&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%f&quot;</span>,&amp;number);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the number is %f.\n&quot;</span>,number);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the number %f can be writeen by %e.\n&quot;</span>,number,number);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter a number:15<br>the number is 15.000000.<br>the number 15.000000 can be writeen by 1.500000e+01.<br></code></pre></td></tr></table></figure></li><li>xt5.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">/*xt5.c*/<br><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>double s = 3.156e7;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lf\n&quot;</span>,s);<br>double secound,age;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter your age:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%lf&quot;</span>,&amp;age);<br>secound = s * age;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;your age %lf is %lf secound\n&quot;</span>,age,secound);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">31560000.000000<br>please enter your age:<br>33<br>your age 33.000000 is 1041480000.000000 secound<br></code></pre></td></tr></table></figure></li><li>xt6.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br><span class="hljs-built_in">float</span> hydrone=3.0e-23;<br><span class="hljs-built_in">float</span> quart;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a number:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%f&quot;</span>,&amp;quart);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%e\n&quot;</span>,(950*quart)/hydrone);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter a number:<br>16<br>5.066666e+26<br></code></pre></td></tr></table></figure></li><li>xt7.c<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br><span class="hljs-built_in">float</span> height;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter your height\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%f&quot;</span>,&amp;height);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;your height %.2f inch is about %.2f cm.\n&quot;</span>,height,height*2.54);<br><br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter your height<br>175<br>your height 175.00 inch is about 444.50 cm.<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>c</tag>
      
      <tag>c primer plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C primer Plus Chap 02</title>
    <link href="/2022/05/07/C-primer-Plus-Chap-02/"/>
    <url>/2022/05/07/C-primer-Plus-Chap-02/</url>
    
    <content type="html"><![CDATA[<h1 id="C-primer-Plus-Chap-02"><a href="#C-primer-Plus-Chap-02" class="headerlink" title="C primer Plus Chap 02"></a>C primer Plus Chap 02</h1><p>C primer Plus 第二章代码与练习记录。</p><span id="more"></span><h2 id="第二章-C-语言概述"><a href="#第二章-C-语言概述" class="headerlink" title="第二章 C 语言概述"></a>第二章 C 语言概述</h2><ul><li><p>xt3.c</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int day,age;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter your age:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%d&quot;</span>,&amp;age);<br>day=365*age;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;your age is %d,about %d days.\n&quot;</span>,age,day);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter your age:<br>23<br>your age is 23,about 8395 days.<br></code></pre></td></tr></table></figure></li><li><p>xt4.c</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>void <span class="hljs-built_in">print</span>(void);<br>int main(void)<br>&#123;<br><span class="hljs-built_in">print</span>();<br><span class="hljs-built_in">print</span>();<br><span class="hljs-built_in">print</span>();<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;which nobody can deny!\n&quot;</span>);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><br>void <span class="hljs-built_in">print</span>(void)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;for he&#x27;s a jolly good fellow!\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> he<span class="hljs-string">&#x27;s a jolly good fellow!</span><br><span class="hljs-string">for he&#x27;</span>s a jolly good fellow!<br><span class="hljs-keyword">for</span> he<span class="hljs-string">&#x27;s a jolly good fellow!</span><br><span class="hljs-string">which nobody can deny!</span><br></code></pre></td></tr></table></figure></li><li><p>xt4a.c</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>void print1(void);<br>void print2(void);<br>int main(void)<br>&#123;<br>print1();<br>print1();<br>print1();<br>print2();<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><br>void print1(void)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;for he&#x27;s a jolly good fellow!\n&quot;</span>);<br>&#125;<br><br>void print2(void)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;which nobody can deny!\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> he<span class="hljs-string">&#x27;s a jolly good fellow!</span><br><span class="hljs-string">for he&#x27;</span>s a jolly good fellow!<br><span class="hljs-keyword">for</span> he<span class="hljs-string">&#x27;s a jolly good fellow!</span><br><span class="hljs-string">which nobody can deny!</span><br></code></pre></td></tr></table></figure></li><li><p>xt5.c</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br>int toes,squared,cubed;<br>toes=10;<br>squared=toes*toes;<br>cubed=squared*toes;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;toes=%d,squared=%d,cubed=%d\n&quot;</span>,toes,squared,cubed);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">toes=10,squared=100,cubed=1000<br></code></pre></td></tr></table></figure></li><li><p>xt6.c</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>void smile(void);<br>int main(void)<br>&#123;<br>smile();smile();smile();<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>smile();smile();<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>smile();<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>&#125;<br><br>void smile(void)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;smile!&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">smile!smile!smile!<br>smile!smile!<br>smile!<br></code></pre></td></tr></table></figure></li><li><p>xt7.c</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">/*C函数原型及其调用*/<br><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>void two(void);<br>void one_three(void);<br>int main(void)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;starting now:\n&quot;</span>);<br>one_three();<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;done!\n&quot;</span>);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br><br>void one_three(void)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;one\n&quot;</span>);<br>two();<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;three\n&quot;</span>);<br>&#125;<br>void two(void)<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;two\n&quot;</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">starting now:<br>one<br>two<br>three<br><span class="hljs-keyword">done</span>!<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>c</tag>
      
      <tag>c primer plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C primer Plus Chap 01</title>
    <link href="/2022/05/07/C-primer-Plus-Chap-01/"/>
    <url>/2022/05/07/C-primer-Plus-Chap-01/</url>
    
    <content type="html"><![CDATA[<h1 id="C-primer-Plus-Chap-01"><a href="#C-primer-Plus-Chap-01" class="headerlink" title="C primer Plus Chap 01"></a>C primer Plus Chap 01</h1><p>C primer Plus 第一章代码与练习记录。</p><span id="more"></span><h2 id="第一章-概览习题"><a href="#第一章-概览习题" class="headerlink" title="第一章 概览习题"></a>第一章 概览习题</h2><ul><li>1<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#include &lt;stdio.h&gt;</span><br>int main(void)<br>&#123;<br><span class="hljs-built_in">float</span> inch,cm;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;please enter a number:\n&quot;</span>);<br>scanf(<span class="hljs-string">&quot;%f&quot;</span>,&amp;inch);<br>cm = 2.54 * inch;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;the %.2f inch = %.2f cm\n&quot;</span>,inch,cm);<br><span class="hljs-built_in">return</span> 0;<br>&#125;<br></code></pre></td></tr></table></figure>输出结果：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">please enter a number:<br>14<br>the 14.00 inch = 35.56 cm<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>c</tag>
      
      <tag>c primer plus</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Centos 7 yum安装Python3</title>
    <link href="/2022/05/07/Centos-7-yum%E5%AE%89%E8%A3%85Python3/"/>
    <url>/2022/05/07/Centos-7-yum%E5%AE%89%E8%A3%85Python3/</url>
    
    <content type="html"><![CDATA[<h1 id="yum-安装-python3"><a href="#yum-安装-python3" class="headerlink" title="yum 安装 python3"></a>yum 安装 python3</h1><p>Centos 7 通过 yum 安装 Python3。</p><span id="more"></span><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>对于编译安装python3来说，需要解决依赖或各种报错，或者版本依赖，不过可以手动编译到最新的程序版本。当然也有更方便的，直接centos源里安装python3的版本。<br>操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install python3<br><span class="hljs-comment"># 安装后的版本</span><br><span class="hljs-comment"># python3 -V</span><br>Python 3.6.8<br><br><span class="hljs-comment"># pip3 -V</span><br>pip 21.3.1 from /usr/local/lib/python3.6/site-packages/pip (python 3.6)<br></code></pre></td></tr></table></figure><p>手动编译安装的版本为3.10.4。centos 7 源里的版本为3.6。好了，安装结束。</p>]]></content>
    
    
    
    <tags>
      
      <tag>python 3</tag>
      
      <tag>pip 3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 7编译安装python3</title>
    <link href="/2022/05/06/CentOS-7%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85python3/"/>
    <url>/2022/05/06/CentOS-7%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85python3/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7编译安装-python3"><a href="#CentOS-7编译安装-python3" class="headerlink" title="CentOS 7编译安装 python3"></a>CentOS 7编译安装 python3</h1><p>CentOS上自带了python2的环境，且yum依赖。想在CentOS上安装python3环境。还需要编译安装，且要解决环境冲突，python3的依赖。中间也遇到很多问题，比如编译报错，openssl相关的https问题。好在都已经解决，操作记录备忘。</p><span id="more"></span><h2 id="更新centos，以及安装依赖"><a href="#更新centos，以及安装依赖" class="headerlink" title="更新centos，以及安装依赖"></a>更新centos，以及安装依赖</h2><p>编译安装python3所需要的依赖，可以参考以下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum check-update<br>yum update<br>yum install epel-release<br>yum groupinstall <span class="hljs-string">&#x27;Development Tools&#x27;</span><br>yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel bzip2-devel libff-devel perl perl-devel perl-ExtUtils-Embed libxslt libxslt-devel libxml2-devel libxml2 gd gd-devel GeoIP GeoIP-devel<br><span class="hljs-comment"># 安装了以上依赖，可能还不够，可以安装openssl11,可能有用，实际后面我是通过编译安装openssl11，编译时指定openssl的路径后，才没有https报错的问题。</span><br>yum install openssl11 openssl11-devel openssl-libs<br></code></pre></td></tr></table></figure><h2 id="更新GCC"><a href="#更新GCC" class="headerlink" title="更新GCC"></a>更新GCC</h2><p>编译中还遇到过编译报错的情况，尝试编译安装gcc升级后，python3编译没有报错了。操作如下：</p><p><strong>1、安装scl源</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install centos-release-scl<br></code></pre></td></tr></table></figure><p><strong>2、安装gcc，gcc++</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install devtoolset-7-gcc devtoolset-7-gcc-c++<br></code></pre></td></tr></table></figure><p><strong>3、启动</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sc <span class="hljs-built_in">enable</span> devtoolset bash<br></code></pre></td></tr></table></figure><p>需要注意的是scl命令启用只是临时的，退出shell或重启就会恢复原系统的gcc版本。如果要长期使用gcc 7，可以添加环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/profile.d/gcc.sh<br><br><span class="hljs-built_in">source</span> /opt/rh/devtoolset-7/enable<br></code></pre></td></tr></table></figure><p>更新环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure><p><strong>4、查看GCC版本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># which gcc</span><br>/opt/rh/devtoolset-7/root/usr/bin/gcc<br><span class="hljs-comment"># gcc --version</span><br>gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5)<br>Copyright (C) 2017 Free Software Foundation, Inc.<br>This is free software; see the <span class="hljs-built_in">source</span> <span class="hljs-keyword">for</span> copying conditions.  There is NO<br>warranty; not even <span class="hljs-keyword">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.<br></code></pre></td></tr></table></figure><p>GCC更新完毕。</p><h2 id="编译安装openssl-11"><a href="#编译安装openssl-11" class="headerlink" title="编译安装openssl 11"></a>编译安装openssl 11</h2><p>在前面的安装测试中，不管是编译参数加–with-ssl-default-suites&#x3D;openssl还是手动指定系统默认的openssl路径，安装完python3后，安装和更新python软件的时候，都会报错。</p><blockquote><p>WARNING: pip is configured with locations that require TLS&#x2F;SSL, however the ssl module in Python is not available. </p></blockquote><p>也手动改过&#x2F;root&#x2F;.config&#x2F;pip&#x2F;pip.conf配置文件:</p><blockquote><p>[golbal]<br>index-url &#x3D; <a href="https://mirrors.aliyun.com/pypi/simple/">https://mirrors.aliyun.com/pypi/simple/</a><br>将url的https请求改成http。这样是没有报错了，不过总感觉还是不解决实际问题。<br>于是，有了编译安装openssl的操作。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1、下载openssl 1.1.1</span><br>wget https://www.openssl.org/source/openssl-1.1.1l.tar.gz<br><span class="hljs-comment"># 2、解压</span><br>tar -zxvf openssl-1.1.1l.tar.gz<br><span class="hljs-comment"># 3、编译安装</span><br><span class="hljs-built_in">cd</span> openssl-1.1.1l<br>./config --prefix=/opt/openssl<br>make<br>make install<br></code></pre></td></tr></table></figure><p>openssl的源码包可以点<a href="https://www.openssl.org/source/old/1.1.1/">这里</a>，openssl编译安装完成。</p><h2 id="编译安装python3"><a href="#编译安装python3" class="headerlink" title="编译安装python3"></a>编译安装python3</h2><p>目前的版本是python3.10.4。直接从官网下载源码。编译参数，安装如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 1、下载python3源码</span><br>wget https://www.python.org/ftp/python/3.10.4/Python-3.10.4.tgz<br><span class="hljs-comment"># 2、解压</span><br>tar -zxvf Python-3.10.4.tgz<br><span class="hljs-comment"># 3、编译参数，指定安装目录，指定openssl目录</span><br>./configure --prefix=/usr/local/python3 --with-openssl=/opt/openssl --enable-optimizations<br>mark<br>mark install<br><span class="hljs-comment"># 4、创建软链接</span><br><span class="hljs-built_in">ln</span> -s /usr/local/python3/bin/python3 /usr/local/bin/python3<br><span class="hljs-built_in">ln</span> -s /usr/local/python3/bin/pip3 /usr/local/bin/pip3<br></code></pre></td></tr></table></figure><p>安装完毕，可以看一下python3的版本信息，我们来验证一下openssl是否正常。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># python3 -V</span><br>Python 3.10.4<br><span class="hljs-comment"># pip3 -V</span><br>pip 22.0.4 from /usr/local/python3/lib/python3.10/site-packages/pip (python 3.10)<br><span class="hljs-comment"># python3 -c &quot;import ssl;print(ssl.OPENSSL_VERSION)&quot;</span><br>OpenSSL 1.1.1k  FIPS 25 Mar 2021<br></code></pre></td></tr></table></figure><p>好了，已经可以了。<br>openssl的版本已经正常出来了。</p><h2 id="创建虚拟环境和包"><a href="#创建虚拟环境和包" class="headerlink" title="创建虚拟环境和包"></a>创建虚拟环境和包</h2><p>Python应用程序通常会使用不在标准库内的软件包和模块。应用程序有时需要特定版本的库，因为应用程序可能需要修复特定的错误，或者可以使用库的过时版本的接口编写应用程序。</p><p>这意味着一个Python安装可能无法满足每个应用程序的要求。如果应用程序A需要特定模块的1.0版本但应用程序B需要2.0版本，则需求存在冲突，安装版本1.0或2.0将导致某一个应用程序无法运行。</p><p>这个问题的解决方案是创建一个 virtual environment，一个目录树，其中安装有特定Python版本，以及许多其他包。</p><p>然后，不同的应用将可以使用不同的虚拟环境。 要解决先前需求相冲突的例子，应用程序 A 可以拥有自己的 安装了 1.0 版本的虚拟环境，而应用程序 B 则拥有安装了 2.0 版本的另一个虚拟环境。 如果应用程序 B 要求将某个库升级到 3.0 版本，也不会影响应用程序 A 的环境。</p><h3 id="创建虚拟环境"><a href="#创建虚拟环境" class="headerlink" title="创建虚拟环境"></a>创建虚拟环境</h3><p>用于创建和管理虚拟环境的模块称为 venv。venv 通常会安装你可用的最新版本的 Python。如果您的系统上有多个版本的 Python，您可以通过运行 python3 或您想要的任何版本来选择特定的Python版本。</p><p>要创建虚拟环境，请确定要放置它的目录，并将 venv 模块作为脚本运行目录路径:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python3 -m venv tutorial-env<br></code></pre></td></tr></table></figure><p>这将创建 tutorial-env 目录，如果它不存在的话，并在其中创建包含 Python 解释器副本和各种支持文件的目录。</p><p>虚拟环境的常用目录位置是 .venv。 这个名称通常会令该目录在你的终端中保持隐藏，从而避免需要对所在目录进行额外解释的一般名称。 它还能防止与某些工具所支持的 .env 环境变量定义文件发生冲突。</p><p>创建虚拟环境后，您可以激活它。</p><p>在Windows上，运行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tutorial-env\Scripts\activate.bat<br></code></pre></td></tr></table></figure><p>在Unix或MacOS上，运行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> tutorial-env/bin/activate<br></code></pre></td></tr></table></figure><p>（这个脚本是为bash shell编写的。如果你使用 csh 或 fish shell，你应该改用 activate.csh 或 activate.fish 脚本。）</p><p>激活虚拟环境将改变你所用终端的提示符，以显示你正在使用的虚拟环境，并修改环境以使 python 命令所运行的将是已安装的特定 Python 版本。 例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">Python 3.10.4 (main, May  6 2022, 16:35:03) [GCC 7.3.1 20180303 (Red Hat 7.3.1-5)] on linux<br>Type <span class="hljs-string">&quot;help&quot;</span>, <span class="hljs-string">&quot;copyright&quot;</span>, <span class="hljs-string">&quot;credits&quot;</span> or <span class="hljs-string">&quot;license&quot;</span> <span class="hljs-keyword">for</span> more information.<br>&gt;&gt;&gt; import sys<br>&gt;&gt;&gt; sys.path<br>[<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-string">&#x27;/opt/rh/devtoolset-7/root/usr/lib64/python2.7/site-packages&#x27;</span>, <span class="hljs-string">&#x27;/opt/rh/devtoolset-7/root/usr/lib/python2.7/site-packages&#x27;</span>, <span class="hljs-string">&#x27;/usr/local/python3/lib/python310.zip&#x27;</span>, <span class="hljs-string">&#x27;/usr/local/python3/lib/python3.10&#x27;</span>, <span class="hljs-string">&#x27;/usr/local/python3/lib/python3.10/lib-dynload&#x27;</span>, <span class="hljs-string">&#x27;/opt/for_jumpserver/lib/python3.10/site-packages&#x27;</span>]<br>&gt;&gt;&gt; <br></code></pre></td></tr></table></figure><p>退出虚拟环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># deactivate</span><br></code></pre></td></tr></table></figure><h3 id="配置源"><a href="#配置源" class="headerlink" title="配置源"></a>配置源</h3><p>更换默认源至阿里云镜像。</p><p><strong>临时使用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 虚拟环境中操作</span><br>pip install -i https://mirrors.aliyun.com/pypi/simple 包名<br></code></pre></td></tr></table></figure><p><strong>长期使用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip config <span class="hljs-built_in">set</span> global.index-rul https://mirrors.aliyun.com/pypi/simple/<br></code></pre></td></tr></table></figure><p><strong>查看设置结果</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># pip config list</span><br>golbal.index-url https://mirrors.aliyun.com/pypi/simple/<br></code></pre></td></tr></table></figure><p><strong>取消设置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip config <span class="hljs-built_in">unset</span> golbal.index-url <br></code></pre></td></tr></table></figure><p>也可以修改~.config&#x2F;pip&#x2F;pip.conf配置文件修改python源。</p>]]></content>
    
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>python 3</tag>
      
      <tag>pip 3</tag>
      
      <tag>gcc 7</tag>
      
      <tag>openssl</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>配置openldap自助修改密码服务</title>
    <link href="/2022/05/03/%E9%85%8D%E7%BD%AEopenldap%E8%87%AA%E5%8A%A9%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81%E6%9C%8D%E5%8A%A1/"/>
    <url>/2022/05/03/%E9%85%8D%E7%BD%AEopenldap%E8%87%AA%E5%8A%A9%E4%BF%AE%E6%94%B9%E5%AF%86%E7%A0%81%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<p>openldap 管理可以通过ldif文件导入配置和管理，也可以通过GUI界面的ldapadim工具，或者是phpldapadmin来管理，不过也有一个项目叫<em>LDAP TOOL BOX PROJECT</em>，能更好的使用openldap服务。项目有一句sologan，<em>BECAUSE EVEN LDAP ADMINISTRATORS NEED HELP</em>。官方<a href="https://ltb-project.org/">网站</a>。Github托管<a href="https://github.com/ltb-project/">地址</a>。<br>比如自助修改密码服务，需要自助修改openldap的登录信息，忘记密码重置等工作，可以部署self service password服务。官方的安装<a href="https://self-service-password.readthedocs.io/en/stable/">文档</a>。</p><h2 id="安装php-7"><a href="#安装php-7" class="headerlink" title="安装php 7"></a>安装php 7</h2><p>由于centos 7默认源的php版本为PHP 5.4.16，部署LTB服务需要php版本为php 7以上。可以从第三方源安装php7。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置第三方源</span><br>rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm<br>rpm -Uvh https://rpms.remirepo.net/enterprise/remi-release-7.rpm<br><span class="hljs-comment"># 指定yum配置php版本 </span><br>yum-config-manager --<span class="hljs-built_in">enable</span> remi-php74<br><span class="hljs-comment"># 更新源</span><br>yum make-cache<br><span class="hljs-comment"># 安装php，以及php依赖</span><br>yum install php php-common php-opcache php-mcrypt php-cli php-gd php-curl php-mysqlnd php-xml<br></code></pre></td></tr></table></figure><p>安装的php版本为PHP 7.4.29 (cli) (built: Apr 12 2022 10:55:38) ( NTS )。</p><p>安装php-fpm，php-Smarty等依赖。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install php-Smarty php74-php-fpm php74-php-gd php74-php-json php74-php-mbstring php74-php-xmlrpc php74-php-opcache php74-php-ldap<br><span class="hljs-comment"># php74-php-ldap必须安装。</span><br><br>systemctl start php74-php-fpm.service<br>systemctl <span class="hljs-built_in">enable</span> php74-php-fpm.service<br></code></pre></td></tr></table></figure><h2 id="安装apache"><a href="#安装apache" class="headerlink" title="安装apache"></a>安装apache</h2><p>self service password的web管理页面，使用apache做容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install httpd<br></code></pre></td></tr></table></figure><p>apache启动管理及防火墙配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start httpd<br>systemctl <span class="hljs-built_in">enable</span> httpd<br>firewall-cmd --permanent --add-service=http<br>firewall-cmd --permanent --add-service=https<br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><h2 id="添加LTB源"><a href="#添加LTB源" class="headerlink" title="添加LTB源"></a>添加LTB源</h2><p>添加ldap tool box官方源，以及self service password源。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/yum.repo.d<br>vim ltb-project.repo<br>[ltb-project-noarch]<br>name=LTB project packages (noarch)<br>baseurl=https://ltb-project.org/rpm/<span class="hljs-variable">$releasever</span>/noarch<br>enabled=1<br>gpgcheck=1<br>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-LTB-project<br><br><span class="hljs-comment"># 导入GPK证书</span><br>rpm --import https://ltb-project.org/wiki/lib/RPM-GPG-KEY-LTB-project<br><br><span class="hljs-comment"># 更新源</span><br>yum makecache<br></code></pre></td></tr></table></figure><h2 id="安装self-service-password"><a href="#安装self-service-password" class="headerlink" title="安装self service password"></a>安装self service password</h2><p>yum安装self service password。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install self-service-password<br></code></pre></td></tr></table></figure><h2 id="配置self-service-password"><a href="#配置self-service-password" class="headerlink" title="配置self service password"></a>配置self service password</h2><p>self service password安装结束后，在apache配置目录生成对应的配置文件。配置文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;VirtualHost *:80&gt;<br>    ServerName ssp.example.com<br><br>    DocumentRoot /usr/local/self-service-password/htdocs<br>    DirectoryIndex index.php<br><br>    AddDefaultCharset UTF-8<br><br>    &lt;Directory /usr/local/self-service-password/htdocs&gt;<br>        AllowOverride None<br>        &lt;IfVersion &gt;= 2.3&gt;<br>            Require all granted<br>        &lt;/IfVersion&gt;<br>        &lt;IfVersion &lt; 2.3&gt;<br>            Order Deny,Allow<br>            Allow from all<br>        &lt;/IfVersion&gt;<br>    &lt;/Directory&gt;<br><br>    Alias /rest /usr/local/self-service-password/rest<br><br>    &lt;Directory /usr/local/self-service-password/rest&gt;<br>        AllowOverride None<br>        &lt;IfVersion &gt;= 2.3&gt;<br>            Require all denied<br>        &lt;/IfVersion&gt;<br>        &lt;IfVersion &lt; 2.3&gt;<br>            Order Deny,Allow<br>            Deny from all<br>        &lt;/IfVersion&gt;<br>    &lt;/Directory&gt;<br><br>    LogLevel warn<br>    ErrorLog /var/log/apache2/ssp_error.log<br>    CustomLog /var/log/apache2/ssp_access.log combined<br>&lt;/VirtualHost&gt;<br></code></pre></td></tr></table></figure><p>nginx配置可以见官方文档页面。</p><p>self service password的配置文件在&#x2F;usr&#x2F;share&#x2F;self-service-password&#x2F;目录下。</p><p>主要配置如下：</p><h5 id="语言"><a href="#语言" class="headerlink" title="语言"></a>语言</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Default language</span><br><span class="hljs-variable">$lang</span> = <span class="hljs-string">&quot;zh-CN&quot;</span>;<br></code></pre></td></tr></table></figure><h5 id="显示菜单"><a href="#显示菜单" class="headerlink" title="显示菜单"></a>显示菜单</h5><p>是否显示顶部菜单。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$show_menu</span> = <span class="hljs-literal">true</span>;<br></code></pre></td></tr></table></figure><h5 id="帮助信息"><a href="#帮助信息" class="headerlink" title="帮助信息"></a>帮助信息</h5><p>是否显示帮助信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$show_help</span> = <span class="hljs-literal">false</span>;<br></code></pre></td></tr></table></figure><p>自定义帮助信息示例。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$messages</span>[<span class="hljs-string">&#x27;passwordchangedextramessage&#x27;</span>] = <span class="hljs-string">&quot;Congratulations!&quot;</span>;<br><span class="hljs-variable">$messages</span>[<span class="hljs-string">&#x27;changehelpextramessage&#x27;</span>] = <span class="hljs-string">&quot;Contact us if you are lost...&quot;</span>;<br></code></pre></td></tr></table></figure><h5 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h5><p>需要配置加密令牌的关键字。默认seret，需要自己更改，不然无法使用self service password。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$keyphrase</span> = <span class="hljs-string">&quot;secret&quot;</span>;<br></code></pre></td></tr></table></figure><p>更改令牌字符排除字符。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$login_forbidden_chars</span> = <span class="hljs-string">&quot;*()&amp;|&quot;</span>;<br></code></pre></td></tr></table></figure><blockquote><p>如果不更改默认配置，则默认只允许字母和数字。</p></blockquote><h5 id="ldap连接"><a href="#ldap连接" class="headerlink" title="ldap连接"></a>ldap连接</h5><h6 id="server-address"><a href="#server-address" class="headerlink" title="server address"></a>server address</h6><p>配置ldap连接地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$ldap_url</span> = <span class="hljs-string">&quot;ldap://localhost:389&quot;</span>;<br><span class="hljs-comment"># url 后面接本地或远程ldap服务地址</span><br></code></pre></td></tr></table></figure><p>多个ldap服务配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$ldap_url</span> = <span class="hljs-string">&quot;ldap://server1 ldap://server2&quot;</span>;<br></code></pre></td></tr></table></figure><p>openldap ssl密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$ldap_url</span> = <span class="hljs-string">&quot;ldaps://localhost&quot;</span>;<br></code></pre></td></tr></table></figure><p>openldap StartTLS配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$ldap_starttls</span> = <span class="hljs-literal">true</span>;<br></code></pre></td></tr></table></figure><p>证书文件配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">TLS_CACERT /etc/ssl/ca.crt<br></code></pre></td></tr></table></figure><p>证书检查配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">TLS_REQCERT allow<br></code></pre></td></tr></table></figure><p>如果SSP和LDAP之间遇到TLS版本不匹配问题，可以配置以下选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">TLS_CIPHER_SUITE TLSv1+RSA<br></code></pre></td></tr></table></figure><h6 id="DN配置"><a href="#DN配置" class="headerlink" title="DN配置"></a>DN配置</h6><p>配置绑定域和密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$ldap_binddn</span> = <span class="hljs-string">&quot;cn=ssp,ou=dsa,dc=example,dc=com&quot;</span>;<br><span class="hljs-variable">$ldap_bindpw</span> = <span class="hljs-string">&quot;secret&quot;</span>;<br><span class="hljs-comment"># 根据自己实际的ldap信息修改</span><br></code></pre></td></tr></table></figure><p>谁能修改密码，manager或user。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$who_change_password</span> = <span class="hljs-string">&quot;user&quot;</span>;<br></code></pre></td></tr></table></figure><p>搜索参数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$ldap_base</span> = <span class="hljs-string">&quot;dc=example,dc=com&quot;</span>;<br><span class="hljs-variable">$ldap_filter</span> = <span class="hljs-string">&quot;(&amp;(objectClass=pe名访问rson)(uid=&#123;login&#125;))&quot;</span>;<br></code></pre></td></tr></table></figure><p>其它参考self service password配置文件说明。</p><p>安装结束，参考页面：<br><img src="https://blog.ywmy.xyz/blog/ssp.png" alt="self-service-password"></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>openldap</tag>
      
      <tag>centos</tag>
      
      <tag>self server password</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 7 安装 openldap</title>
    <link href="/2022/04/30/centos-7-%E5%AE%89%E8%A3%85-openldap/"/>
    <url>/2022/04/30/centos-7-%E5%AE%89%E8%A3%85-openldap/</url>
    
    <content type="html"><![CDATA[<h1 id="centos-7-安装-openldap"><a href="#centos-7-安装-openldap" class="headerlink" title="centos 7 安装 openldap"></a>centos 7 安装 openldap</h1><p>openldap 相关名称解释及CentOS 7 配置openldap过程。</p><span id="more"></span><h2 id="ldap的信息模型"><a href="#ldap的信息模型" class="headerlink" title="ldap的信息模型"></a>ldap的信息模型</h2><p>LDAP的信息模型是建立在”条目”（entries）的基础上。一个条目是一些属性的集合，并且具有一个全局唯一的”可区分名称”DN，一个条目可以通过DN来引用。每一个条目的属性具有一个类型和一个或者多个值。类型通常是容易记忆的名称，比如”cn”是通用名称（common name） ，或者”mail”是电子邮件地址。条目的值的语法取决于属性类型。比如，cn属性可能具有一个值”Babs Jensen” 。一个mail属性可能包含”<a href="mailto:&#66;&#x61;&#x62;&#x73;&#x40;&#97;&#98;&#x63;&#46;&#x63;&#x6f;&#109;">&#66;&#x61;&#x62;&#x73;&#x40;&#97;&#98;&#x63;&#46;&#x63;&#x6f;&#109;</a>“ 。一个jpegphoto属性可能包含一幅JPEG（二进制）格式的图片。</p><h2 id="ldap的objectClass"><a href="#ldap的objectClass" class="headerlink" title="ldap的objectClass"></a>ldap的objectClass</h2><p>LDAP通过属性objectClass来控制哪一个属性必须出现或允许出现在一个条目中，它的值决定了该条目必须遵守的模式规则,可以理解为关系数据库的表结构。</p><table><thead><tr><th align="left">objectClasss</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">olcGlobal</td><td align="left">全局配置文件类型，主要是cn&#x3D;config.ldif的配置基</td></tr><tr><td align="left">top</td><td align="left">顶层对象</td></tr><tr><td align="left">organzationa</td><td align="left">组织，比如公司名称，顶层对象</td></tr><tr><td align="left">organizationalUnit</td><td align="left">重要，一个目录节点，通常中group，或者部门这样的含义</td></tr><tr><td align="left">inetOrgPerson</td><td align="left">重要，我们真正的用户节点为类型，person类型，叶子节点</td></tr><tr><td align="left">groupOfNames</td><td align="left">重要，分组的group类型，标记一个group节点</td></tr><tr><td align="left">olcModuleList</td><td align="left">配置块的对象</td></tr></tbody></table><h2 id="ldap常用关键字列表"><a href="#ldap常用关键字列表" class="headerlink" title="ldap常用关键字列表"></a>ldap常用关键字列表</h2><p>ldap的entry是由名种字段构成，可以理解为关系数据库的字段。</p><table><thead><tr><th align="left">关键字</th><th align="left">英文全称</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">dc</td><td align="left">Domain Component</td><td align="left">域名的部分，其格式是将完整域名分成几部分，如域名example.com变成dc&#x3D;example,dc&#x3D;com</td></tr><tr><td align="left">uid</td><td align="left">User Id</td><td align="left">用户名，如“tom”</td></tr><tr><td align="left">ou</td><td align="left">Organization Unit</td><td align="left">组织单位，类似Linux文件系统中的子目录，它是一个窗口对象，组织单位可以包含其它各类对象</td></tr><tr><td align="left">cn</td><td align="left">Common Name</td><td align="left">公共名称，如”Thomas Johansson”</td></tr><tr><td align="left">sn</td><td align="left">surname</td><td align="left">姓，如“Johansson”</td></tr><tr><td align="left">dn</td><td align="left">Distinguished Name</td><td align="left">惟一辨识名，类似Linux文件系统中的绝对路径，每个对象都有一个惟一的名称，如”uid&#x3D;tom,ou&#x3D;market,dc&#x3D;example,dc&#x3D;com”，在一个目录树中DN是惟一的。</td></tr><tr><td align="left">rdn</td><td align="left">Relative dn</td><td align="left">相对辨识名，类似于文件系统中的相对路径，它是与目录树结构无关的部分，如“uid&#x3D;tom”或”cn&#x3D;Thomas Johansson”</td></tr><tr><td align="left">c</td><td align="left">Country</td><td align="left">国家，如“CN”或“US”等</td></tr><tr><td align="left">o</td><td align="left">Organization</td><td align="left">组织名，如“Example,Inc.”</td></tr></tbody></table><h2 id="centos-7-安装-openldap-1"><a href="#centos-7-安装-openldap-1" class="headerlink" title="centos 7 安装 openldap"></a>centos 7 安装 openldap</h2><p>在centos 7中使用yum安装openldap，并安装phpldapadmin管理工具。</p><h3 id="安装openldap"><a href="#安装openldap" class="headerlink" title="安装openldap"></a>安装openldap</h3><p>yum安装openldap。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install openldap openldap-clients openldap-servers migrationtools<br></code></pre></td></tr></table></figure><h3 id="配置openldap"><a href="#配置openldap" class="headerlink" title="配置openldap"></a>配置openldap</h3><h4 id="配置前的准备工作："><a href="#配置前的准备工作：" class="headerlink" title="配置前的准备工作："></a>配置前的准备工作：</h4><ul><li><p>关闭selinux</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/sysconfig/selinux<br></code></pre></td></tr></table></figure></li><li><p>复制数据库模版</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /usr/share/openldap-servers/DB_CONFIG.example /var/lib/ldap/DB_CONFIG<br><span class="hljs-built_in">chown</span> -R ldap. /var/lib/ldap/DB_CONFIG<br></code></pre></td></tr></table></figure></li><li><p>启动slapd服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start slapd<br>systemctl <span class="hljs-built_in">enable</span> slapd <span class="hljs-comment"># 开启加载服务</span><br></code></pre></td></tr></table></figure><p>如果启动失败，一般提示证书关相，可以如下操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /etc/openldap/cert<br><span class="hljs-built_in">rm</span> ./*<br><span class="hljs-comment"># 重新生成证书</span><br>bash /usr/libexec/openldap/create-certdb.sh<br>bash /usr/libexec/openldap/generate-server-cert.sh <br><span class="hljs-comment"># 再次重启</span><br>systemctl start slapd<br></code></pre></td></tr></table></figure><p>启动失败的第二个问题，hostname，手动添加&#x2F;etc&#x2F;hosts一行记录，主机IP＋主机名即可。</p></li><li><p>防火墙放通openldap服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-service=ldap<br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure></li></ul><h4 id="生成密码"><a href="#生成密码" class="headerlink" title="生成密码"></a>生成密码</h4><p>使用slappasswd生成密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">slappasswd -s your_passwd<br>&#123;SSHA&#125;m0EtqWHBpXh0O88k8+FpNx6L5doX2jVe<br></code></pre></td></tr></table></figure><p>记住生成的密码。</p><h4 id="新增修改密码文件"><a href="#新增修改密码文件" class="headerlink" title="新增修改密码文件"></a>新增修改密码文件</h4><p>可以在家目录下创建一个目录ldif，创建ldif文件操作。示例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim changepwd.ldif<br>dn: olcDatabase=&#123;0&#125;config,cn=config<br>changetype: modify<br>add: olcRootPW<br>olcRootPW: &#123;SSHA&#125;m0EtqWHBpXh0O88k8+FpNx6L5doX2jVe<br></code></pre></td></tr></table></figure><p>以上ldif文件的内容解释如下：</p><ul><li>第一行执行配置文件，这里表示指定cn&#x3D;config&#x2F;olcDatabases&#x3D;{0}config文件。</li><li>第二行changetype指定类型为修改。</li><li>第三行add表示添加olcRootPW配置项。</li><li>第四行指定olcRootPW配置项的值。<br>默认的olcDatabase&#x3D;{0}config文件，里面没有olcRootPW项，执行后，会新增olcRootPW项，内容为文件中指定的加密后的字条串。</li></ul><p>执行导入命令，修改ldap配置文件，通过-f执行文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ldapadd -Y EXTERNAL -H ldapi:/// -f changepwd.ldif<br></code></pre></td></tr></table></figure><h4 id="导入schema文件"><a href="#导入schema文件" class="headerlink" title="导入schema文件"></a>导入schema文件</h4><p>这些schema文件位于&#x2F;etc&#x2F;openldap&#x2F;schema&#x2F;目录中，schema控制着条目拥有哪些对象、类型和属性，可以自行选择需要的进行导入。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">ldapadd -Y EXTERNAL -H ldapi:/// -f channgepwd.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/corba.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/core.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/collective.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/cosine.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/duaconf.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/dyngroup.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/inetorgperson.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/java.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/misc.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/nis.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/openldap.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/pmi.ldif <br>ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/ppolicy.ldif<br></code></pre></td></tr></table></figure><h4 id="修改域名"><a href="#修改域名" class="headerlink" title="修改域名"></a>修改域名</h4><p>添加一个域名文件，编辑自己的域名信息，管理员为admin。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim changedomain.ldif<br><br>dn: olcDatabase=&#123;1&#125;monitor,cn=config<br>changetype: modify<br>replace: olcAccess<br>olcAccess: &#123;0&#125;to * by dn.base=<span class="hljs-string">&quot;gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth&quot;</span> <span class="hljs-built_in">read</span> by dn.base=<span class="hljs-string">&quot;cn=admin,dc=example,dc=com&quot;</span> <span class="hljs-built_in">read</span> by * none<br><br>dn: olcDatabase=&#123;2&#125;hdb,cn=config<br>changetype: modify<br>replace: olcSuffix<br>olcSuffix: dc=example,dc=com<br><br>dn: olcDatabase=&#123;2&#125;hdb,cn=config<br>changetype: modify<br>replace: olcRootDN<br>olcRootDN: cn=admin,dc=example,dc=com<br><br>dn: olcDatabase=&#123;2&#125;hdb,cn=config<br>changetype: modify<br>replace: olcRootPW<br>olcRootPW: &#123;SSHA&#125;m0EtqWHBpXh0O88k8+FpNx6L5doX2jVe<br><br>dn: olcDatabase=&#123;2&#125;hdb,cn=config<br>changetype: modify<br>add: olcAccess<br>olcAccess: &#123;0&#125;to attrs=userPassword,shadowLastChange by dn=<span class="hljs-string">&quot;cn=admin,dc=example,dc=com&quot;</span> write by anonymous auth by self write by * none<br>olcAccess: &#123;1&#125;to dn.base=<span class="hljs-string">&quot;&quot;</span> by <span class="hljs-built_in">read</span><br>olcAccess: &#123;2&#125;to * by dn=<span class="hljs-string">&quot;cn=admin,dc=example,dc=com&quot;</span> write by * <span class="hljs-built_in">read</span><br></code></pre></td></tr></table></figure><p>导入域名ldif文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ldapmodify -Y EXTERNAL -H ldapi:/// -f changedomain.ldif<br></code></pre></td></tr></table></figure><h4 id="启动memberof功能"><a href="#启动memberof功能" class="headerlink" title="启动memberof功能"></a>启动memberof功能</h4><p>添加add-memberof.ldif文件，并导入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">dn: cn=module&#123;0&#125;,cn=config<br>cn: module&#123;0&#125;<br>objectClass: olcModuleList<br>objectClass: top<br>olcModuleLoad: memberof.la<br>olcModulePath: /usr/lib64/openldap<br><br>dn: olcOverlay=&#123;0&#125;memberof,olcDatabase=&#123;2&#125;hdb,cn=config<br>objectClass: olcConfig<br>objectClass: olcMemberOf<br>objectClass: olcOverlayConfig<br>objectClass: top<br>olcOverlay: memberof<br>olcMemberOfDangling: ignore<br>olcMemberOfRefInt: TRUE<br>olcMemberOfGroupOC: groupOfUniqueNames<br>olcMemberOfMemberAD: uniqueMember<br>olcMemberOfMemberOfAD: memberOf<br></code></pre></td></tr></table></figure><p>添加refint1.ldif文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim refint1.ldif<br>dn: cn=module&#123;0&#125;,cn=config<br>add: olcmoduleload<br>olcmoduleload: refint<br></code></pre></td></tr></table></figure><p>添加refint2.ldif文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">dn: olcOverlay=refint,olcDatabase=&#123;2&#125;hdb,cn=config<br>objectClass: olcConfig<br>objectClass: olcOverlayConfig<br>objectClass: olcRefintConfig<br>objectClass: top<br>olcOverlay: refint<br>olcRefintAttribute: memberof uniqueMember manager owner<br></code></pre></td></tr></table></figure><p>依次导入创建的ldif文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">ldapadd -Q -Y EXTERNAL -H ldapi:/// -f add-memberof.ldif<br>ldapmodify -Q -Y EXTERNAL -H ldapi:/// -f refint1.ldif<br>ldapadd -Q -Y EXTERNAL -H ldapi:/// -f refint2.ldif<br></code></pre></td></tr></table></figure><h4 id="创建组织，创建admin角色"><a href="#创建组织，创建admin角色" class="headerlink" title="创建组织，创建admin角色"></a>创建组织，创建admin角色</h4><p>创建base.ldif文件，并导入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">dn: dc=example,dc=com<br>objectClass: top<br>objectClass: dcObject<br>objectClass: organization<br>o: example com<br>dc: example<br><br>dn: cn=admin,dc=example,dc=com<br>objectClass: organizationalRole<br>cn: admin<br><br>dn: ou=People,dc=example,dc=com<br>objectClass: organizationalUnit<br>ou: People<br><br>dn: ou=Group,dc=example,dc=com<br>objectClass: organizationalRole<br>cn: Group<br></code></pre></td></tr></table></figure><p>执行密码，添加配置项，导入输入配置的密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ldapadd -x -D cn=admin,dc=example,dc=com -W -f base.ldif<br></code></pre></td></tr></table></figure><h3 id="安装ldapadmin"><a href="#安装ldapadmin" class="headerlink" title="安装ldapadmin"></a>安装ldapadmin</h3><p>ldap安装好后，可以安装web管理界面phpldapadmin。centos 7 默认的源中是php5。如果是php7，会有报错。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install phpldapadmin<br></code></pre></td></tr></table></figure><h4 id="更改httpd配置"><a href="#更改httpd配置" class="headerlink" title="更改httpd配置"></a>更改httpd配置</h4><p>修改apache的phpldapadmin文件，配置外网访问。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/httpd/conf.d/phpldapadmin.conf<br><span class="hljs-comment"># 配置示例，更改Require行。</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment">#  Web-based tool for managing LDAP servers</span><br><span class="hljs-comment">#</span><br><br>Alias /phpldapadmin /usr/share/phpldapadmin/htdocs<br>Alias /ldapadmin /usr/share/phpldapadmin/htdocs<br><br>&lt;Directory /usr/share/phpldapadmin/htdocs&gt;<br>  &lt;IfModule mod_authz_core.c&gt;<br>    <span class="hljs-comment"># Apache 2.4</span><br>    Require all granted<br>  &lt;/IfModule&gt;<br>  &lt;IfModule !mod_authz_core.c&gt;<br>    <span class="hljs-comment"># Apache 2.2</span><br>    Order Deny,Allow<br>    Deny from all<br>    Allow from 127.0.0.1<br>    Allow from ::1<br>  &lt;/IfModule&gt;<br>&lt;/Directory&gt;<br></code></pre></td></tr></table></figure><h4 id="修改配置用DN登录phpldapadmin"><a href="#修改配置用DN登录phpldapadmin" class="headerlink" title="修改配置用DN登录phpldapadmin"></a>修改配置用DN登录phpldapadmin</h4><p>修改配置行示例如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/phpldapadmin/config.php<br>--------------------------------<br><span class="hljs-comment"># 398行，默认使用uid登录，改用cn</span><br>// <span class="hljs-variable">$servers</span>-&gt;setValue(<span class="hljs-string">&#x27;login&#x27;</span>,<span class="hljs-string">&#x27;attr&#x27;</span>,<span class="hljs-string">&#x27;dn&#x27;</span>);<br><span class="hljs-variable">$servers</span>-&gt;setValue(<span class="hljs-string">&#x27;login&#x27;</span>,<span class="hljs-string">&#x27;attr&#x27;</span>,<span class="hljs-string">&#x27;cn&#x27;</span>);<br><span class="hljs-comment"># 460行，关闭匿名登录。</span><br>/* Enable anonymous <span class="hljs-built_in">bind</span> login. */<br><span class="hljs-variable">$servers</span>-&gt;setValue(<span class="hljs-string">&#x27;login&#x27;</span>,<span class="hljs-string">&#x27;anon_bind&#x27;</span>,<span class="hljs-literal">false</span>);<br><span class="hljs-comment"># 519行，设置用户属性的唯一性。</span><br>   occur with other attributes have the same value. */<br><span class="hljs-variable">$servers</span>-&gt;setValue(<span class="hljs-string">&#x27;unique&#x27;</span>,<span class="hljs-string">&#x27;attrs&#x27;</span>,array(<span class="hljs-string">&#x27;mail&#x27;</span>,<span class="hljs-string">&#x27;uid&#x27;</span>,<span class="hljs-string">&#x27;uidNumber&#x27;</span>,<span class="hljs-string">&#x27;cn&#x27;</span>,<span class="hljs-string">&#x27;sn&#x27;</span>));<br></code></pre></td></tr></table></figure><h4 id="启动apache"><a href="#启动apache" class="headerlink" title="启动apache"></a>启动apache</h4><p>启动httpd和设置自启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start httpd<br>systemctl <span class="hljs-built_in">enable</span> httpd<br><span class="hljs-comment"># 防火墙放通httpd</span><br>firewall-cmd --permanent --add-service=http<br>firewall-cmd --permanent --add-service=https<br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><h4 id="登录phpldapadmin"><a href="#登录phpldapadmin" class="headerlink" title="登录phpldapadmin"></a>登录phpldapadmin</h4><p>使用浏览器访问<a href="http://server_ip/phpldapadmin%E3%80%82%E5%8D%B3%E5%8F%AF%E3%80%82%E6%89%93%E5%BC%80%E5%90%8E%E7%99%BB%E5%BD%95%E6%B5%8B%E8%AF%95%E3%80%82">http://server_ip/phpldapadmin。即可。打开后登录测试。</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>openldap</tag>
      
      <tag>centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>猜数字</title>
    <link href="/2022/04/30/%E7%8C%9C%E6%95%B0%E5%AD%97/"/>
    <url>/2022/04/30/%E7%8C%9C%E6%95%B0%E5%AD%97/</url>
    
    <content type="html"><![CDATA[<h1 id="shell-猜数字"><a href="#shell-猜数字" class="headerlink" title="shell 猜数字"></a>shell 猜数字</h1><p>一个简单的shell，猜100以内的数字。</p><span id="more"></span><h2 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim number.sh<br><br><span class="hljs-comment">#! /bin/bash</span><br>num=$[RANDOM%100+1]<br>ci=0<br><br><span class="hljs-keyword">while</span> :<br><span class="hljs-keyword">do</span><br>    <span class="hljs-built_in">read</span> -p <span class="hljs-string">&#x27;猜一个1到100的数：  &#x27;</span> cai<br>    <span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$cai</span>&quot;</span> -eq <span class="hljs-string">&quot;<span class="hljs-variable">$num</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">let</span> <span class="hljs-string">&quot;ci++&quot;</span><br>        <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;恭喜，猜对了！<span class="hljs-variable">$num</span> ,\n <span class="hljs-variable">$cai</span> 次。&quot;</span><br>        <span class="hljs-built_in">exit</span><br>    <span class="hljs-keyword">elif</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$cai</span>&quot;</span> -ge <span class="hljs-string">&quot;<span class="hljs-variable">$num</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">let</span> <span class="hljs-string">&quot;ci++&quot;</span><br>        <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;错了，大了。\n <span class="hljs-variable">$ci</span> 次。&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">let</span> <span class="hljs-string">&quot;ci++&quot;</span><br>        <span class="hljs-built_in">echo</span> -e <span class="hljs-string">&quot;错了，小了。\n <span class="hljs-variable">$ci</span> 次。&quot;</span><br>    <span class="hljs-keyword">fi</span><br><span class="hljs-keyword">done</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos chrony 时间同步</title>
    <link href="/2022/04/30/centos-chrony-%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/"/>
    <url>/2022/04/30/centos-chrony-%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="centos-chrony-时间同步"><a href="#centos-chrony-时间同步" class="headerlink" title="centos chrony 时间同步"></a>centos chrony 时间同步</h1><p>centos 时间同步，之前使用ntpdate，现在可以使用chrony从远程NTP服务器中获取正确的时间。</p><span id="more"></span><h2 id="安装chrony"><a href="#安装chrony" class="headerlink" title="安装chrony"></a>安装chrony</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install chrony<br></code></pre></td></tr></table></figure><p>chrony 安装完成之后，会有两个可执行程序：<br><strong>chronyc</strong>：chrony命令行工具<br><strong>chronyd</strong>：chrony的守护进程</p><h2 id="chron配置文件"><a href="#chron配置文件" class="headerlink" title="chron配置文件"></a>chron配置文件</h2><p>chrony的配置文件是&#x2F;etc&#x2F;chrony.conf，默认日志配置文件如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Use public servers from the pool.ntp.org project.</span><br><span class="hljs-comment"># Please consider joining the pool (http://www.pool.ntp.org/join.html).</span><br>server 0.centos.pool.ntp.org iburst<br>server 1.centos.pool.ntp.org iburst<br>server 2.centos.pool.ntp.org iburst<br>server 3.centos.pool.ntp.org iburst<br><br><span class="hljs-comment"># Record the rate at which the system clock gains/losses time.</span><br>driftfile /var/lib/chrony/drift<br><br><span class="hljs-comment"># Allow the system clock to be stepped in the first three updates</span><br><span class="hljs-comment"># if its offset is larger than 1 second.</span><br>makestep 1.0 3<br><br><span class="hljs-comment"># Enable kernel synchronization of the real-time clock (RTC).</span><br>rtcsync<br><br><span class="hljs-comment"># Enable hardware timestamping on all interfaces that support it.</span><br><span class="hljs-comment">#hwtimestamp *</span><br><br><span class="hljs-comment"># Increase the minimum number of selectable sources required to adjust</span><br><span class="hljs-comment"># the system clock.</span><br><span class="hljs-comment">#minsources 2</span><br><br><span class="hljs-comment"># Allow NTP client access from local network.</span><br><span class="hljs-comment">#allow 192.168.0.0/16</span><br><br><span class="hljs-comment"># Serve time even if not synchronized to a time source.</span><br><span class="hljs-comment">#local stratum 10</span><br><br><span class="hljs-comment"># Specify file containing keys for NTP authentication.</span><br><span class="hljs-comment">#keyfile /etc/chrony.keys</span><br><br><span class="hljs-comment"># Specify directory for log files.</span><br>logdir /var/log/chrony<br><br><span class="hljs-comment"># Select which information is logged.</span><br><span class="hljs-comment">#log measurements statistics tracking</span><br></code></pre></td></tr></table></figure><p><strong>server</strong> 开头的配置项为远程NTP服务器，chrony将从中获取时间的远程NTP服务器列表。</p><p><strong>driftfile &#x2F;var&#x2F;lib&#x2F;chrony&#x2F;drift</strong> 存储校时误差，重启后，之前的计算结果也不会丢失。</p><p><strong>keyfile &#x2F;etc&#x2F;chrony.keys</strong> 该文件包含用于NTP身份验证的密角。</p><p><strong>logdir &#x2F;var&#x2F;log&#x2F;chrony</strong> chrony日志文件。</p><h2 id="测试chrony"><a href="#测试chrony" class="headerlink" title="测试chrony"></a>测试chrony</h2><p>chronyd手动同步:</p><p>语法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chronyd -q <span class="hljs-string">&#x27;server &#123;ntp_server_name&#125; iburst&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># chronyd -q </span><br>2022-04-30T03:06:47Z chronyd version 3.4 starting (+CMDMON +NTP +REFCLOCK +RTC +PRIVDROP +SCFILTER +SIGND +ASYNCDNS +SECHASH +IPV6 +DEBUG)<br>2022-04-30T03:06:47Z Frequency 59.505 +/- 0.065 ppm <span class="hljs-built_in">read</span> from /var/lib/chrony/drift<br>2022-04-30T03:06:53Z System clock wrong by -0.006353 seconds (step)<br>2022-04-30T03:06:53Z chronyd exiting<br><br><span class="hljs-comment"># 指定NTP服务器</span><br><br>[root@localhost ~]<span class="hljs-comment"># chronyd -q &#x27;server cn.pool.ntp.org iburst&#x27;</span><br>2022-04-30T03:09:54Z chronyd version 3.4 starting (+CMDMON +NTP +REFCLOCK +RTC +PRIVDROP +SCFILTER +SIGND +ASYNCDNS +SECHASH +IPV6 +DEBUG)<br>2022-04-30T03:09:54Z Initial frequency 59.505 ppm<br>2022-04-30T03:09:59Z System clock wrong by -0.008810 seconds (step)<br>2022-04-30T03:09:59Z chronyd exiting<br></code></pre></td></tr></table></figure><h2 id="启动chronyd服务"><a href="#启动chronyd服务" class="headerlink" title="启动chronyd服务"></a>启动chronyd服务</h2><p>使用systemctl管理chronyd服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start chronyd<br>systemctl stop chronyd<br>systemctl restart chronyd<br>systemctn <span class="hljs-built_in">enable</span> chronyd <span class="hljs-comment"># 开机加载服务</span><br></code></pre></td></tr></table></figure><p>查看chronyd运行状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl status chronyd<br>● chronyd.service - NTP client/server<br>   Loaded: loaded (/usr/lib/systemd/system/chronyd.service; enabled; vendor preset: enabled)<br>   Active: active (running) since 六 2022-04-30 11:12:34 CST; 1min 53s ago<br>     Docs: man:chronyd(8)<br>           man:chrony.conf(5)<br>  Process: 31623 ExecStartPost=/usr/libexec/chrony-helper update-daemon (code=exited, status=0/SUCCESS)<br>  Process: 31619 ExecStart=/usr/sbin/chronyd <span class="hljs-variable">$OPTIONS</span> (code=exited, status=0/SUCCESS)<br> Main PID: 31621 (chronyd)<br>   CGroup: /system.slice/chronyd.service<br>           └─31621 /usr/sbin/chronyd<br><br>4月 30 11:12:34 localhost systemd[1]: Starting NTP client/server...<br>4月 30 11:12:34 localhost chronyd[31621]: chronyd version 3.4 starting (+CMDMON +NTP +REFCLOCK +RTC +PRIVDROP +SCFILTER +SIGND +ASYNCDNS +SECHASH +IPV6 +DEBUG)<br>4月 30 11:12:34 localhost chronyd[31621]: Frequency 59.505 +/- 0.065 ppm <span class="hljs-built_in">read</span> from /var/lib/chrony/drift<br>4月 30 11:12:34 localhost systemd[1]: Started NTP client/server.<br>4月 30 11:12:40 localhost chronyd[31621]: Selected <span class="hljs-built_in">source</span> 162.159.200.123<br>4月 30 11:12:42 localhost chronyd[31621]: Selected <span class="hljs-built_in">source</span> 139.199.215.251<br>4月 30 11:12:43 localhost chronyd[31621]: Source 162.159.200.1 replaced with 219.216.128.25<br></code></pre></td></tr></table></figure><p>##验证时间同步</p><p>要验证系统时间是否已经使用chrony同步，可以使用下面命令查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># chronyc tracking</span><br>Reference ID    : 8BC7D7FB (139.199.215.251)<br>Stratum         : 3<br>Ref time (UTC)  : Sat Apr 30 03:26:44 2022<br>System time     : 0.000547036 seconds fast of NTP time<br>Last offset     : +0.000449545 seconds<br>RMS offset      : 0.018766215 seconds<br>Frequency       : 59.520 ppm fast<br>Residual freq   : +0.633 ppm<br>Skew            : 0.836 ppm<br>Root delay      : 0.035655029 seconds<br>Root dispersion : 0.012061744 seconds<br>Update interval : 64.6 seconds<br>Leap status     : Normal<br></code></pre></td></tr></table></figure><p>##检查chrony源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># chronyc sources</span><br>210 Number of sources = 4<br>MS Name/IP address         Stratum Poll Reach LastRx Last sample               <br>===============================================================================<br>^- a.chl.la                      2   6   375   102  -3941us[-3490us] +/-  121ms<br>^- 219.216.128.25                2   6   377    41   +185us[ +185us] +/-   33ms<br>^* 139.199.215.251               2   6   363    41   +587us[+1038us] +/-   36ms<br>^- time.cloudflare.com           3   6   377    42    +20ms[  +21ms] +/-  139ms<br>````<br>列出有关chronyd使用的每个源的漂移速度和偏移会计信息，使用以下命令：<br>```bash<br>[root@localhost ~]<span class="hljs-comment"># chronyc sourcestats -v</span><br>210 Number of sources = 4<br>                             .- Number of sample points <span class="hljs-keyword">in</span> measurement <span class="hljs-built_in">set</span>.<br>                            /    .- Number of residual runs with same sign.<br>                           |    /    .- Length of measurement <span class="hljs-built_in">set</span> (time).<br>                           |   |    /      .- Est. clock freq error (ppm).<br>                           |   |   |      /           .- Est. error <span class="hljs-keyword">in</span> freq.<br>                           |   |   |     |           /         .- Est. offset.<br>                           |   |   |     |          |          |   On the -.<br>                           |   |   |     |          |          |   samples. \<br>                           |   |   |     |          |          |             |<br>Name/IP Address            NP  NR  Span  Frequency  Freq Skew  Offset  Std Dev<br>==============================================================================<br>a.chl.la                   16   8  1050     -5.377     28.428    -19ms  8400us<br>219.216.128.25             18   8  1103     +0.066      3.771  +1629us  1220us<br>139.199.215.251            19  12  1175     +0.159      3.621  +1261ns  1523us<br>time.cloudflare.com        17   9  1109     +1.413      4.761  +3001us  1534us<br></code></pre></td></tr></table></figure><h2 id="配置chrony-NTP服务"><a href="#配置chrony-NTP服务" class="headerlink" title="配置chrony NTP服务"></a>配置chrony NTP服务</h2><p>如果要将linux服务器配置为所有内部系统的Chronyc NTP服务器，需要修改配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i <span class="hljs-string">&quot;s/#local stratum 10/local stratum 10/g&quot;</span> /etc/chrony.conf<br>sed -i <span class="hljs-string">&quot;s/#allow 192.168.0.0/16/allow 192.168.0.0/16/g&quot;</span> /etc/chrony.conf<br></code></pre></td></tr></table></figure><p>取消<strong>local stratum 10</strong>行注释时，使用linux服务器成为实时NTP服务器，无外部连网也可以继续工作。<br>取消<strong>allow 192.168.0.0&#x2F;16</strong>表示允许该网段的设备连接到chrony ntp 服务器进行时间同步。</p><p>防火墙允许NTP服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-service=ntp<br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><h2 id="chronyc-交互式命令"><a href="#chronyc-交互式命令" class="headerlink" title="chronyc 交互式命令"></a>chronyc 交互式命令</h2><p>命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@localhost ~]<span class="hljs-comment"># chronyc</span><br>chrony version 3.4<br>Copyright (C) 1997-2003, 2007, 2009-2018 Richard P. Curnow and others<br>chrony comes with ABSOLUTELY NO WARRANTY.  This is free software, and<br>you are welcome to redistribute it under certain conditions.  See the<br>GNU General Public License version 2 <span class="hljs-keyword">for</span> details.<br><br>chronyc&gt; <span class="hljs-built_in">help</span><br>System clock:               <br>tracking                    Display system time information<br>makestep                    Correct clock by stepping immediately<br>makestep &lt;threshold&gt; &lt;updates&gt;<br>                            Configure automatic clock stepping<br>maxupdateskew &lt;skew&gt;        Modify maximum valid skew to update frequency<br>waitsync [&lt;max-tries&gt; [&lt;max-correction&gt; [&lt;max-skew&gt; [&lt;interval&gt;]]]]<br>                            Wait until synchronised <span class="hljs-keyword">in</span> specified limits<br>                            <br>Time sources:               <br>sources [-v]                Display information about current sources<br>sourcestats [-v]            Display statistics about collected measurements<br>reselect                    Force reselecting synchronisation <span class="hljs-built_in">source</span><br>reselectdist &lt;dist&gt;         Modify reselection distance<br>                            <br>NTP sources:                <br>activity                    Check how many NTP sources are online/offline<br>ntpdata [&lt;address&gt;]         Display information about last valid measurement<br>add server &lt;address&gt; [options]<br>                            Add new NTP server<br>add peer &lt;address&gt; [options]<br>                            Add new NTP peer<br>delete &lt;address&gt;            Remove server or peer<br>burst &lt;n-good&gt;/&lt;n-max&gt; [&lt;mask&gt;/&lt;address&gt;]<br>                            Start rapid <span class="hljs-built_in">set</span> of measurements<br>maxdelay &lt;address&gt; &lt;delay&gt;  Modify maximum valid sample delay<br>maxdelayratio &lt;address&gt; &lt;ratio&gt;<br>                            Modify maximum valid delay/minimum ratio<br>maxdelaydevratio &lt;address&gt; &lt;ratio&gt;<br>                            Modify maximum valid delay/deviation ratio<br>minpoll &lt;address&gt; &lt;poll&gt;    Modify minimum polling interval<br>maxpoll &lt;address&gt; &lt;poll&gt;    Modify maximum polling interval<br>minstratum &lt;address&gt; &lt;stratum&gt;<br>                            Modify minimum stratum<br><br>offline [&lt;mask&gt;/&lt;address&gt;]  Set sources <span class="hljs-keyword">in</span> subnet to offline status<br>online [&lt;mask&gt;/&lt;address&gt;]   Set sources <span class="hljs-keyword">in</span> subnet to online status<br>onoffline                   Set all sources to online or offline status<br>                            according to network configuration<br>polltarget &lt;address&gt; &lt;target&gt;<br>                            Modify poll target<br>refresh                     Refresh IP addresses<br>                            <br>Manual time input:          <br>manual off|on|reset         Disable/enable/reset settime <span class="hljs-built_in">command</span><br>manual list                 Show previous settime entries<br>manual delete &lt;index&gt;       Delete previous settime entry<br>settime &lt;time&gt;              Set daemon time<br>                            (e.g. Sep 25, 2015 16:30:05 or 16:30:05)<br>                            <br>NTP access:                 <br>accheck &lt;address&gt;           Check whether address is allowed<br>clients                     Report on clients that have accessed the server<br>serverstats                 Display statistics of the server<br>allow [&lt;subnet&gt;]            Allow access to subnet as a default<br>allow all [&lt;subnet&gt;]        Allow access to subnet and all children<br>deny [&lt;subnet&gt;]             Deny access to subnet as a default<br>deny all [&lt;subnet&gt;]         Deny access to subnet and all children<br><span class="hljs-built_in">local</span> [options]             Serve time even when not synchronised<br><span class="hljs-built_in">local</span> off                   Don<span class="hljs-string">&#x27;t serve time when not synchronised</span><br><span class="hljs-string">smoothtime reset|activate   Reset/activate time smoothing</span><br><span class="hljs-string">smoothing                   Display current time smoothing state</span><br><span class="hljs-string">                            </span><br><span class="hljs-string">Monitoring access:          </span><br><span class="hljs-string">cmdaccheck &lt;address&gt;        Check whether address is allowed</span><br><span class="hljs-string">cmdallow [&lt;subnet&gt;]         Allow access to subnet as a default</span><br><span class="hljs-string">cmdallow all [&lt;subnet&gt;]     Allow access to subnet and all children</span><br><span class="hljs-string">cmddeny [&lt;subnet&gt;]          Deny access to subnet as a default</span><br><span class="hljs-string">cmddeny all [&lt;subnet&gt;]      Deny access to subnet and all children</span><br><span class="hljs-string">                            </span><br><span class="hljs-string">Real-time clock:            </span><br><span class="hljs-string">rtcdata                     Print current RTC performance parameters</span><br><span class="hljs-string">trimrtc                     Correct RTC relative to system clock</span><br><span class="hljs-string">writertc                    Save RTC performance parameters to file</span><br><span class="hljs-string">                            </span><br><span class="hljs-string">Other daemon commands:      </span><br><span class="hljs-string">cyclelogs                   Close and re-open log files</span><br><span class="hljs-string">dump                        Dump all measurements to save files</span><br><span class="hljs-string">rekey                       Re-read keys from key file</span><br><span class="hljs-string">shutdown                    Stop daemon</span><br><span class="hljs-string">                            </span><br><span class="hljs-string">Client commands:            </span><br><span class="hljs-string">dns -n|+n                   Disable/enable resolving IP addresses to hostnames</span><br><span class="hljs-string">dns -4|-6|-46               Resolve hostnames only to IPv4/IPv6/both addresses</span><br><span class="hljs-string">timeout &lt;milliseconds&gt;      Set initial response timeout</span><br><span class="hljs-string">retries &lt;retries&gt;           Set maximum number of retries</span><br><span class="hljs-string">keygen [&lt;id&gt; [&lt;type&gt; [&lt;bits&gt;]]]</span><br><span class="hljs-string">                            Generate key for key file</span><br><span class="hljs-string">exit|quit                   Leave the program</span><br><span class="hljs-string">help                        Generate this help</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>centos</tag>
      
      <tag>ntp</tag>
      
      <tag>chrony</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu安装nodejs</title>
    <link href="/2022/04/22/ubuntu%E5%AE%89%E8%A3%85nodejs/"/>
    <url>/2022/04/22/ubuntu%E5%AE%89%E8%A3%85nodejs/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu安装nodejs"><a href="#ubuntu安装nodejs" class="headerlink" title="ubuntu安装nodejs"></a>ubuntu安装nodejs</h1><p>ubuntu 安装 nodejs 记录备忘。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Using Ubuntu</span><br>curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -<br>sudo apt-get install -y nodejs<br><br><span class="hljs-comment"># Using Debian, as root</span><br>curl -fsSL https://deb.nodesource.com/setup_18.x | bash -<br>apt-get install -y nodejs<br></code></pre></td></tr></table></figure><h2 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v<br></code></pre></td></tr></table></figure><h2 id="切换淘宝源"><a href="#切换淘宝源" class="headerlink" title="切换淘宝源"></a>切换淘宝源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm config get registry  <span class="hljs-comment"># 查看源</span><br>npm <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org  <span class="hljs-comment"># 切换淘宝源</span><br>npm config get registry  <span class="hljs-comment"># 查看是否切换成功</span><br></code></pre></td></tr></table></figure><h2 id="更新node-js版本"><a href="#更新node-js版本" class="headerlink" title="更新node.js版本"></a>更新node.js版本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo npm install n -g <span class="hljs-comment"># 全局安装node.js</span><br>sudo n stable <span class="hljs-comment"># 码通过n模块，将node.js更新为最新发布的稳定版。</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>node.js</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql 常用操作</title>
    <link href="/2021/11/25/mysql-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <url>/2021/11/25/mysql-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
    
    <content type="html"><![CDATA[<h1 id="mysql-常用操作"><a href="#mysql-常用操作" class="headerlink" title="mysql 常用操作"></a>mysql 常用操作</h1><p>记录一些mysql 基本操作的命令，这是少接触，怕用到的那一部分。有需要了，还得回这里看看，以备万一，哪天有时间了，也可以过来学学。这就样。</p><span id="more"></span><h2 id="mysql基本常用命令汇总"><a href="#mysql基本常用命令汇总" class="headerlink" title="mysql基本常用命令汇总"></a>mysql基本常用命令汇总</h2><h3 id="常用总结"><a href="#常用总结" class="headerlink" title="常用总结"></a>常用总结</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">creat database name; 创建数据库<br>use database_name; 选择数据库<br>drop database db_name; 直接删除数据库，不提醒<br>show tables; 显示表<br>describe table_name; 表的详细描述<br>select 中加上distinct去除重复字段<br><br>显示当前mysql版本和当前日期<br><br>select version(), current_date;<br><br>修改用户密码，如root<br><br>mysql&gt; update user <span class="hljs-built_in">set</span> authentication_string=password(<span class="hljs-string">&#x27;new_password&#x27;</span>) WHERE user=<span class="hljs-string">&#x27;root&#x27;</span>;<br>Query OK, <span class="hljs-comment">### row affected, ### warning (0.08 sec)</span><br>Rows matched: <span class="hljs-comment">###  Changed: ###  Warnings: 1</span><br><br>创建用户<br><br><br>CREATE USER <span class="hljs-string">&#x27;your_name&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="hljs-string">&#x27;password&#x27;</span>;<br><br>用户授权<br><br>GRANT ALL PRIVILEGES ON *.* TO <span class="hljs-string">&#x27;your_name&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> WITH GRANT OPTION<br><br>取消授权<br><br>mysql&gt; select user, host from mysql.user;  查看已经存在的用户<br>mysql&gt; revoke all privileges on *.* from <span class="hljs-built_in">test</span>@localhost; 取消授权<br>mysql&gt; delete from user <span class="hljs-built_in">where</span> user=<span class="hljs-string">&quot;test&quot;</span> and host=<span class="hljs-string">&quot;localhost&quot;</span>; 删除用户<br>mysql&gt; delete from user <span class="hljs-built_in">where</span> user=<span class="hljs-string">&quot;test&quot;</span> and host=<span class="hljs-string">&quot;localhost&quot;</span>;<br></code></pre></td></tr></table></figure><h2 id="创建和操作表"><a href="#创建和操作表" class="headerlink" title="创建和操作表"></a>创建和操作表</h2><h3 id="创建表语法"><a href="#创建表语法" class="headerlink" title="创建表语法"></a>创建表语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">create table &lt;表名&gt;(<br>    &lt;列名<span class="hljs-comment">###  &lt;数据类型&gt; &lt;约束条件&gt;</span><br>    &lt;列名<span class="hljs-comment">###  &lt;数据类型&gt; &lt;约束条件&gt;</span><br>    &lt;列名<span class="hljs-comment">###  &lt;数据类型&gt; &lt;约束条件&gt;</span><br>    .....<br>);<br></code></pre></td></tr></table></figure><h3 id="NULL值"><a href="#NULL值" class="headerlink" title="NULL值"></a>NULL值</h3><p>在定义表时，可以在约束条件中指定该列允许或不允许NULL值。如果指定不允许NULL值，则在插入数据时如果为NULL就会报错。</p><h3 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h3><p>可以在定义表时使用默认值，使用关键词default &lt;值&gt;进行设定，如果在插入数据时，没有值插入，则该列会插入默认值。</p><h3 id="更新表"><a href="#更新表" class="headerlink" title="更新表"></a>更新表</h3><p>更新表使用alter table语句，我们可以进行如下操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">alter table &lt;表名&gt; add column &lt;列名&gt; &lt;数据类型&gt;;   //增加新列<br>alter table &lt;表名&gt; drop column &lt;列名&gt;;  //删除列<br></code></pre></td></tr></table></figure><h3 id="重命名表"><a href="#重命名表" class="headerlink" title="重命名表"></a>重命名表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rename table &lt;旧表名&gt; to &lt;新表名&gt;;<br></code></pre></td></tr></table></figure><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">drop table &lt;表名&gt;;<br></code></pre></td></tr></table></figure><h2 id="检索数据"><a href="#检索数据" class="headerlink" title="检索数据"></a>检索数据</h2><h3 id="检索单列"><a href="#检索单列" class="headerlink" title="检索单列"></a>检索单列</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">select &lt;列名&gt; from &lt;表名&gt;;<br></code></pre></td></tr></table></figure><h3 id="检索多列"><a href="#检索多列" class="headerlink" title="检索多列"></a>检索多列</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">select &lt;列名1&gt;, &lt;列名2&gt;, ... from &lt;表名&gt;;<br></code></pre></td></tr></table></figure><h3 id="检索不同值"><a href="#检索不同值" class="headerlink" title="检索不同值"></a>检索不同值</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">select distinct(&lt;列名&gt;) from &lt;表名&gt;;<br></code></pre></td></tr></table></figure><h3 id="限制结果"><a href="#限制结果" class="headerlink" title="限制结果"></a>限制结果</h3><p>在mysql中，如果我们需要限制结果输出的条数，可以使用limit &lt;数字&gt;来表示限制的行数。</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注释     //单行注释</span><br>/* 多行注释<br>   多行注释<br>*/<br></code></pre></td></tr></table></figure><h2 id="排序检索数据"><a href="#排序检索数据" class="headerlink" title="排序检索数据"></a>排序检索数据</h2><p>有时我们需要对检索出来的数据进行排序，这时我们使用如下语句进行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">order by &lt;列名&gt; asc/desc;<br></code></pre></td></tr></table></figure><p>asc为升序排序，也是mysql中默认的排序方式；desc表示按照降序排序。此外根据需要我们也可以对多列进行排序，如下代码所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">order by &lt;列名1&gt; &lt;排序方法&gt;, &lt;列名2&gt; &lt;排序方法&gt;....;<br></code></pre></td></tr></table></figure><p>值得注意的是，<strong>order by 语句通常位于查询语句的最后面</strong>。后面会具体介绍查询语句的完整构成。</p><h2 id="过滤数据"><a href="#过滤数据" class="headerlink" title="过滤数据"></a>过滤数据</h2><h3 id="使用where子句"><a href="#使用where子句" class="headerlink" title="使用where子句"></a>使用where子句</h3><p>在sql中，我们使用where子名来对查询出的结果进行过滤，得到我们所需要的数据。它的格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">select &lt;列名&gt; from &lt;表名&gt;<br><span class="hljs-built_in">where</span> &lt;过滤条件&gt;;<br></code></pre></td></tr></table></figure><p>过滤条件有多个时，我们可以使用and或or来进行多个条件的罗列。值得注意的是，当有多个过滤条件时，<strong>and的优先级会高于or</strong>，这也许会导致一些逻辑错误，需要注意。</p><h3 id="where子句操作符"><a href="#where子句操作符" class="headerlink" title="where子句操作符"></a>where子句操作符</h3><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>&#x3D;</td><td>等于</td></tr><tr><td>&lt;&gt;</td><td>不等于。<strong>注释</strong>：在SQL的一些版本中，该操作符可以被写成!&#x3D;</td></tr></tbody></table><blockquote><p>|大于<br>&lt;|小于<br>&#x3D;|大于等于<br>&lt;&#x3D;|小于等于<br>BETWEEN|在某个范围内<br>LINK|搜索某种模式<br>IN|指定针对某个列的多个可能值</p></blockquote><p>值得注意的是，在判断某个值是否为空值时，应该使用is null或is not null来判断，而不是使用”&#x3D; null”或”!&#x3D; null”。</p><h3 id="使用通配符进行过滤"><a href="#使用通配符进行过滤" class="headerlink" title="使用通配符进行过滤"></a>使用通配符进行过滤</h3><p>在使用通配符进行过滤进，我们使用like操作符进行。</p><p>通配符主要包括两个，它们分别为百分号’%’和下划线’<em>‘，其中’%’表示使用长度的字符串，而下划线’</em>‘只表示一个字符；需要注意的是，’%’不仅可以表示一个或多个字符，还可以表示0个字符。</p><h2 id="创建计算字段"><a href="#创建计算字段" class="headerlink" title="创建计算字段"></a>创建计算字段</h2><h3 id="计算字段"><a href="#计算字段" class="headerlink" title="计算字段"></a>计算字段</h3><p>存储在数据库中的数据一般不是应用程序所需要的格式。</p><p>我们需要直接从数据库中检索出转化、计算或格式化过的数据；而不是检索出数据，然后再在客户机应用改程序或报告程序中重新格式化。</p><p>只有数据库知道select语句中哪些列是实际的表列，哪些列是计算字段。从客户机（应用程序）的角度来看，计算字段的数据是以与其它列的数据相同的方式返回的。</p><h3 id="拼接字段"><a href="#拼接字段" class="headerlink" title="拼接字段"></a>拼接字段</h3><p>在mysql中，我们可以使用concat函数对字段进行拼接，格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">concat(str1, str2, str3.....);<br></code></pre></td></tr></table></figure><p>对于字符串中存在的空格，我们可以用字符串处理函数RTRIM()、LTRIM()、TRIM()来进行处理。</p><h3 id="使用别名"><a href="#使用别名" class="headerlink" title="使用别名"></a>使用别名</h3><p>我们可以用关键字as来给我们的列起一个别名。格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">select &lt;列名&gt; as &lt;别名&gt; from &lt;表名&gt;;<br></code></pre></td></tr></table></figure><h2 id="使用函数处理数据"><a href="#使用函数处理数据" class="headerlink" title="使用函数处理数据"></a>使用函数处理数据</h2><p>函数的可移植性是很可的，而且使用函数可以很方便的对数据进行处理。</p><p>mysql函数主要有甲种</p><ul><li>文本函数</li><li>数值函数</li><li>时间与日期函数</li><li>系统函数</li></ul><p>下面介绍常用的一些函数</p><h3 id="文本函数"><a href="#文本函数" class="headerlink" title="文本函数"></a>文本函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">left(s, n)      //返回字符串左边的n个字符<br>right(s, n)     //返回字符串右边的n个字符<br>trim(s)         //去掉字符串s的空格<br>ltrim(s)        //去掉字符中左边的空格<br>rtrim(s)        //去掉字符串右边的空格<br>length(s)       //计算字符串的长度<br>lower(s)        //将字符串的所有字符变成小写<br>upper(s)        //将字符串的所有字符变成大写<br></code></pre></td></tr></table></figure><h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">abs(x)      //绝对值<br>cos(x)<br>sin(x)<br>tan(x)<br>acos(x) asin(x) atan(x)     //三角函数<br>ceil(x)        //返回大于或等于X的最小整数<br>floor(x)       //舍去x的小数部分，只保留整数部分，并且不进行四舍五入<br>pi()           //返回圆周率<br>sqrt(x)        //平方根<br>pow(x,y)       //x的y次方<br>exp(x)         //返回e的x次方<br>rand()         //返回0－1的随机数<br>round(x,y)     //返回x的值小数点后面的第y位，进行四舍五入<br><span class="hljs-built_in">truncate</span>(x,y)  //返回x的值小数点后面的第y位，不进行四舍五入<br></code></pre></td></tr></table></figure><h3 id="日期与时间函数"><a href="#日期与时间函数" class="headerlink" title="日期与时间函数"></a>日期与时间函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">current_date()      //返回当前日期<br>current_time()      //返回当前时间<br>current_timestap()/now()        //返回当前日期和时间<br><span class="hljs-built_in">date</span>()              //从日期或日期时间中撮日期值<br>year() month() day() hour() minute()<br>date_format(d, f)   //以指定格式显示日期<br>datediff()<br>timediff()<br>timestapdiff()<br></code></pre></td></tr></table></figure><h3 id="汇总数据"><a href="#汇总数据" class="headerlink" title="汇总数据"></a>汇总数据</h3><p><strong>聚合函数</strong>：聚合函数就是用来数据汇总的一类函数。以下五个险函数务必牢记。它们通常和分级数据结合使用：</p><ul><li>avg()</li><li>min()</li><li>max()</li><li>count()</li><li>sum()</li></ul><p>需要注意的是，聚合函数均不会处理NULL值</p><h2 id="分级数据"><a href="#分级数据" class="headerlink" title="分级数据"></a>分级数据</h2><h3 id="创建分组"><a href="#创建分组" class="headerlink" title="创建分组"></a>创建分组</h3><p>创建分组使用group by子句，格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">select &lt;列名&gt; from &lt;表名&gt;<br><span class="hljs-built_in">where</span> &lt;过滤条件&gt;<br>group by &lt;列名&gt;<br>having &lt;过滤条件&gt;<br>order by &lt;列名&gt; &lt;排序方式&gt;<br></code></pre></td></tr></table></figure><p>其实上面的格式也是select语句完整格式。</p><h3 id="过滤分组"><a href="#过滤分组" class="headerlink" title="过滤分组"></a>过滤分组</h3><p>过滤分组倩having，牢记<strong>where是行级过滤，having是组级过滤</strong></p><h2 id="使用子查询"><a href="#使用子查询" class="headerlink" title="使用子查询"></a>使用子查询</h2><p>子查询也就是select语句的嵌套，有了子查询我们就可以进行复杂的查询。</p><p>子查询返回的一张表，所以基位置也比较灵活，可以位于rom后面，也可以位于where后面。</p><p>子查询也可以说是<strong>一个一次性的视图</strong>。</p><p>在执行顺序上，先执行子查询，再执行外层的查询。</p><p>牢记：<strong>where子句中不能使用聚合函数</strong></p><h2 id="连接表"><a href="#连接表" class="headerlink" title="连接表"></a>连接表</h2><p>表的连接主要分为以下几种：</p><ul><li>内连接</li><li>外连接（左连接、右连接）</li><li>自连接</li></ul><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><p>语法格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">SELECT 查询字段 FROM 表1 [as] 别名 [INNER] JOIN 表2 [as] 别名 ON 表1.关系字段 ＝ 表2.关系字段<br></code></pre></td></tr></table></figure><p>内连接就是两个表的次部分。</p><h3 id="左连接"><a href="#左连接" class="headerlink" title="左连接"></a>左连接</h3><p>语法格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">SELECT 查询字段 FROM 表1 [as] 别名 LEFT JOIN 表2 [as] 别名 ON 表1.关系字段 ＝ 表2.关系字段<br></code></pre></td></tr></table></figure><p>左连接就是左边表的记录要全部显示出来，右右只有和械表匹配到的记录才进行显示。</p><h3 id="右连接"><a href="#右连接" class="headerlink" title="右连接"></a>右连接</h3><p>和左连接相反。</p><h3 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h3><p>就是表一张表看成两张表，进行自连接往往是一张表的某些列间存在逻辑关系。</p><h2 id="组合查询"><a href="#组合查询" class="headerlink" title="组合查询"></a>组合查询</h2><h3 id="创建组合查询"><a href="#创建组合查询" class="headerlink" title="创建组合查询"></a>创建组合查询</h3><p>创建组合查询时我们使用UNION将两个或多个select语句查询的结果组合在一起形成一个表。</p><p>需要不同的select语句返回相同数量的列且对应列的数据类型相同，事实上应该是意义都一样才合理。</p><h3 id="union与union-all"><a href="#union与union-all" class="headerlink" title="union与union all"></a>union与union all</h3><p>对于组合查询结果的排序只需要使用一个order by子名句，放在最后一个select语句的后面即可。</p><h2 id="插入、更新删除数据"><a href="#插入、更新删除数据" class="headerlink" title="插入、更新删除数据"></a>插入、更新删除数据</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">insert into &lt;表名&gt;(列名1，列名2，列名3...) values (数据...);<br></code></pre></td></tr></table></figure><p>虽然表名后面的列名表不是严格要求的，但是这样会更安全。如果不写出列名，则需要严格按照表的定义插入数据。</p><p>如果我们只需要插入一行中的部分列，那么列出列名就变得必须了。</p><h4 id="插入检索出的数据"><a href="#插入检索出的数据" class="headerlink" title="插入检索出的数据"></a>插入检索出的数据</h4><p>使用insert …select 语句进行。以下是格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">insert into &lt;表名&gt;(列名表)<br>select &lt;列名表&gt; from &lt;表名&gt;;<br></code></pre></td></tr></table></figure><h4 id="复制表"><a href="#复制表" class="headerlink" title="复制表"></a>复制表</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">create table copytable as <br>select * from &lt;表名&gt;;<br></code></pre></td></tr></table></figure><h4 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">update &lt;表名&gt;<br><span class="hljs-built_in">set</span> &lt;列名&gt; = ...<br><span class="hljs-built_in">where</span> &lt;过滤条件&gt;;<br></code></pre></td></tr></table></figure><p>一定切记不要忘了过滤条件，否则将会对所有的行的数据进行更新。</p><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">delect from &lt;表名&gt; <span class="hljs-built_in">where</span> &lt;过滤条件&gt;;<br></code></pre></td></tr></table></figure><p>如果要删除某行中某列的元素，可以将其值更新为NULL。</p><h2 id="使用视图"><a href="#使用视图" class="headerlink" title="使用视图"></a>使用视图</h2><p>视图是一张虚表，它并不在座实际的数据，存储的只是select语句。</p><p>使用视力有如下的优点</p><ul><li>提高sql语句的重用性</li><li>保证了数据的安全性</li><li>大大简化了sql语句</li></ul><h3 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">create view &lt;视图名&gt; as &lt;select 语句&gt;;<br></code></pre></td></tr></table></figure><h3 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">drop view &lt;视图名&gt;;<br></code></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h3 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h3><p>需要在同一个处理单元中执行的一系列更新处理的集合。一个事务中包含了多少个更新处理或者包含了哪些处理，在DBMS中没有固定的标准，而是根据用户的要求决定的。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">start tyransaction;<br>DML 语句1；<br>DML 语句2；<br>DML 语句3；<br>...<br>ROLLBACK／COMMIT；<br></code></pre></td></tr></table></figure><h3 id="理解事务"><a href="#理解事务" class="headerlink" title="理解事务"></a>理解事务</h3><p>事务其实很好理解，它将一系列操作放在一个块中形成一个代码块，这个代码块要执行就全部执行，要么就不执行。</p><p>拿银行转账为例，转账过程为，我的账户金额减少－－》对方账户金额增加－－》交易完毕。</p><p>如果我的账户金额减少后出现了故障导致对方账户金额没有增加，那么这肯定是不被允许的。所以这个转账过程中的每一步都必须完整的执行。</p><p>ROLLBACK就是在DML语句出现故障时，来便利数据库回滚到执行操作前的状态。而COMMIT则是所有DML正确执行后才执行，告诉系统这个事务正常完成了，系统可以进入下一个新的状态了。</p><h2 id="补充知识点"><a href="#补充知识点" class="headerlink" title="补充知识点"></a>补充知识点</h2><h3 id="case-when-语句"><a href="#case-when-语句" class="headerlink" title="case when 语句"></a>case when 语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">case</span> when &lt;表达式1&gt; <span class="hljs-keyword">then</span> &lt;表达式&gt;<br>     when &lt;表达式2&gt; them &lt;表达式&gt;<br>     ...<br>     <span class="hljs-keyword">else</span> &lt;表达式&gt;<br>end<br></code></pre></td></tr></table></figure><h3 id="sql语句及种类"><a href="#sql语句及种类" class="headerlink" title="sql语句及种类"></a>sql语句及种类</h3><p>这是sql的基础知识：</p><p>－ DDL：数据定义语言，用来创建、删除存储数据的数据训以及数据库中的表的对象，包含的指令有：CREATE、DROOP、ALTER<br>－ DML：数据操纵语言，用来查询或者变更表中的记录。包含的指令有：SELECT、INSERT、UPDATE、DELETE<br>－ DCL：数据控制语言，用来确认或者取消对数据库中的数据进行的变量。包含的指令有：COMMIT、ROLLBACK、GRANT、REVOKE</p><h3 id="exists谓词"><a href="#exists谓词" class="headerlink" title="exists谓词"></a>exists谓词</h3><p>在sql语言中，exists(存在)谓词是一个非常重要的查询关键词。</p><p>exists代表<strong>存在</strong>量词。带有exists谓词的子查询不返回任何数据，只产生逻辑真值“true”或逻辑假值“flase”。</p>]]></content>
    
    
    <categories>
      
      <category>database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>zabbix 切换国内源</title>
    <link href="/2021/11/16/zabbix-%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90/"/>
    <url>/2021/11/16/zabbix-%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<h1 id="zabbix-切换国内源"><a href="#zabbix-切换国内源" class="headerlink" title="zabbix 切换国内源"></a>zabbix 切换国内源</h1><p>zabbix安装完成后，默认的官方源，可能存在无法请求的问题，配置国内源，如阿里源，操作记录备忘。</p><span id="more"></span><h2 id="备份官方源"><a href="#备份官方源" class="headerlink" title="备份官方源"></a>备份官方源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> zabbix.repo zabbix.repo_backup<br></code></pre></td></tr></table></figure><h2 id="换阿里源"><a href="#换阿里源" class="headerlink" title="换阿里源"></a>换阿里源</h2><p>vim zabbix.repo</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">[zabbix]<br>name=Zabbix Official Repository - \<span class="hljs-variable">$basearch</span><br>baseurl=https://mirrors.aliyun.com/zabbix/zabbix/3.0/rhel/7/\<span class="hljs-variable">$basearch</span>/<br>enabled=1<br>gpgcheck=1<br>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX-A14FE591<br><br>[zabbix-non-supported]<br>name=Zabbix Official Repository non-supported - \<span class="hljs-variable">$basearch</span><br>baseurl=https://mirrors.aliyun.com/zabbix/non-supported/rhel/7/\<span class="hljs-variable">$basearch</span>/<br>enabled=1<br>gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-ZABBIX<br>gpgcheck=1<br></code></pre></td></tr></table></figure><p>yum makecache</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zabbix</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux 查看、修改用户密码过期时间</title>
    <link href="/2021/02/26/linux-%E6%9F%A5%E7%9C%8B%E3%80%81%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4/"/>
    <url>/2021/02/26/linux-%E6%9F%A5%E7%9C%8B%E3%80%81%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%AF%86%E7%A0%81%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4/</url>
    
    <content type="html"><![CDATA[<h2 id="linux查看、修改密码过期时间"><a href="#linux查看、修改密码过期时间" class="headerlink" title="linux查看、修改密码过期时间"></a>linux查看、修改密码过期时间</h2><p>有时候，我们需要给linux开一临时账户，以提供他人完成一些操作，可以账户设置过期时间，以保证未授权的访问。</p><span id="more"></span><h2 id="操作示例"><a href="#操作示例" class="headerlink" title="操作示例"></a>操作示例</h2><p>示例如下：</p><blockquote><p>ssh <a href="mailto:&#x75;&#115;&#101;&#x72;&#x31;&#64;&#x31;&#57;&#x32;&#46;&#49;&#54;&#56;&#x2e;&#48;&#x2e;&#x32;&#x32;">&#x75;&#115;&#101;&#x72;&#x31;&#64;&#x31;&#57;&#x32;&#46;&#49;&#54;&#56;&#x2e;&#48;&#x2e;&#x32;&#x32;</a><br><a href="mailto:&#117;&#115;&#x65;&#x72;&#x31;&#64;&#49;&#57;&#x32;&#46;&#49;&#x36;&#56;&#46;&#x30;&#46;&#50;&#x32;">&#117;&#115;&#x65;&#x72;&#x31;&#64;&#49;&#57;&#x32;&#46;&#49;&#x36;&#56;&#46;&#x30;&#46;&#50;&#x32;</a>‘s password:<br>Your account has expired; please contact your system administrator Connection closed by 192.168.0.22 port 22</p></blockquote><p>设置新用户密码过期时间：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">passwd -x 90 euser -&gt; 执行操作后，euser用户的密码时间改为90天有效期<br></code></pre></td></tr></table></figure><p>查看该user1用户过期信息使用chage命令</p><p>chage的参数包括<br>-m 密码可更改的最小天数。为零时代表任何时候都可以更改密码。<br>-M 密码保持有效的最大天数。<br>-W 用户密码到期前，提前收到警告信息的天数。<br>-E 帐号到期的日期。过了这天，此帐号将不可用。<br>-d 上一次更改的日期<br>-i 停滞时期。如果一个密码已过期这些天，那么此帐号将不可用。<br>-l 例出当前的设置。由非特权用户来确定他们的密码或帐号何时过期。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">chage -l user1<br>最近一次密码修改时间：2月 23, 2021<br>密码过期时间：从不<br>密码失效时间：从不<br>帐户过期时间：2月 25, 2021<br>两次改变密码之间相距的最小天数：0<br>两次改变密码之间相距的最大天数：99999<br>在密码过期之前警告的天数：7<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chage -M 99999 user1<br></code></pre></td></tr></table></figure><p>设置用户euser密码永不过期。</p><p>设置用户user1两天后过期</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chage -E 60 user1<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>user</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>zabbix_告警配置</title>
    <link href="/2021/02/24/zabbix-%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/"/>
    <url>/2021/02/24/zabbix-%E5%91%8A%E8%AD%A6%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="zabbix告警配置"><a href="#zabbix告警配置" class="headerlink" title="zabbix告警配置"></a>zabbix告警配置</h1><p>常用的zabbix告警配置示例，记录备忘。</p><span id="more"></span><h2 id="告警配置"><a href="#告警配置" class="headerlink" title="告警配置"></a>告警配置</h2><p>故障{TRIGGER.STATUS},服务器名:{HOSTNAME1}发生: {TRIGGER.NAME}故障!</p><p>告警主机:{HOSTNAME}<br>告警主机IP地址:{HOST.IP}<br>告警时间:{EVENT.DATE} {EVENT.TIME}<br>告警等级:{TRIGGER.SEVERITY}<br>告警信息: {TRIGGER.NAME}<br>告警项目:{TRIGGER.KEY1}<br>问题详情:{ITEM.NAME}:{ITEM.VALUE}<br>当前状态:{TRIGGER.STATUS}:{ITEM.VALUE1}<br>事件ID：{EVENT.ID}</p><p>恢复{TRIGGER.STATUS}, 服务器名:{HOSTNAME1}: {TRIGGER.NAME}已恢复!</p><p>告警主机:{HOSTNAME}<br>告警主机IP地址:{HOST.IP}<br>告警时间:{EVENT.DATE} {EVENT.TIME}<br>告警等级:{TRIGGER.SEVERITY}<br>告警信息: {TRIGGER.NAME}<br>告警项目:{TRIGGER.KEY1}<br>问题详情:{ITEM.NAME}:{ITEM.VALUE}<br>当前状态:{TRIGGER.STATUS}:{ITEM.VALUE1}<br>事件ID：{EVENT.ID}</p><p>确认:{TRIGGER.NAME}</p><p>告警主机:{HOSTNAME}<br>告警主机IP地址:{HOST.IP}<br>{USER.FULLNAME} 已确认问题<br>确认时间:{ACK.DATE} {ACK.TIME}<br>确认信息:{ACK.MESSAGE}</p><p>当前问题状态: {EVENT.STATUS}</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zabbix</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>dpkg 清除已卸载程序的配置信息</title>
    <link href="/2021/02/22/dpkg-%E6%B8%85%E9%99%A4%E5%B7%B2%E5%8D%B8%E8%BD%BD%E7%A8%8B%E5%BA%8F%E7%9A%84%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF/"/>
    <url>/2021/02/22/dpkg-%E6%B8%85%E9%99%A4%E5%B7%B2%E5%8D%B8%E8%BD%BD%E7%A8%8B%E5%BA%8F%E7%9A%84%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu清除已卸载程序的配置文件"><a href="#ubuntu清除已卸载程序的配置文件" class="headerlink" title="ubuntu清除已卸载程序的配置文件"></a>ubuntu清除已卸载程序的配置文件</h1><p>ubuntu 上卸载软件后，后有一些残留的配置文件信息在电脑里面，操作清除配置文件。</p><span id="more"></span><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>1、使用dpkg -l 列出系统安装包信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">dpkg -l<br>期望状态=未知(u)/安装(i)/删除(r)/清除(p)/保持(h)<br>| 状态=未安装(n)/已安装(i)/仅存配置(c)/仅解压缩(U)/配置失败(F)/不完全安装(H)/触发器等待(W)/触发器未决(T)<br>|/ 错误?=(无)/须重装(R) (状态，错误：大写=故障)<br>||/ 名称                                          版本                                     体系结构     描述<br>+++-=============================================-========================================-============-======================================================================================<br>================<br>ii  accountsservice                               0.6.55-0ubuntu12~20.04.4                 amd64        query and manipulate user account information<br>ii  acl                                           2.2.53-6                                 amd64        access control list - utilities<br>ii  acpi-support                                  0.143                                    amd64        scripts <span class="hljs-keyword">for</span> handling many ACPI events<br>ii  acpid                                         1:2.0.32-1ubuntu1                        amd64        Advanced Configuration and Power Interface event daemon<br>ii  adb                                           1:8.1.0+r23-5ubuntu2                     amd64        Android Debug Bridge<br><span class="hljs-comment">### 示例</span><br></code></pre></td></tr></table></figure><p>2、选出已经删除的但有配置残留的包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkg -l | grep <span class="hljs-string">&quot;^rc&quot;</span><br>rc  spark-typeeasy:i386                           1.0                                      i386         Typeeasy on Deepin Wine<br>rc  wechat                                        2.0.0                                    amd64        微信<br></code></pre></td></tr></table></figure><p>卸载过的微信uos版客户端的金山打字通。</p><p>3、清除配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">dpkg -l | grep <span class="hljs-string">&quot;^rc&quot;</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span> | xargs sudo aptitude -y purge<br>[sudo] ian 的密码： <br>下列软件包将被“删除”：           <br>  spark-typeeasy:i386&#123;p&#125; wechat&#123;p&#125; <br>0 个软件包被升级，新安装 0 个，2 个将被删除， 同时 0 个将不升级。<br>需要获取 0 B 的存档。解包后将要使用 0 B。<br>(正在读取数据库 ... 系统当前共安装有 815779 个文件和目录。)<br>正在清除 wechat (2.0.0) 的配置文件 ...<br>正在清除 spark-typeeasy:i386 (1.0) 的配置文件 ...<br></code></pre></td></tr></table></figure><p>如上示例：</p><p>dpkg -l 列出所有包的状态，grep 提取开头为rc的包，awk命令打印这些包的第二个字段，即包的名字，再通过xargs命令传递到 sudo aptitude -y purge后面，purge命令会消除配置文件。-y参数自动对后面aptitude命令提示回答yes。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>dpkg</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>history 环境变量</title>
    <link href="/2021/02/22/history-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <url>/2021/02/22/history-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
    
    <content type="html"><![CDATA[<h2 id="linux-添加history-环境变量"><a href="#linux-添加history-环境变量" class="headerlink" title="linux 添加history 环境变量"></a>linux 添加history 环境变量</h2><p>在linux下，我们可以通过history命令来查看用户的历史操作记录，在未进行配置的情况下，history只能查看历史操作记录，不记录时间及用户。可以从审计的角度来做一些事情。让history日志记录更细化。</p><span id="more"></span><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>1、命令历史记录中添加时间、源、用户信息</p><p>在&#x2F;etc&#x2F;profile.d目录下创建history.sh文件,不建议直接修改profile文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># history</span><br>USER_IP=`<span class="hljs-built_in">who</span> -u am i 2&gt;/dev/null | awk <span class="hljs-string">&#x27;&#123;print $NF&#125;&#x27;</span> | sed -e <span class="hljs-string">&#x27;s/[()]//g&#x27;</span>`<br><span class="hljs-keyword">if</span> [ -z <span class="hljs-variable">$USER_IP</span> ]<br><span class="hljs-keyword">then</span><br>USER_IP=`hostname`<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">export</span> HISTTIMEFORMAT=<span class="hljs-string">&quot;[%Y.%m.%d %H:%M:%S][<span class="hljs-variable">$&#123;USER_IP&#125;</span>-<span class="hljs-variable">$&#123;LOGNAME&#125;</span>]&quot;</span><br></code></pre></td></tr></table></figure><p>2、重新加载新的环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sour /etc/profile<br></code></pre></td></tr></table></figure><p>更新完成后，执行history命令，即可看到history命令输出日志、时间、源IP、用户，以及运行的命令信息。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>history</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cisco 恢复 enable 密码</title>
    <link href="/2021/02/01/cisco-%E6%81%A2%E5%A4%8D-enable-%E5%AF%86%E7%A0%81/"/>
    <url>/2021/02/01/cisco-%E6%81%A2%E5%A4%8D-enable-%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="cisco-4507-enable-密码恢复"><a href="#cisco-4507-enable-密码恢复" class="headerlink" title="cisco 4507 enable 密码恢复"></a>cisco 4507 enable 密码恢复</h1><p>公司项目上的一个问题，一台cisco 4507的交换机，被其它维护单位更改了enable密码，后面问到是否有更改密码，对方坚持说没有改过。着急配置，没办法只能着手恢复enable密码。操作记录备忘。</p><span id="more"></span><p><strong>Tips:恢复enable密码的操作不会丢失配置信息。建议通过tftp备份配置后操作。</strong></p><h2 id="1、重启设备加电"><a href="#1、重启设备加电" class="headerlink" title="1、重启设备加电"></a>1、重启设备加电</h2><p>重启后进入引导界面，5秒内按住<strong>Ctrl-C</strong>键，防止自动引导，进入ROM监视提示模式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs bash">!--- Here, you power cycle the switch.<br><br>********************************************************** <br> *                                                        * <br> * Welcome to ROM Monitor <span class="hljs-keyword">for</span> WS-X4014 System.            * <br> * Copyright (c) 1999-2000, 2001 by Cisco Systems, Inc.   * <br> * All rights reserved.                                   * <br> *                                                        * <br> **********************************************************<br> <br> ROM Monitor Program Version 12.1(10r)EY(1.21) <br><br> Board <span class="hljs-built_in">type</span> 1, Board revision 7<br> Swamp FPGA revision 16, Dagobah FPGA revision 43 <br> <br> Timer interrupt <span class="hljs-built_in">test</span> passed.<br><br> MAC Address  : 00-02-b9-83-af-fe <br> IP Address   : 172.16.84.122 <br> Netmask      : 255.255.255.0 <br> Gateway      : 172.16.84.1 <br> TftpServer   : Not <span class="hljs-built_in">set</span>. <br> Main Memory  : 256 MBytes<br><br><br> ***** The system will autoboot <span class="hljs-keyword">in</span> 5 seconds *****<br><br><br> Type control-C to prevent autobooting. <br><br>!--- At this point, press Ctrl-C.<br><br>Autoboot cancelled......... please <span class="hljs-built_in">wait</span>!!!<br>Autoboot cancelled......... please <span class="hljs-built_in">wait</span>!!!<br>rommon 1 &gt; [interrupt]  <br><br>!--- The module ended <span class="hljs-keyword">in</span> the ROMmon.<br><br>rommon 1 &gt; [interrupt]<br></code></pre></td></tr></table></figure><h2 id="2、在common模式下使用confreg配置"><a href="#2、在common模式下使用confreg配置" class="headerlink" title="2、在common模式下使用confreg配置"></a>2、在common模式下使用confreg配置</h2><p>使重新启动从新的寄存器中加载配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs bash">rommon 1 &gt; <span class="hljs-built_in">set</span><br>rommon 1 &gt; confreg<br><br> Configuration Summary : <br> =&gt; load ROM after netboot fails<br> =&gt; console baud: 9600<br> =&gt; autoboot from: commands specified <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;BOOT&#x27;</span> environment variable<br><br> <span class="hljs-keyword">do</span> you wish to change the configuration? y/n  [n]:  **y**<br> <span class="hljs-built_in">enable</span>  <span class="hljs-string">&quot;diagnostic mode&quot;</span>? y/n  [n]:  **n**<br> <span class="hljs-built_in">enable</span>  <span class="hljs-string">&quot;use net in IP bcast address&quot;</span>? y/n  [n]:  **n**<br> <span class="hljs-built_in">disable</span> <span class="hljs-string">&quot;load ROM after netboot fails&quot;</span>? y/n  [n]:  **n**<br> <span class="hljs-built_in">enable</span>  <span class="hljs-string">&quot;use all zero broadcast&quot;</span>? y/n  [n]:  **n**<br> <span class="hljs-built_in">enable</span>  <span class="hljs-string">&quot;break/abort has effect&quot;</span>? y/n  [n]:  **n**<br> <span class="hljs-built_in">enable</span>  <span class="hljs-string">&quot;ignore system config info&quot;</span>? y/n  [n]:  **y**<br><br> change console baud rate? y/n  [n]:  **n**<br><br> change the boot characteristics? y/n  [n]:  **n**<br><br> Configuration Summary : <br> =&gt; load ROM after netboot fails<br> =&gt; ignore system config info<br> =&gt; console baud: 9600<br> =&gt; autoboot from: commands specified <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;BOOT&#x27;</span> environment variable<br><br> <span class="hljs-keyword">do</span> you wish to save this configuration? y/n  [n]:  y<br> You must reset or power cycle <span class="hljs-keyword">for</span> new configuration to take effect<br>Note: You can also use the confreg 0x2142 <span class="hljs-built_in">command</span> at the ROMmon prompt <span class="hljs-keyword">in</span> order to <span class="hljs-built_in">set</span> the configuration register value to bypass the startup configuration stored <span class="hljs-keyword">in</span> NVRAM.<br><br>rommon 1 &gt;confreg 0x2142  <span class="hljs-comment">#记住这里寄存器的位置</span><br>You must reset or power cycle <span class="hljs-keyword">for</span> the new configuration to take effect.<br></code></pre></td></tr></table></figure><h2 id="3、重启设备"><a href="#3、重启设备" class="headerlink" title="3、重启设备"></a>3、重启设备</h2><p>使用reset命令重新引导模块，因为第二步中配置忽略系统配置信息，这里将不会引导已保存的配置信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs bash"><br>rommon 2 &gt; reset<br><br>Resetting .......<br><br>rommon 3 &gt;<br><br> ********************************************************** <br> *                                                        * <br> * Welcome to ROM Monitor <span class="hljs-keyword">for</span> WS-X4014 System.            * <br> * Copyright (c) 1999-2000, 2001 by Cisco Systems, Inc.   * <br> * All rights reserved.                                   * <br> *                                                        * <br> **********************************************************<br><br>!--- Output suppressed.<br><br>Press RETURN to get started! <br><br>!--- Press Return.<br><br>00:00:21: %SYS-5-RESTART: System restarted --<br>Cisco Internetwork Operating System Software <br>IOS (tm) Catalyst 4000 L3 Switch Software (cat4000-IS-M), <br>   Version 12.1(8a)EW,  RELEASE SOFTWARE (fc1)<br>TAC Support: http://www.cisco.com/tac<br>Copyright (c) 1986-2002 by cisco Systems, Inc.<br>Compiled Thu 24-Jan-02 17:34 by ccai<br>00:00:21: %SNMP-5-COLDSTART: SNMP agent on host Switch <br>   is undergoing a cold start<br>Switch&gt;<br></code></pre></td></tr></table></figure><h2 id="4、加载"><a href="#4、加载" class="headerlink" title="4、加载"></a>4、加载</h2><p>此值使设备从Flash启动，而无需加载已保存的配置。在Switch提示符下发出enable命令进入启用模式。然后，使用show version命令以检查配置寄存器值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash">Switch&gt; <span class="hljs-built_in">enable</span><br>Switch<span class="hljs-comment">#show version</span><br>Cisco Internetwork Operating System Software <br>IOS (TM) Catalyst 4000 L3 Switch Software (cat4000-IS-M),<br>   Version 12.1(8a)EW,  RELEASE SOFTWARE (fc1)<br>TAC Support: http://www.cisco.com/tac<br>Copyright (c) 1986-2002 by cisco Systems, Inc.<br>Compiled Thu 24-Jan-02 17:34 by ccai<br>Image text-base: 0x00000000, data-base: 0x00AA2B8C<br><br>ROM: 12.1(10r)EY(1.21)<br>Switch <span class="hljs-built_in">uptime</span> is 5 minutes<br>System returned to ROM by reload<br>Running default software<br><br>cisco WS-C4006 (MPC8245) processor (revision 7) with 262144K bytes of memory.<br>Processor board ID FOX04183666<br>Last reset from Reload<br>32 Gigabit Ethernet/IEEE 802.3 interface(s)<br>467K bytes of non-volatile configuration memory.<br><br>Configuration register is 0x2142  <span class="hljs-comment">#查看加载的寄存器地址</span><br><br>Switch<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h2 id="5、将配置恢复到内存中"><a href="#5、将配置恢复到内存中" class="headerlink" title="5、将配置恢复到内存中"></a>5、将配置恢复到内存中</h2><p>使用configure memory命令或copy startup-config running-config命令将NVRAM复制到内存中。<br>请勿使用configure terminal命令，该命令显示模块的默认配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">Switch<span class="hljs-comment">#configure memory</span><br><br>Uncompressed configuration from 1307 bytes to 3014 bytes<br>Switch<span class="hljs-comment">#</span><br>00:13:52: %SYS-5-CONFIG_I: Configured from memory by console<br>c-4006-SUPIII<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><h2 id="6、检查接口状态"><a href="#6、检查接口状态" class="headerlink" title="6、检查接口状态"></a>6、检查接口状态</h2><p>使用show ip interface brief命令以确保之前使用的接口显示“ up up ”状态。<br>如果在密码恢复之前使用的任何接口显示“ down ”，请在该接口上发出no shutdown命令以启动接口。</p><h2 id="7、检查配置文件"><a href="#7、检查配置文件" class="headerlink" title="7、检查配置文件"></a>7、检查配置文件</h2><p>使用write terminal命令和show running-config命令检查配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash">c-4006-SUPIII<span class="hljs-comment">#show running-config </span><br>Building configuration...<br><br>Current configuration : 3014 bytes<br>!<br>version 12.1<br>no service pad<br>service timestamps debug <span class="hljs-built_in">uptime</span><br>service timestamps <span class="hljs-built_in">log</span> <span class="hljs-built_in">uptime</span><br>no service password-encryption<br>service compress-config<br>!<br>hostname c-4006-SUPIII<br>!<br>boot system flash bootflash:<br>!<br>vtp mode transparent<br><br>!--- Output suppressed.<br><br>line con 0<br> stopbits 1<br>line vty 0 4<br> login<br>!<br>end<br><br>c-4006-SUPIII<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>现在可以更改密码了。</p><h2 id="更改密码"><a href="#更改密码" class="headerlink" title="更改密码"></a>更改密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">c-4006-SUPIII<span class="hljs-comment">#configure terminal </span><br>Enter configuration commands, one per line.  End with CNTL/Z.<br>c-4006-SUPIII(config)<span class="hljs-comment">#no enable secret  #删除旧密码</span><br><br>!--- This step is necessary <span class="hljs-keyword">if</span> the switch had an <span class="hljs-built_in">enable</span> !--- secret password.<br><br><br>c-4006-SUPIII(config)<span class="hljs-comment">#enable secret &lt; password &gt;  设置新密码</span><br>[Choose a strong password with at least one capital letter,<br> one number, and one special character.]<br><br>!--- This <span class="hljs-built_in">command</span> sets the new password.<br></code></pre></td></tr></table></figure><h2 id="确保将配置寄存器的值改回0x2102"><a href="#确保将配置寄存器的值改回0x2102" class="headerlink" title="确保将配置寄存器的值改回0x2102"></a>确保将配置寄存器的值改回0x2102</h2><p>在config模式下更改寄存器的值，并查看下一次启动引导寄存器位置是否正确。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash">c-4006-SUPIII(config)<span class="hljs-comment">#config-register 0x2102</span><br>c-4006-SUPIII(config)<span class="hljs-comment"># ^Z</span><br>c-4006-SUPIII<span class="hljs-comment">#</span><br>00:19:01: %SYS-5-CONFIG_I: Configured from console by console<br>c-4006-SUPIII<span class="hljs-comment">#write memory </span><br><br>!--- This step saves the configuration.<br><br>Building configuration...<br>Compressed configuration from 3061 bytes to 1365 bytes[OK]<br>c-4006-SUPIII<span class="hljs-comment">#show version </span><br><br>!--- This step verifies the value change.<br><br>Cisco Internetwork Operating System Software <br>IOS (TM) Catalyst 4000 L3 Switch Software (cat4000-IS-M), <br>Version 12.1(8a)EW,  RELEASE SOFTWARE (fc1)<br>TAC Support: http://www.cisco.com/tac<br>Copyright (c) 1986-2002 by cisco Systems, Inc.<br>Compiled Thu 24-Jan-02 17:34 by ccai<br>Image text-base: 0x00000000, database: 0x00AA2B8C<br><br>ROM: 12.1(10r)EY(1.21)<br>c-4006-SUPIII <span class="hljs-built_in">uptime</span> is 20 minutes<br>System returned to ROM by reload<br>Running default software<br><br>cisco WS-C4006 (MPC8245) processor (revision 7) with 262144K bytes of memory.<br>Processor board ID FOX04183666<br>Last reset from Reload<br>32 Gigabit Ethernet/IEEE 802.3 interface(s)<br>467K bytes of nonvolatile configuration memory.<br><br>Configuration register is 0x2142 (will be 0x2102 at next reload)<br><br>c-4006-SUPIII<span class="hljs-comment">#</span><br></code></pre></td></tr></table></figure><p>到这一步，已经完成enable密码更改了。</p><p>参考<a href="https://www.cisco.com/c/en/us/support/docs/switches/catalyst-4000-series-switches/21229-pswdrec-cat4000-supiii-21229.html">链接</a>，<a href="https://www.hello2099.com/1913.html">链接</a></p>]]></content>
    
    
    <categories>
      
      <category>network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cisco</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mu-editor python3 PyQt5相关问题</title>
    <link href="/2021/01/31/mu-editor-python3-PyQt5%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/"/>
    <url>/2021/01/31/mu-editor-python3-PyQt5%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="mu-editor-python3-PyQt5相关问题"><a href="#mu-editor-python3-PyQt5相关问题" class="headerlink" title="mu-editor python3 PyQt5相关问题"></a>mu-editor python3 PyQt5相关问题</h1><p>ubuntu升级后，导致PyQT5相关的模块丢失，重新配置，记录备忘。</p><span id="more"></span><h2 id="ubuntu-20-04-python3"><a href="#ubuntu-20-04-python3" class="headerlink" title="ubuntu 20.04 python3"></a>ubuntu 20.04 python3</h2><p>最近无事，电脑的ubuntu 18.04提示升级，一时手痒，升级到了20.04。升级结束，启用了相关的软件源，确实是有很多非ubuntu源里的软件不可以使用了。</p><p>之前使用的一个简单的python3 IDE打开提示报错，重新安装mu-editor。</p><p>ubuntu下安装，直接使用pip安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip3 install mu-editor<br><span class="hljs-comment"># 创建快捷方式</span><br>pip3 install shortcut<br>shortcut mu-editor<br></code></pre></td></tr></table></figure><p>运行程序报错：</p><blockquote><p>ModuleNotFoundError: No module named ‘PyQt5.QtSerialPort’</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 尝试操作如下:</span><br>sudo pip3 install --upgrade pip setuptools pyserial --upgrade<br>sudo pip3 install --upgrade pip setuptools -i https://pypi.tuna.tsinghua.edu.cn/simple   <span class="hljs-comment"># -i 指定清华的python3源</span><br>sudo pip3 install launchpadlib -i https://pypi.tuna.tsinghua.edu.cn/simple<br>sudo pip3 install pyserial -i https://pypi.tuna.tsinghua.edu.cn/simple<br><br>sudo apt install python3 python3-pip<br>sudo apt install python3 python3-pyqt5<br><br><span class="hljs-comment"># 重新安装 python3 python3-pyqt5</span><br>sudo apt install python3-serial python3-pyqt5 --reinstall<br><br><span class="hljs-comment"># 重点这个</span><br>sudo apt-get install python3-pyqt5.qtserialport<br><br>运行时，还有错误<br>sudo apt-get install python3-pyqt5.qsci<br><br>装完这个后，正常使用了。缺哪个装哪个。<br></code></pre></td></tr></table></figure><p>参考<a href="https://github.com/tasmota/tasmotizer/issues/12">连接</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python 3</tag>
      
      <tag>QT5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>openssh 添加 sha1支持</title>
    <link href="/2021/01/29/openssh-%E6%B7%BB%E5%8A%A0-sha1%E6%94%AF%E6%8C%81/"/>
    <url>/2021/01/29/openssh-%E6%B7%BB%E5%8A%A0-sha1%E6%94%AF%E6%8C%81/</url>
    
    <content type="html"><![CDATA[<h2 id="openssh-添加-sha1支持"><a href="#openssh-添加-sha1支持" class="headerlink" title="openssh 添加 sha1支持"></a>openssh 添加 sha1支持</h2><p>ubuntu 20.04 默认的 openssh 版本8.2p1不再支持老的hash加密算法。连接网络设备时报错。会有相关的报错。配置ssh以支持老的hash加密算法，实现对设备的远程连接。</p><span id="more"></span><p>提示如下：</p><blockquote><p>Unable to negotiate with 10.10.100.253 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1</p></blockquote><p><img src="https://blog.ywmy.xyz/network/diffine-hellman.jpg" alt="diffine-hellman"></p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ul><li>方法一</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 user@legacyhost<br></code></pre></td></tr></table></figure><p>如上面示例设备提供的加密算法为diffie-hellman-group14-sha1<br>连接时实际使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh -oKexAlgorithms=+diffie-hellman-group14-sha1 admin@10.10.100.253<br></code></pre></td></tr></table></figure><ul><li>方法二</li></ul><p>编辑家目录下的配置文件(~&#x2F;.ssh&#x2F;config)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Host somehost.example.org<br>    KexAlgorithms +diffie-hellman-group1-sha1<br></code></pre></td></tr></table></figure><p>追加到config文件后面，即可。</p><p>其它的算法支持，参考openssh官方<a href="http://www.openssh.com/legacy.html">文档</a>。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>openssh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>华为设备安全登录示例</title>
    <link href="/2021/01/29/%E5%8D%8E%E4%B8%BA%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E7%99%BB%E5%BD%95%E7%A4%BA%E4%BE%8B/"/>
    <url>/2021/01/29/%E5%8D%8E%E4%B8%BA%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E7%99%BB%E5%BD%95%E7%A4%BA%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="化为设备安全登录示例"><a href="#化为设备安全登录示例" class="headerlink" title="化为设备安全登录示例"></a>化为设备安全登录示例</h1><p>常用的华为设备，安全登录配置，本地认证，console和ssh远程登录配置示例。</p><span id="more"></span><h2 id="设备登录安全配置示例"><a href="#设备登录安全配置示例" class="headerlink" title="设备登录安全配置示例"></a>设备登录安全配置示例</h2><p>登录设备的两种方式，本地console口和远程stelnet。</p><h3 id="本地console口登录安全配置示例"><a href="#本地console口登录安全配置示例" class="headerlink" title="本地console口登录安全配置示例"></a>本地console口登录安全配置示例</h3><p>通过Console口（也称串口）登录交换机是登录设备的最基本方式，也是其他登录方式（如Telnet和STelnet）的基础。一旦攻击者接触到Console口后，交换机将暴露给攻击者，交换机的安全无法保障。通过配置Console口用户界面的认证方式、用户的认证信息和用户级别，可以保证Console登录的安全性。</p><pre><code class="hljs">**部署注意事项**- 如果用户通过console口登录设备再进行console用户界面配置，所配置的属性需要退出当前登录，再次通过console口登录后才会生效。- 为充分保证设备安全，首次登录设备时，必须按照要求修改缺省密码，并定期修改密码。</code></pre><h4 id="步骤1"><a href="#步骤1" class="headerlink" title="步骤1"></a>步骤1</h4><pre><code class="hljs">配置console用户界面的认证方式。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;HUAWEI&gt; system-view<br>[HUAWEI] user-interface console 0 //进入Console用户界面<br>[HUAWEI-console0] authentication-mode aaa //配置认证方式为AAA，默认情况下即AAA<br>[HUAWEI-console0] quit<br></code></pre></td></tr></table></figure></code></pre><h4 id="步骤2"><a href="#步骤2" class="headerlink" title="步骤2"></a>步骤2</h4><pre><code class="hljs">配置console用户认证信息及用户级别<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">    [HUAWEI] aaa<br>    [HUAWEI-aaa] local-user abcd password irreversible-cipher abcd@123 //创建本地用户abcd，登录密码为abcd@123<br>    [HUAWEI-aaa] local-user abcd privilege level 15 //配置本地用户abcd的级别为15<br>    Warning: This operation may ffcì online <span class="hljs-built_in">users</span>, are you sure to change the user privilege level ?[Y/N]y<br>    [HUAWEI-aaa] local-user abcd service-type terminal //配置本地用户abcd的接入类型为终端用<br>户，即Console用户<br></code></pre></td></tr></table></figure></code></pre><h4 id="步骤3"><a href="#步骤3" class="headerlink" title="步骤3"></a>步骤3</h4><pre><code class="hljs">通过console口连接设备，提示用户输入用户名密码，实现console口登录。（配置示例用户为abcd，密码为abcd@123）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">Login authentication<br>Username:abcd<br>Password: <br>&lt;HUAWEI&gt;<br></code></pre></td></tr></table></figure>**结束**</code></pre><h3 id="远程stelnet登录安全配置示例"><a href="#远程stelnet登录安全配置示例" class="headerlink" title="远程stelnet登录安全配置示例"></a>远程stelnet登录安全配置示例</h3><p>Telnet和STelnet是远程登录交换机两种方式，Telnet协议存在安全风险，而STelnet则基于SSH协议，实现了在不安全网络上提供安全的远程登录，提供安全信息保障和强大认证功能，保护交换机不受IP欺骗等击。</p><pre><code class="hljs">**部署注意事项**- 登录设备前，需要确保终端PC和设备之间路由可达。- 使用STelnet V1协议存在安全风险，建议使用STelnet V2登录设备。- 配置STelnet登录交换机前，用户终端应该已安装SSH服务器登录软件。如putty。- 通过STelnet登录设备需配置用户界面支持的协议是SSH，必须设置VTY用户界面认证方式为AAA认证。- 为充分保证设备安全，请定期修改密码。</code></pre><h4 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h4><pre><code class="hljs">配置VTY用户界面的支持协议类型、认证方式和用户级别。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">[HUAWEI] user-interface vty 0 4<br>[HUAWEI-ui-vty0-4] authentication-mode aaa //配置VTY用户界面认证方式为AAA认证<br>[HUAWEI-ui-vty0-4] protocol inbound ssh //配置VTY用户界面支持的协议为SSH，默认情况下即SSH<br>[HUAWEI-ui-vty0-4] user privilege level 15 //配置VTY用户界面的级别为15<br>[HUAWEI-ui-vty0-4] quit<br></code></pre></td></tr></table></figure></code></pre><h4 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h4><pre><code class="hljs">开启STelnet服务器功能并创建SSH用户。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[HUAWEI] stelnet server <span class="hljs-built_in">enable</span> //使能设备的STelnet服务器功能<br>[HUAWEI] ssh user abcd //创建SSH用户abcd<br>[HUAWEI] ssh user abcd service-type stelnet //配置SSH用户的服务方式为STelnet<br></code></pre></td></tr></table></figure></code></pre><h4 id="step-3"><a href="#step-3" class="headerlink" title="step 3"></a>step 3</h4><pre><code class="hljs">配置SSH用户认证方式为Password。使用Password认证方式时，需要在AAA视图下配置与SSH用户同名的本地用户。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[HUAWEI] ssh user abcd authentication-type password //配置SSH用户认证方式为password<br>[HUAWEI] aaa<br>[HUAWEI-aaa] local-user abcd password irreversible-cipher abcd@123 //创建与SSH用户同名的本地用户和对应的登录密码<br>[HUAWEI-aaa] local-user abcd privilege level 15 //配置本地用户级别为15<br>[HUAWEI-aaa] local-user abcd service-type ssh //配置本地用户的服务方式为SSH<br>[HUAWEI-aaa] quit<br></code></pre></td></tr></table></figure># 配置SSH用户认证方式为RSA、DSA或ECC。（以ECC认证方式为例，RSA、DSA认证方式步骤类似）使用RSA、DSA或ECC认证方式时，需要在SSH服务器上输入SSH客户端生成的密钥中的公钥部分。这样当客户端登录服务器时，自己的私钥如果与输入的公钥匹配成功，则认证通过。客户端公钥的生成请参见相应的SSH客户端软件的帮助文档。[HUAWEI] ssh user abcd authentication-type ecc //配置SSH用户认证方式为ecc[HUAWEI] ecc peer-public-key key01 encoding-type pem //配置ECC公共密钥编码格式，并进入ECC公共密钥视图,key01为公共密钥名称Enter &quot;ECC public key&quot; view, return system view with &quot;peer-public-key end&quot;.[HUAWEI-ecc-public-key] public-key-code begin //进入公共密钥编辑视图Enter &quot;ECC key code&quot; view, return last view with &quot;public-key-code end&quot;.[HUAWEI-dsa-key-code] 308188 //拷贝复制客户端的公钥，为十六进制字符串[HUAWEI-dsa-key-code] 028180[HUAWEI-dsa-key-code] B21315DD 859AD7E4 A6D0D9B8 121F23F0 006BB1BB[HUAWEI-dsa-key-code] A443130F 7CDB95D8 4A4AE2F3 D94A73D7 36FDFD5F[HUAWEI-dsa-key-code] 411B8B73 3CDD494A 236F35AB 9BBFE19A 7336150B[HUAWEI-dsa-key-code] 40A35DE6 2C6A82D7 5C5F2C36 67FBC275 2DF7E4C5[HUAWEI-dsa-key-code] 1987178B 8C364D57 DD0AA24A A0C2F87F 474C7931[HUAWEI-ecc-key-code] A9F7E8FE E0D5A1B5 092F7112 660BD153 7FB7D5B2[HUAWEI-ecc-key-code] 171896FB 1FFC38CD[HUAWEI-ecc-key-code] 0203[HUAWEI-ecc-key-code] 010001[HUAWEI-ecc-key-code] public-key-code end //退回到公共密钥视图[HUAWEI-ecc-public-key] peer-public-key end //退回到系统视图[HUAWEI] ssh user abcd assign ecc-key key01 //为用户abcd分配一个已经存在的公钥key01</code></pre><h4 id="step-4"><a href="#step-4" class="headerlink" title="step 4"></a>step 4</h4><pre><code class="hljs">在服务器端生成本地密钥对。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;HUAWEI&gt; system-view<br>[HUAWEI] ecc local-key-pair create<br>Info: The key name will be: HUAWEI_Host_ECC.<br>Info: The key modulus can be any one of the following: 256, 384, 521.<br>Info: If the key modulus is greater than 512, it may take a few minutes.<br>Please input the modulus [default=521]:521<br>Info: Generating keys..........<br>Info: Succeeded <span class="hljs-keyword">in</span> creating the ECC host keys.<br></code></pre></td></tr></table></figure></code></pre><h4 id="step-5"><a href="#step-5" class="headerlink" title="step 5"></a>step 5</h4><pre><code class="hljs">PC端用Password认证方式连接SSH服务器。通过PuTTY软件登录设备，输入设备的IP地址，选择协议类型为SSH。```bashlogin as: abcdSent username &quot;abcd&quot;abcd@10.10.10.20&#39;s password:Info: The max number of VTY users is 8, and the number of current VTY users on line is 5. The current login time is 2018-12-22 09:35:28+00:00.&lt;HUAWEI&gt;**结束**</code></pre>]]></content>
    
    
    <categories>
      
      <category>network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ssh</tag>
      
      <tag>console</tag>
      
      <tag>huawei</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux nc 命令</title>
    <link href="/2021/01/21/linux-nc-%E5%91%BD%E4%BB%A4/"/>
    <url>/2021/01/21/linux-nc-%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="linux-nc-命令"><a href="#linux-nc-命令" class="headerlink" title="linux nc 命令"></a>linux nc 命令</h1><p>Netcat 是一款简单的Unix工具，使用UDP和TCP协议。 它是一个可靠的容易被其他程序所启用的后台操作工具。 使用它你可以轻易的建立任何连接。内建有很多实用的工具。</p><span id="more"></span><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc [-hlnruz][-g&lt;网关...&gt;][-G&lt;指向器数目&gt;][-i&lt;延迟秒数&gt;][-o&lt;输出文件&gt;][-p&lt;通信端口&gt;][-s&lt;来源位址&gt;][-v...][-w&lt;超时秒数&gt;][主机名称][通信端口...]<br></code></pre></td></tr></table></figure><h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><ul><li>-g&lt;网关&gt; 设置路由器跃程通信网关，最多可设置8个。</li><li>-G&lt;指向器数目&gt; 设置来源路由指向器，其数值为4的倍数。</li><li>-h 帮助</li><li>-i&lt;延迟秒数&gt; 设置时间间隔，以便传送信息及扫描端口。</li><li>-l 使用监听模式，管控传入信息。</li><li>-p 设置本地主机使用的通信端口</li><li>-u 使用UDP协议</li><li>-v 显示指令执行过程</li><li>-w 设置等待连线时间</li><li>-z 只扫描监听的进程</li></ul><h3 id="参考实例"><a href="#参考实例" class="headerlink" title="参考实例"></a>参考实例</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-comment"># udp 端口扫描</span><br>nc -zuv cn.pool.ntp.org <span class="hljs-number">123</span>  <span class="hljs-comment"># 扫描cn.pool.ntp.org 的123 号端口</span><br>Connection <span class="hljs-built_in">to</span> cn.pool.ntp.org <span class="hljs-number">123</span> port [udp/ntp] succeeded!  <span class="hljs-comment"># 扫描到使用udp传输的ntp协议</span><br><span class="hljs-comment"># tcp 端口扫描</span><br>nc -zv IP/域名 port_number<br>nc -zv <span class="hljs-keyword">a</span>.b.c.d <span class="hljs-number">22</span><br>Connection <span class="hljs-built_in">to</span> <span class="hljs-keyword">a</span>.b.c.d <span class="hljs-number">22</span> port [tcp/ssh] succeeded!<br></code></pre></td></tr></table></figure><p>nc 端口通信测试见图示：<br><img src="https://blog.ywmy.xyz/nc_connected.gif" alt="nc端口通信测试"></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>natcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux 时间同步</title>
    <link href="/2020/07/28/linux-%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/"/>
    <url>/2020/07/28/linux-%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="linux时间同步"><a href="#linux时间同步" class="headerlink" title="linux时间同步"></a>linux时间同步</h1><p>linux 配置时间同步的计划任务。以保证时间的准确性。</p><span id="more"></span><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 每天早上0点执行</span><br>0 0 * * * /usr/sbin/ntpdate cn.pool.ntp.org &amp;&amp; /sbin/hwclock -w<br>0 0 * * * (/usr/sbin/ntpdate cn.pool.ntp.org ; /sbin/clock -w)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ntp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译安装zabbix agent</title>
    <link href="/2020/03/21/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85zabbix-agent/"/>
    <url>/2020/03/21/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85zabbix-agent/</url>
    
    <content type="html"><![CDATA[<h1 id="编译安装zabbix-agent"><a href="#编译安装zabbix-agent" class="headerlink" title="编译安装zabbix-agent"></a>编译安装zabbix-agent</h1><p>在centos 上编译安装zabbix agent 程序，并配置自启动服务。</p><span id="more"></span><p>前期依赖程序安装，下载zabbix相对应的软件包。</p><h2 id="下载zabbix"><a href="#下载zabbix" class="headerlink" title="下载zabbix"></a>下载zabbix</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum update<br>yum install epel-release gcc pcre-devel net-snmp-devel libevent-devel openssl-devel libxml2 libssh2-devel<br></code></pre></td></tr></table></figure><p>下载源代码归档<br>下载地址<a href="https://www.zabbix.com/download_agents">zabbix download page</a>，下载，解压源码.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf zabbix-3.4.15.tar.gz<br></code></pre></td></tr></table></figure><h2 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h2><p>创建用户</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupadd --system zabbix<br>useradd --system -g zabbix -d /usr/lib/zabbix -s /sbin/nologin -C <span class="hljs-string">&quot;Zabbix Monitoring System&quot;</span>  zabbix<br></code></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><p>编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --enable-agent  --prefix=/usr/local/zabbix<br>make install<br></code></pre></td></tr></table></figure><p>更改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /usr/local/zabbix/etc/zabbix_agentd.conf | grep -Ev <span class="hljs-string">&#x27;^#|^$&#x27;</span><br>PidFile=/tmp/zabbix_agentd.pid<br>LogFile=/tmp/zabbix_agentd.log<br>Server=zabbix_server_or_proxy<br>ServerActive=zabbix_server_or_proxy<br>Hostname=your_computer_hostname<br></code></pre></td></tr></table></figure><p>添加开机启动项</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br>Description=Zabbix Agent<br>After=syslog.target<br>After=network.target<br><br>[Service]<br>User=zabbix<br>Group=zabbix<br>Environment=<span class="hljs-string">&quot;CONFFILE=/usr/local/zabbix/etc/zabbix_agentd.conf&quot;</span><br>Type=forking<br>Restart=on-failure<br>PIDFile=/tmp/zabbix_agentd.pid<br>KillMode=control-group<br>ExecStart=/usr/local/zabbix/sbin/zabbix_agentd -c <span class="hljs-variable">$CONFFILE</span><br>ExecStop=/bin/kill -SIGTERM <span class="hljs-variable">$MAINPID</span><br>RestartSec=10s<br>TimeoutSec=0<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><h2 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h2><p>防火墙配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-port=10050/tcp<br>firelwall-cmd --permanent --add-port=10051/tcp<br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><p>最后启动服务就完事了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start zabbix-agent<br>systemctl <span class="hljs-built_in">enable</span> zabbix-agent<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zabbix</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>mysql ibdata 数据迁移</title>
    <link href="/2020/03/07/mysql-ibdata-%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/"/>
    <url>/2020/03/07/mysql-ibdata-%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="mysql-ibdata1数据迁移"><a href="#mysql-ibdata1数据迁移" class="headerlink" title="mysql ibdata1数据迁移"></a>mysql ibdata1数据迁移</h1><p>这两天zabbix上提示一台数据库的空间要满了。mariadb是直接yum安装的，查了一下，&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;下的文件ibdata1太大了，34G+，根目录下已经快撑满 了。看了一下硬盘的其它分区，还有一个目录挂载的还有500多个G，是肯定够用的。迁移操作记录备忘。</p><span id="more"></span><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>1 备份数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home<br>mkdri mysql <br><span class="hljs-built_in">chown</span> mysql:mysql ./mysql -R<br>mysqldump -u root -p --add-drop-table --all-databases &gt; ./mysql_20200307.sql<br></code></pre></td></tr></table></figure><p>2 关闭mysql服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop mariadb<br></code></pre></td></tr></table></figure><p>3 迁移数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /var/lib/mysql/<br><span class="hljs-built_in">mv</span> -rv ./* /home/mysql/<br></code></pre></td></tr></table></figure><p>4 修改mysql配置文件 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/my.cnf<br><span class="hljs-comment"># 修改datadir和socket路径</span><br><br><span class="hljs-comment"># 修改前</span><br>[mysqld]<br>datadir=/var/lib/mysql<br>socket=/var/lib/mysql/mysql.sock<br><span class="hljs-comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span><br>symbolic-links=0<br><span class="hljs-comment"># Settings user and group are ignored when systemd is used.</span><br><span class="hljs-comment"># If you need to run mysqld under a different user or group,</span><br><span class="hljs-comment"># customize your systemd unit file for mariadb according to the</span><br><span class="hljs-comment"># instructions in http://fedoraproject.org/wiki/Systemd</span><br><br>[mysqld_safe]<br>log-error=/var/log/mariadb/mariadb.log<br>pid-file=/var/run/mariadb/mariadb.pid<br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># include all files from the config directory</span><br><span class="hljs-comment">#</span><br>!includedir /etc/my.cnf.d<br><br><span class="hljs-comment"># 修改后</span><br>[mysqld]<br>datadir=/home/mysql<br>socket=/home/mysql/mysql.sock<br><span class="hljs-comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span><br>symbolic-links=0<br><span class="hljs-comment"># Settings user and group are ignored when systemd is used.</span><br><span class="hljs-comment"># If you need to run mysqld under a different user or group,</span><br><span class="hljs-comment"># customize your systemd unit file for mariadb according to the</span><br><span class="hljs-comment"># instructions in http://fedoraproject.org/wiki/Systemd</span><br><br>[mysqld_safe]<br>log-error=/var/log/mariadb/mariadb.log<br>pid-file=/var/run/mariadb/mariadb.pid<br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># include all files from the config directory</span><br><span class="hljs-comment">#</span><br>!includedir /etc/my.cnf.d<br></code></pre></td></tr></table></figure><p>5 重新启动mariadb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart mariadb<br><span class="hljs-comment"># 创建mysql.sock软链接</span><br><br><span class="hljs-built_in">ln</span> -s /home/mysql/mysql.sock /var/lib/mysql/mysql.sock<br><br>mysql -u root -p<br><br>登录成功，mariadb服务和登录正常。<br></code></pre></td></tr></table></figure><p>结束。</p>]]></content>
    
    
    <categories>
      
      <category>database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>zabbix 3.4 中文乱码</title>
    <link href="/2020/03/07/zabbix-3-4-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    <url>/2020/03/07/zabbix-3-4-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="zabbix-3-4中文乱码"><a href="#zabbix-3-4中文乱码" class="headerlink" title="zabbix 3.4中文乱码"></a>zabbix 3.4中文乱码</h1><p>切换到中文后，图表里有乱码，操作办法。替换换乱码的字体。操作记录备忘。</p><span id="more"></span><h2 id="操作记录"><a href="#操作记录" class="headerlink" title="操作记录"></a>操作记录</h2><p>zabbix图表字体位置</p><p>&#x2F;usr&#x2F;share&#x2F;zabbix&#x2F;fonts&#x2F;graphfont.ttf</p><p>这个字体软链接到:</p><p>&#x2F;etc&#x2F;alternatives&#x2F;zabbix-web-font </p><p>又链接到<br>&#x2F;usr&#x2F;share&#x2F;fonts&#x2F;dejavu&#x2F;DejaVuSans.ttf</p><p>这下 简单，找一个微软系统自带的字体，比如simkai.ttf上传到&#x2F;usr&#x2F;share&#x2F;fonts&#x2F;目录下</p><p>备份一下zabbix的默认链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span>  zabbix-web-font zabbix-web-font_backup<br><span class="hljs-built_in">ln</span> -s /usr/share/fonts/simkai.ttf ./zabbix-web-font<br></code></pre></td></tr></table></figure><p>重新刷新 一下zabbix页面 。好了，中文方框不见了。结束。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zabbix</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>zabbix 忘记admin密码</title>
    <link href="/2020/02/28/zabbix-%E5%BF%98%E8%AE%B0admin%E5%AF%86%E7%A0%81/"/>
    <url>/2020/02/28/zabbix-%E5%BF%98%E8%AE%B0admin%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="zabbix忘记admin密码"><a href="#zabbix忘记admin密码" class="headerlink" title="zabbix忘记admin密码"></a>zabbix忘记admin密码</h1><p>好长时间 没有使用admin登录zabbix了，尝试了几次没登录上去，虽然有其它用户 暂不影响使用，但问题一直在，也不是办法。通过数据库直接改密码字段。操作记录备忘。</p><span id="more"></span><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="1-连接zabbix数据库"><a href="#1-连接zabbix数据库" class="headerlink" title="1.连接zabbix数据库"></a>1.连接zabbix数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql -u root -p<br></code></pre></td></tr></table></figure><h3 id="2-查询user表信息"><a href="#2-查询user表信息" class="headerlink" title="2.查询user表信息"></a>2.查询user表信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">Welcome to the MariaDB monitor.  Commands end with ; or \g.<br>Your MariaDB connection <span class="hljs-built_in">id</span> is 7191<br>Server version: 5.5.64-MariaDB MariaDB Server<br><br>Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.<br><br>Type <span class="hljs-string">&#x27;help;&#x27;</span> or <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> <span class="hljs-built_in">help</span>. Type <span class="hljs-string">&#x27;\c&#x27;</span> to clear the current input statement.<br><br>MariaDB [(none)]&gt; use zabbix;<br>Reading table information <span class="hljs-keyword">for</span> completion of table and column names<br>You can turn off this feature to get a quicker startup with -A<br><br>Database changed<br>MariaDB [zabbix]&gt; show tables;<br>+----------------------------+<br>| Tables_in_zabbix           |<br>+----------------------------+<br>| acknowledges               |<br>| actions                              |<br>| alerts                                 |<br>|.......<br>+----------------------------+<br>140 rows <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.00 sec)<br><br>MariaDB [zabbix]&gt; select userid,<span class="hljs-built_in">alias</span>,passwd from <span class="hljs-built_in">users</span>;<br>+--------+-------+----------------------------------+<br>| userid | <span class="hljs-built_in">alias</span> | passwd                           |<br>+--------+-------+----------------------------------+<br>|      1 | Admin | fa062259ac376b119949f55de4f4c420|<br>|      2 | guest   | fa062259ac376b119949f55de4f4c420|<br>|      4 | abc       | fa062259ac376b119949f55de4f4c420|<br>+--------+-------+----------------------------------+<br>3 rows <span class="hljs-keyword">in</span> <span class="hljs-built_in">set</span> (0.00 sec)<br><br>MariaDB [zabbix]&gt; <br></code></pre></td></tr></table></figure><h3 id="3-生成新的密码的md5信息"><a href="#3-生成新的密码的md5信息" class="headerlink" title="3.生成新的密码的md5信息"></a>3.生成新的密码的md5信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">[abc@abc-pc ~]  <span class="hljs-built_in">echo</span> -n lucky | openssl md5<br>(stdin)= 339a65e93299ad8d72c42b263aa23117<br><br><span class="hljs-comment"># luck为新的密码</span><br></code></pre></td></tr></table></figure><h3 id="4-update表数据，userid-x3D-1的这个用户"><a href="#4-update表数据，userid-x3D-1的这个用户" class="headerlink" title="4.update表数据，userid&#x3D;1的这个用户"></a>4.update表数据，userid&#x3D;1的这个用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">MariaDB [zabbix]&gt; update <span class="hljs-built_in">users</span> <span class="hljs-built_in">set</span> passwd=<span class="hljs-string">&#x27;339a65e93299ad8d72c42b263aa23117&#x27;</span> <span class="hljs-built_in">where</span> userid = <span class="hljs-string">&#x27;1&#x27;</span>;<br>Query OK, 1 row affected (0.00 sec)<br>Rows matched: 1  Changed: 1  Warnings: 0<br><br>MariaDB [zabbix]&gt; <br></code></pre></td></tr></table></figure><h3 id="5-刷新重新加载权限表"><a href="#5-刷新重新加载权限表" class="headerlink" title="5.刷新重新加载权限表"></a>5.刷新重新加载权限表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zabbix</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 6 更换网卡</title>
    <link href="/2020/02/22/centos-6-%E6%9B%B4%E6%8D%A2%E7%BD%91%E5%8D%A1/"/>
    <url>/2020/02/22/centos-6-%E6%9B%B4%E6%8D%A2%E7%BD%91%E5%8D%A1/</url>
    
    <content type="html"><![CDATA[<h2 id="CentOS-6-更换网卡"><a href="#CentOS-6-更换网卡" class="headerlink" title="CentOS 6 更换网卡"></a>CentOS 6 更换网卡</h2><p>开年上班了，到公司第一件事情就是处理过年期间挂掉的几台服务器。其中一台在自己尝试BIOS电池放电、换内存、换电源都没办法点亮后，就只能想着找一块一样的主板换上，试试能不能正常启来。还好主板是有的，换上后，正常开机了。启动后的一个问题，换主板了，网卡信息就变更了，这样新的网卡就没办法正常启用。</p><ul><li>备份udev下的70-persistent-net.rules文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> /etc/udev/rules.d/70-persistent-net.rules /etc/udev/rules.d/70-persistent-net.rules_backup<br></code></pre></td></tr></table></figure><ul><li>重启服务器</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">init 6<br></code></pre></td></tr></table></figure><ul><li>修改新生成的70-persistent-net.rules文件，将NAME硬件名称更改为eth0</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/udev/rules.d/70-persistent-net.rules<br><br><span class="hljs-comment"># This file was automatically generated by the /lib/udev/write_net_rules</span><br><span class="hljs-comment"># program, run by the persistent-net-generator.rules rules file.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># You can modify it, as long as you keep each rule on a single</span><br><span class="hljs-comment"># line, and change only the value of the NAME= key.</span><br><br><span class="hljs-comment"># PCI device 0x10ec:0x8168 (r8169)</span><br>SUBSYSTEM==<span class="hljs-string">&quot;net&quot;</span>, ACTION==<span class="hljs-string">&quot;add&quot;</span>, DRIVERS==<span class="hljs-string">&quot;?*&quot;</span>, ATTR&#123;address&#125;==<span class="hljs-string">&quot;c8:60:00:aa:bb:cc&quot;</span>, ATTR&#123;<span class="hljs-built_in">type</span>&#125;==<span class="hljs-string">&quot;1&quot;</span>, KERNEL==<span class="hljs-string">&quot;eth*&quot;</span>, NAME=<span class="hljs-string">&quot;eth0&quot;</span><br></code></pre></td></tr></table></figure><ul><li>修改network-script下的ifcfg-eth0文件，将mac地址更改为新的网卡mac地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /etc/sysconfig/network-scripts/ifcfg-eth0<br><br>DEVICE=eth0<br>HWADDR=C8:60:00:aa:bb:cc<br>TYPE=Ethernet<br>UUID=21e445f2-209e-4a80-aa32-8c06bde93917<br>ONBOOT=<span class="hljs-built_in">yes</span><br>NM_CONTROLLED=<span class="hljs-built_in">yes</span><br>BOOTPROTO=static<br>IPADDR=192.168.121.121<br>NETMASK=255.255.255.0<br>GATEWAY=192.168.121.1<br>DNS1=221.12.1.227<br></code></pre></td></tr></table></figure><ul><li>重启</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">reboot 或 init 6<br></code></pre></td></tr></table></figure><p>重启后，网卡正常工作，结束 。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NIC</tag>
      
      <tag>udev</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux 终端生成随机密码</title>
    <link href="/2020/02/05/linux-%E7%BB%88%E7%AB%AF%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E5%AF%86%E7%A0%81/"/>
    <url>/2020/02/05/linux-%E7%BB%88%E7%AB%AF%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="llinux下生成随机密码"><a href="#llinux下生成随机密码" class="headerlink" title="llinux下生成随机密码"></a>llinux下生成随机密码</h1><p>新部署一个环境，或都新创建一个账号，为了满足密码复杂性要求，需要通过随机生成密码，以达到要求。方法也不少，记录备忘。</p><span id="more"></span><h2 id="工具一：pwgen"><a href="#工具一：pwgen" class="headerlink" title="工具一：pwgen"></a>工具一：pwgen</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ubuntu</span><br>sudo apt install pwgen<br><span class="hljs-comment"># centos</span><br>sudo yum install pwgen<br></code></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ pwgen<br><span class="hljs-comment"># 默认生成 160个8位密码</span><br>$ pwgen -s<br><span class="hljs-comment"># 生成安全随机密码，使用-s选 项</span><br>$ pwgen -s 14 5<br><span class="hljs-comment"># 生成长度为14位的5组安全密码</span><br>$ pwgen -cnys 14 6<br><span class="hljs-comment"># 生成6组14位的随机强度密码，常用 </span><br></code></pre></td></tr></table></figure><h2 id="工具二：openssl"><a href="#工具二：openssl" class="headerlink" title="工具二：openssl"></a>工具二：openssl</h2><h3 id="用法一"><a href="#用法一" class="headerlink" title="用法一"></a>用法一</h3><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">openssl rand -<span class="hljs-built_in">base64</span> 14<br><span class="hljs-comment"># 生成14位密码</span><br></code></pre></td></tr></table></figure><h3 id="用法二"><a href="#用法二" class="headerlink" title="用法二"></a>用法二</h3><p>示例：生成10个14位随机强度密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-keyword">for</span> pw <span class="hljs-keyword">in</span> &#123;1..10&#125;; <span class="hljs-keyword">do</span> openssl rand -<span class="hljs-built_in">base64</span> 14; <span class="hljs-keyword">done</span><br><br>vIFqxQb/Pl8CgaX4j3M=<br>32GRzfSnxMd6yElzRq0=<br>XbH3OVDe5kq4frXee8s=<br>UJIVRb5WlwKL4nRlraM=<br>myzSSVmoMllQu5rfNHM=<br>vcz7dIHYcLQjjeZhoHQ=<br>3u32tYwDldLbF22+9sc=<br>61mMsj1RF8lqjUe9q6A=<br>t/kDbVHAxCfAWszi++Q=<br>mS5BVEZiKgob06gSnck=<br></code></pre></td></tr></table></figure><h2 id="工具三：gpg"><a href="#工具三：gpg" class="headerlink" title="工具三：gpg"></a>工具三：gpg</h2><h3 id="示例1："><a href="#示例1：" class="headerlink" title="示例1："></a>示例1：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ gpg --gen-random --armor 14 1<br>4flq4ofGrHFqpsyi1NM=<br></code></pre></td></tr></table></figure><h3 id="示例2："><a href="#示例2：" class="headerlink" title="示例2："></a>示例2：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-keyword">for</span> pw <span class="hljs-keyword">in</span> &#123;1..10&#125;; <span class="hljs-keyword">do</span> gpg --gen-random --armor 1 14; <span class="hljs-keyword">done</span><br><br>4yCOBter8EA2bMSfaoM=<br>wHSuQzrRAATSPixas1s=<br>PlK5rIml+Ikdcq3U644=<br>yPIMFc+pMkDxknnxW0s=<br>ZHRU6HO3n7Kd0WIUDMU=<br>ZJcNXsfLfC1cdI8aABU=<br>gENZMAifzy+oNMrEmvw=<br>CqC871lLiIUNNZ/chK8=<br>ltL+Ce75tckVWlfy94I=<br>38GuiLF5n7HmgxommhI=<br></code></pre></td></tr></table></figure><h2 id="其它工具"><a href="#其它工具" class="headerlink" title="其它工具"></a>其它工具</h2><h3 id="使用md5sum"><a href="#使用md5sum" class="headerlink" title="使用md5sum"></a>使用md5sum</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">date</span> | <span class="hljs-built_in">md5sum</span><br>b932c4670f1bae71b5e43c4https://blog.ywmy.xyz/ywmy/linuxlinux_mount.png59be83a90  -<br></code></pre></td></tr></table></figure><h3 id="使用-x2F-dev-x2F-urandom"><a href="#使用-x2F-dev-x2F-urandom" class="headerlink" title="使用&#x2F;dev&#x2F;urandom"></a>使用&#x2F;dev&#x2F;urandom</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /dev/urandom | <span class="hljs-built_in">tr</span> -dc <span class="hljs-string">&#x27;a-zA-Z0-9&#x27;</span> | <span class="hljs-built_in">head</span> -c 14<br>YIqMOLPN913M0M% <br></code></pre></td></tr></table></figure><h3 id="使用sha356sum"><a href="#使用sha356sum" class="headerlink" title="使用sha356sum"></a>使用sha356sum</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ <span class="hljs-built_in">date</span> | <span class="hljs-built_in">sha256sum</span><br>b0726dc3b8d717df789988f755589c598dc742f045cddaaedb00482d0659007f  -<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>openssl</tag>
      
      <tag>pwgen</tag>
      
      <tag>md5sum</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux nc command</title>
    <link href="/2019/11/30/linux-nc-command/"/>
    <url>/2019/11/30/linux-nc-command/</url>
    
    <content type="html"><![CDATA[<h1 id="linux-nc-命令"><a href="#linux-nc-命令" class="headerlink" title="linux nc 命令"></a>linux nc 命令</h1><p>Netcat 是一款简单的Unix工具，使用UDP和TCP协议。 它是一个可靠的容易被其他程序所启用的后台操作工具。 使用它你可以轻易的建立任何连接。内建有很多实用的工具。</p><span id="more"></span><h2 id="netcat-安装"><a href="#netcat-安装" class="headerlink" title="netcat 安装"></a>netcat 安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># ubuntu 18.04</span><br>sudo apt install netcat<br><span class="hljs-comment"># centos  7</span><br>sudo yum install nc<br></code></pre></td></tr></table></figure><h2 id="应用案例"><a href="#应用案例" class="headerlink" title="应用案例"></a>应用案例</h2><ul><li>端口扫描</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nc -z -v  10.10.0.103 3389  <span class="hljs-comment">#查看主机3389端口是否启用</span><br></code></pre></td></tr></table></figure><p>回显示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 3389端口</span><br>Connection to 10.10.0.103 3389 port [tcp/*] succeeded!<br><span class="hljs-comment"># 80端口</span><br>Connection to 10.10.0.103 80 port [tcp/http] succeeded!<br><span class="hljs-comment"># 22端口</span><br>Connection to 10.10.0.100 22 port [tcp/ssh] succeeded!<br></code></pre></td></tr></table></figure><p>无回显，则端口无法通信。默认TCP，-u参数可调整为UDP模式。</p><p>端口扫描案例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">For example:<br><br>           $ nc -zv host.example.com 20-30<br>           Connection to host.example.com 22 port [tcp/ssh] succeeded!<br>           Connection to host.example.com 25 port [tcp/smtp] succeeded!<br><br>     The port range was specified to <span class="hljs-built_in">limit</span> the search to ports 20 - 30, and is<br>     scanned by increasing order.<br><br>     You can also specify a list of ports to scan, <span class="hljs-keyword">for</span> example:<br><br>           $ nc -zv host.example.com 80 20 22<br>           nc: connect to host.example.com 80 (tcp) failed: Connection refused<br>           nc: connect to host.example.com 20 (tcp) failed: Connection refused<br>           Connection to host.example.com port [tcp/ssh] succeeded!<br><br>     The ports are scanned by the order you given.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>netcat</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>How to Deploy Google BBRon CentOS 7</title>
    <link href="/2019/10/06/How-to-Deploy-Google-BBRon-CentOS-7/"/>
    <url>/2019/10/06/How-to-Deploy-Google-BBRon-CentOS-7/</url>
    
    <content type="html"><![CDATA[<h1 id="How-to-Deploy-Google-BBR-on-CentOS-7"><a href="#How-to-Deploy-Google-BBR-on-CentOS-7" class="headerlink" title="How to Deploy Google BBR on CentOS 7"></a>How to Deploy Google BBR on CentOS 7</h1><p>BBR (Bottleneck Bandwidth and RTT) is a new congestion control algorithm which is contributed to the Linux kernel TCP stack by Google. With BBR in place, a Linux server can get significantly increased throughput and reduced latency for connections. Besides, it’s easy to deploy BBR because this algorithm requires only updates on the sender side, not in the network or on the receiver side.</p><span id="more"></span><p>In this article, I will show you how to deploy BBR on a Vultr CentOS 7 KVM server instance.</p><h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul><li>A Vultr CentOS 7 x64 server instance.</li><li>A sudo user.</li></ul><h3 id="Step-1-Upgrade-the-kernel-using-the-ELRepo-RPM-repository"><a href="#Step-1-Upgrade-the-kernel-using-the-ELRepo-RPM-repository" class="headerlink" title="Step 1: Upgrade the kernel using the ELRepo RPM repository"></a>Step 1: Upgrade the kernel using the ELRepo RPM repository</h3><p>In order to use BBR, you need to upgrade the kernel of your CentOS 7 machine to 4.9.0. You can easily get that done using the ELRepo RPM repository.</p><p>Before the upgrade, you can take a look at the current kernel:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -r<br></code></pre></td></tr></table></figure><p>This command should output a string which resembles:</p><blockquote><p>3.10.0-514.2.2.el7.x86_64</p></blockquote><p>As you see, the current kernel is 3.10.0.</p><p>update and install the ELRepo repo:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum update<br>sudo rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org<br>sudo rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm<br></code></pre></td></tr></table></figure><p>Install the 4.9.0 kernel using the ELRepo repo:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum --enablerepo=elrepo-kernel install kernel-ml -y<br></code></pre></td></tr></table></figure><p>Confirm the result:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm -qa | grep kernel<br></code></pre></td></tr></table></figure><p>If the installation is successful, you should see kernel-ml-4.9.0-1.el7.elrepo.x86_64 among the output list:</p><blockquote><p>kernel-ml-4.9.0-1.el7.elrepo.x86_64<br>kernel-3.10.0-514.el7.x86_64<br>kernel-tools-libs-3.10.0-514.2.2.el7.x86_64<br>kernel-tools-3.10.0-514.2.2.el7.x86_64<br>kernel-3.10.0-514.2.2.el7.x86_64<br>Now, you need to enable the 4.9.0 kernel by setting up the default grub2 boot entry.</p></blockquote><p>Show all entries in the grub2 menu:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo egrep ^menuentry /etc/grub2.cfg | <span class="hljs-built_in">cut</span> -f 2 -d \<span class="hljs-string">&#x27;</span><br></code></pre></td></tr></table></figure><p>The result should resemble:</p><blockquote><p>CentOS Linux 7 Rescue a0cbf86a6ef1416a8812657bb4f2b860 (4.9.0-1.el7.elrepo.x86_64)<br>CentOS Linux (4.9.0-1.el7.elrepo.x86_64) 7 (Core)<br>CentOS Linux (3.10.0-514.2.2.el7.x86_64) 7 (Core)<br>CentOS Linux (3.10.0-514.el7.x86_64) 7 (Core)<br>CentOS Linux (0-rescue-bf94f46c6bd04792a6a42c91bae645f7) 7 (Core)  </p></blockquote><p>Since the line count starts at 0 and the 4.9.0 kernel entry is on the second line, set the default boot entry as 1:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo grub2-set-default 1<br></code></pre></td></tr></table></figure><p>Reboot the system:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo shutdown -r now<br></code></pre></td></tr></table></figure><p>When the server is back online, log back in and rerun the uname command to confirm that you are using the correct Kernel:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -r<br></code></pre></td></tr></table></figure><p>You should see the result as below:</p><blockquote><p>4.9.0-1.el7.elrepo.x86_64</p></blockquote><h3 id="Step-2-Enable-BBR"><a href="#Step-2-Enable-BBR" class="headerlink" title="Step 2: Enable BBR"></a>Step 2: Enable BBR</h3><p>In order to enable the BBR algorithm, you need to modify the sysctl configuration as follows:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;net.core.default_qdisc=fq&#x27;</span> | sudo <span class="hljs-built_in">tee</span> -a /etc/sysctl.conf<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;net.ipv4.tcp_congestion_control=bbr&#x27;</span> | sudo <span class="hljs-built_in">tee</span> -a /etc/sysctl.conf<br>sudo sysctl -p<br></code></pre></td></tr></table></figure><p>Now, you can use the following commands to confirm that BBR is enabled:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sysctl net.ipv4.tcp_available_congestion_control<br></code></pre></td></tr></table></figure><p>The output should resemble:</p><blockquote><p>net.ipv4.tcp_available_congestion_control &#x3D; bbr cubic reno</p></blockquote><p>Next, verify with:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sysctl -n net.ipv4.tcp_congestion_control<br></code></pre></td></tr></table></figure><p>The output should be:</p><blockquote><p>bbr</p></blockquote><p>Finally, check that the kernel module was loaded:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsmod | grep bbr<br></code></pre></td></tr></table></figure><p>The output will be similar to:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tcp_bbr                16384  0<br></code></pre></td></tr></table></figure><p><a href="https://baicy.blogspot.com/2017/03/how-to-deploy-google-bbr-on-centos-7.html">reference 1</a></p><p><a href="https://www.linuxrumen.com/fwqdj/875.html">reference 2</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>linux</tag>
      
      <tag>BBR</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos+rsyslog+loganalyzer</title>
    <link href="/2019/08/07/centos-rsyslog-loganalyzer/"/>
    <url>/2019/08/07/centos-rsyslog-loganalyzer/</url>
    
    <content type="html"><![CDATA[<h1 id="Rsyslog-Analyzer搭建"><a href="#Rsyslog-Analyzer搭建" class="headerlink" title="Rsyslog+Analyzer搭建"></a>Rsyslog+Analyzer搭建</h1><p>一个项目上需求，需要内部网络上设备的日志存储满足180天，且支持日志报表导出。于是想到搭建一个日志应用。再加上日志报表分析，想到一个组合，rsyslog+loganalyzer。记录备忘。</p><span id="more"></span><p>操作如下：</p><h2 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h2><p>CentOS Linux release 7.6.1810 (Core) </p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="设置时间同步"><a href="#设置时间同步" class="headerlink" title="设置时间同步"></a>设置时间同步</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install ntpdate epel-release vim curl wget<br>ntpdate cn.ntp.org.cn<br>hwclock -w<br></code></pre></td></tr></table></figure><p>配置crontab任务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/crontab<br>00 23 * * * ntpdate cn.ntp.org.cn<br>30 00 * * * hwclock -w<br></code></pre></td></tr></table></figure><h3 id="安装apache、php、mariadb-server"><a href="#安装apache、php、mariadb-server" class="headerlink" title="安装apache、php、mariadb-server"></a>安装apache、php、mariadb-server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install php php-mysql php-gd php-mbstring php-mcrypt php-devel php-xml mariadb-server httpd<br></code></pre></td></tr></table></figure><p>设置开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> httpd<br>systemctl <span class="hljs-built_in">enable</span> mariadb<br>systemctl start httpd<br>systemctl start mariadb<br></code></pre></td></tr></table></figure><p>配置mariadb-server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql_secure_installation<br></code></pre></td></tr></table></figure><h3 id="安装rsyslog-mysql"><a href="#安装rsyslog-mysql" class="headerlink" title="安装rsyslog-mysql"></a>安装rsyslog-mysql</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install rsyslog rsyslog-mysql -y<br></code></pre></td></tr></table></figure><h3 id="创建rsyslog数据库和用户"><a href="#创建rsyslog数据库和用户" class="headerlink" title="创建rsyslog数据库和用户"></a>创建rsyslog数据库和用户</h3><p>导入rsyslog数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql -u root -p &lt; /usr/share/doc/rsyslog-8.24.0/mysql-createDB.sql <br></code></pre></td></tr></table></figure><p>创建rsyslog用户，并授权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql -u root -p<br>mysql&gt; GRANT ALL ON  Syslog.* TO <span class="hljs-string">&#x27;rsyslog&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="hljs-string">&#x27;MYSQLPASSOWRD&#x27;</span>;<br>mysql&gt; FLUSH PRIVILEGES;<br>mysql&gt; <span class="hljs-built_in">exit</span>;<br></code></pre></td></tr></table></figure><h3 id="设置rsyslog-mysql"><a href="#设置rsyslog-mysql" class="headerlink" title="设置rsyslog-mysql"></a>设置rsyslog-mysql</h3><p>修改rsyslog配置文件，启用rsyslog mysql 模块，配置mysql 连接信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/rsyslog.conf<br><span class="hljs-comment"># 添加下面的信息</span><br><span class="hljs-variable">$ModLoad</span> ommysql<br>*.* :ommysql:127.0.0.1,Syslog,rsyslog,MYSQLPASSWORD<br></code></pre></td></tr></table></figure><p>最终如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># rsyslog configuration file</span><br><br><span class="hljs-comment"># For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html</span><br><span class="hljs-comment"># If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html</span><br><br><span class="hljs-comment">#### MODULES ####</span><br><br><span class="hljs-comment"># The imjournal module bellow is now used as a message source instead of imuxsock.</span><br><span class="hljs-variable">$ModLoad</span> imuxsock <span class="hljs-comment"># provides support for local system logging (e.g. via logger command)</span><br><span class="hljs-variable">$ModLoad</span> imjournal <span class="hljs-comment"># provides access to the systemd journal</span><br><span class="hljs-variable">$ModLoad</span> imklog <span class="hljs-comment"># reads kernel messages (the same are read from journald)</span><br><span class="hljs-variable">$ModLoad</span> immark  <span class="hljs-comment"># provides --MARK-- message capability</span><br><br><span class="hljs-comment"># Provides UDP syslog reception</span><br><span class="hljs-variable">$ModLoad</span> imudp<br><span class="hljs-variable">$UDPServerRun</span> 514<br><br><span class="hljs-comment"># Provides TCP syslog reception</span><br><span class="hljs-variable">$ModLoad</span> imtcp<br><span class="hljs-variable">$InputTCPServerRun</span> 514<br><span class="hljs-comment"># 新启用的rsyslog mysql模块</span><br><span class="hljs-variable">$Modload</span> ommysql<br>*.* :ommysql:localhost,Syslog,rsyslog,MYSQLPASSWORD<br><br><br><span class="hljs-comment">#### GLOBAL DIRECTIVES ####</span><br><br><span class="hljs-comment"># Where to place auxiliary files</span><br><span class="hljs-variable">$WorkDirectory</span> /var/lib/rsyslog<br><br><span class="hljs-comment"># Use default timestamp format</span><br><span class="hljs-variable">$ActionFileDefaultTemplate</span> RSYSLOG_TraditionalFileFormat<br><br><span class="hljs-comment"># File syncing capability is disabled by default. This feature is usually not required,</span><br><span class="hljs-comment"># not useful and an extreme performance hit</span><br><span class="hljs-comment">#$ActionFileEnableSync on</span><br><br><span class="hljs-comment"># Include all config files in /etc/rsyslog.d/</span><br><span class="hljs-variable">$IncludeConfig</span> /etc/rsyslog.d/*.conf<br><br><span class="hljs-comment"># Turn off message reception via local log socket;</span><br><span class="hljs-comment"># local messages are retrieved through imjournal now.</span><br><span class="hljs-variable">$OmitLocalLogging</span> on<br><br><span class="hljs-comment"># File to store the position in the journal</span><br><span class="hljs-variable">$IMJournalStateFile</span> imjournal.state<br><br><br><span class="hljs-comment">#### RULES ####</span><br><br><span class="hljs-comment"># Log all kernel messages to the console.</span><br><span class="hljs-comment"># Logging much else clutters up the screen.</span><br><span class="hljs-comment">#kern.*                                                 /dev/console</span><br><br><span class="hljs-comment"># Log anything (except mail) of level info or higher.</span><br><span class="hljs-comment"># Don&#x27;t log private authentication messages!</span><br>*.info;mail.none;authpriv.none;cron.none                /var/log/messages<br><br><span class="hljs-comment"># The authpriv file has restricted access.</span><br>authpriv.*                                              /var/log/secure<br><br><span class="hljs-comment"># Log all the mail messages in one place.</span><br>mail.*                                                  -/var/log/maillog<br><br><br><span class="hljs-comment"># Log cron stuff</span><br>cron.*                                                  /var/log/cron<br><br><span class="hljs-comment"># Everybody gets emergency messages</span><br>*.emerg                                                 :omusrmsg:*<br><br><span class="hljs-comment"># Save news errors of level crit and higher in a special file.</span><br>uucp,news.crit                                          /var/log/spooler<br><br><span class="hljs-comment"># Save boot messages also to boot.log</span><br>local7.*                                                /var/log/boot.log<br><br><br><span class="hljs-comment"># ### begin forwarding rule ###</span><br><span class="hljs-comment"># The statement between the begin ... end define a SINGLE forwarding</span><br><span class="hljs-comment"># rule. They belong together, do NOT split them. If you create multiple</span><br><span class="hljs-comment"># forwarding rules, duplicate the whole block!</span><br><span class="hljs-comment"># Remote Logging (we use TCP for reliable delivery)</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># An on-disk queue is created for this action. If the remote host is</span><br><span class="hljs-comment"># down, messages are spooled to disk and sent when it is up again.</span><br><span class="hljs-comment">#$ActionQueueFileName fwdRule1 # unique name prefix for spool files</span><br><span class="hljs-comment">#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)</span><br><span class="hljs-comment">#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown</span><br><span class="hljs-comment">#$ActionQueueType LinkedList   # run asynchronously</span><br><span class="hljs-comment">#$ActionResumeRetryCount -1    # infinite retries if host is down</span><br><span class="hljs-comment"># remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional</span><br><span class="hljs-comment">#*.* @@remote-host:514</span><br><span class="hljs-comment"># ### end of the forwarding rule ###</span><br></code></pre></td></tr></table></figure><h3 id="重新启用rsyslog服务"><a href="#重新启用rsyslog服务" class="headerlink" title="重新启用rsyslog服务"></a>重新启用rsyslog服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart rsyslog<br></code></pre></td></tr></table></figure><p>至此，rsyslog的日志存储已经可以在mysql中查看，接下来我们还需要对存储的日志可视化操作。即安装loganalyzer。</p><h2 id="安装loganalyzer"><a href="#安装loganalyzer" class="headerlink" title="安装loganalyzer"></a>安装loganalyzer</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/download<br>wget http://download.adiscon.com/loganalyzer/loganalyzer-4.1.7.tar.gz<br>tar -xzf loganalyzer-4.1.7.tar.gz<br></code></pre></td></tr></table></figure><p>把安装源文件复制到本地站点目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> -r /loganalyzer-4.1.7/src /var/www/html/loganalyzer<br></code></pre></td></tr></table></figure><h3 id="创建loganalyzer的配置文件"><a href="#创建loganalyzer的配置文件" class="headerlink" title="创建loganalyzer的配置文件"></a>创建loganalyzer的配置文件</h3><p>创建配置文件的时候，先把selinux关闭，不然后面写入配置文件的时候会有问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /var/www/html/loganalyzer<br><span class="hljs-built_in">touch</span> config.php<br><span class="hljs-built_in">chown</span> apache:apache ./*<br><span class="hljs-built_in">chmod</span> 666 config.php<br></code></pre></td></tr></table></figure><h3 id="安装引导"><a href="#安装引导" class="headerlink" title="安装引导"></a>安装引导</h3><p>打开安装引导页面</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">http://server-ip/loganalyzer/install.php<br></code></pre></td></tr></table></figure><p>根据引导页面开始安装，安装过程中，如果遇到config.php的问题，参考selinux配置，即需要关闭，重启后操作。</p><p>连接数据库后，有一个配置创建第一个rsyslog信息源。注意表名SystemEvents这个表名，不确定的，可以登录mysql查看Syslog表名确认。不然这里的创建后面登录后，查不到日志信息。</p><p>引导页面安装结束，即可以看到日志。</p><p>如果查询不到日志，提示以下错误：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">“Could not find the configured table, maybe misspelled or the table names are <span class="hljs-keyword">case</span> sensitive”<br></code></pre></td></tr></table></figure><p>解决方法如下：</p><p>更改loganalyzer 的config.php文件，更改如下行内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-variable">$CFG</span>[‘Sources’][‘Source1’][‘DBTableName’] = ‘systemevents’; =&gt; ‘SystemEvents’<br></code></pre></td></tr></table></figure><p>更新数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql -u rsyslog -p<br>mysql&gt; update logcon_sources <span class="hljs-built_in">set</span> DBTableName =’SystemEvents’ <span class="hljs-built_in">where</span> ID=1;<br>Query OK, 1 row affected (0.00 sec)<br>Rows matched: 1 Changed: 1 Warnings: 0<br></code></pre></td></tr></table></figure><h2 id="配置其它主机的日志"><a href="#配置其它主机的日志" class="headerlink" title="配置其它主机的日志"></a>配置其它主机的日志</h2><p>添加一台主机，把日志存储到laganalyzer主机上，只需要配置主机的rsyslog配置文件，配置文件如下例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># An on-disk queue is created for this action. If the remote host is</span><br><span class="hljs-comment"># down, messages are spooled to disk and sent when it is up again.</span><br><span class="hljs-comment">#$ActionQueueFileName fwdRule1 # unique name prefix for spool files</span><br><span class="hljs-comment">#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)</span><br><span class="hljs-comment">#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown</span><br><span class="hljs-comment">#$ActionQueueType LinkedList   # run asynchronously</span><br><span class="hljs-comment">#$ActionResumeRetryCount -1    # infinite retries if host is down</span><br><span class="hljs-comment"># remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional</span><br><span class="hljs-comment">#*.* @@remote-host:514</span><br>*.* @loganalyzer-IP:514<br><span class="hljs-comment"># ### end of the forwarding rule ###</span><br></code></pre></td></tr></table></figure><p>开放loganalyzer服务器的514端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-port=514/tcp<br>firewall-cmd --permanent --add-port=514/udp<br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><p><img src="https://blog.ywmy.xyz/linux/Loganalyzer.png" alt="loganzlyzer"></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>centos</tag>
      
      <tag>rsyslog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>终端录制与回放</title>
    <link href="/2019/07/28/%E7%BB%88%E7%AB%AF%E5%BD%95%E5%88%B6%E4%B8%8E%E5%9B%9E%E6%94%BE/"/>
    <url>/2019/07/28/%E7%BB%88%E7%AB%AF%E5%BD%95%E5%88%B6%E4%B8%8E%E5%9B%9E%E6%94%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="linux-shell-终端的录制与回放"><a href="#linux-shell-终端的录制与回放" class="headerlink" title="linux shell 终端的录制与回放"></a>linux shell 终端的录制与回放</h1><p>最近有一个需求，在给一个H3C路由器排除问题的时候，启用debug模式，debug模式下，输出到屏幕的调试信息没有办法导出到文件，只能想办法试试看能不能从终端会话录制上实现。</p><span id="more"></span><h2 id="终端的会话操作录制"><a href="#终端的会话操作录制" class="headerlink" title="终端的会话操作录制"></a>终端的会话操作录制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">script -t 2&gt; timing.log -a output.session<br><span class="hljs-built_in">type</span> commands;<br><br>......<br>......<br><span class="hljs-built_in">exit</span><br></code></pre></td></tr></table></figure><p>exit退出录制。</p><p>两个配置文件被当做script命令的参数。这两个文件可以随便命名，这里用timing.log和output.session。其中timing.log用于存储时序信息，描述每一个指令在何时运行；output.session用于存储命令信息输出。-t选项用于将时序数据导入stderr。2&gt;用于stderr重定向到timing.log。</p><h2 id="录制回放"><a href="#录制回放" class="headerlink" title="录制回放"></a>录制回放</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">scriptreplay timing.log output.session<br></code></pre></td></tr></table></figure><p>经验证，录制还是可以的。整个屏幕输出的内容存储在输出的output.session文件中，以文本打开，就可以直接查看之前录制回显的内容了。也可以方便后期回放温故。</p><h2 id="script广播会话"><a href="#script广播会话" class="headerlink" title="script广播会话"></a>script广播会话</h2><p>以两个终端为例：</p><h3 id="终端1操作"><a href="#终端1操作" class="headerlink" title="终端1操作"></a>终端1操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkfifo</span> scriptfifo<br></code></pre></td></tr></table></figure><h3 id="终端2操作"><a href="#终端2操作" class="headerlink" title="终端2操作"></a>终端2操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span>  scriptfifo<br></code></pre></td></tr></table></figure><h3 id="终端1操作-1"><a href="#终端1操作-1" class="headerlink" title="终端1操作"></a>终端1操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">script -f scritpfifo<br>commands<br><br>......<br></code></pre></td></tr></table></figure><p>exit退出。</p><p>此时，终端2上同步回显终端1上的操作内容。</p><p>屏幕录制操作结束。</p><div class="note note-info">            <p>补充一个H3C 屏幕回显debug信息的操作步骤，全程用户模式下操作：</p>          </div><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">debugging nat packet   //例如调试nat包信息<br>terminal debugging   //打开调试信息的屏幕输出开关<br>display debugging    //查看启用了哪些调试信息<br>termainal monitor    //开启控制台对系统信息的监视功能<br></code></pre></td></tr></table></figure><p>汇总结束，通过录制终端会话，来排查设备的debugging信息。设备debugging是比较消耗资源的一件事情，输出的信息也非常多，输出了非专业人员排查问题也是比较困难的。一般这个也就用于提交设备厂商售后分析了。今日份结束。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>debug</tag>
      
      <tag>script</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cisco 设备配置文件的保存和恢复</title>
    <link href="/2019/07/27/cisco-%E8%AE%BE%E5%A4%87%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E4%BF%9D%E5%AD%98%E5%92%8C%E6%81%A2%E5%A4%8D/"/>
    <url>/2019/07/27/cisco-%E8%AE%BE%E5%A4%87%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E4%BF%9D%E5%AD%98%E5%92%8C%E6%81%A2%E5%A4%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="cisco-配置文件的保存和恢复"><a href="#cisco-配置文件的保存和恢复" class="headerlink" title="cisco 配置文件的保存和恢复"></a>cisco 配置文件的保存和恢复</h1><p>记录cisco交换机设备配置文件的保存与恢复，附加h3c设备的操作命令，华为网络设备与h3c类似。</p><span id="more"></span><h2 id="保存配置文件"><a href="#保存配置文件" class="headerlink" title="保存配置文件"></a>保存配置文件</h2><p>思科保存配置文件目录结构大概如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">R1<span class="hljs-comment">#dir</span><br>Directory of nvram:/<br><br>  508  -rw-        2190                    &lt;no <span class="hljs-built_in">date</span>&gt;  startup-config<br>  509  ----          24                         &lt;no <span class="hljs-built_in">date</span>&gt;  private-config<br>  510  -rw-        2190                    &lt;no <span class="hljs-built_in">date</span>&gt;  underlying-config<br>    1  ----             34                         &lt;no <span class="hljs-built_in">date</span>&gt;  persistent-data<br>    2  -rw-           4                          &lt;no <span class="hljs-built_in">date</span>&gt;  rf_cold_starts<br>    3  -rw-           0                         &lt;no <span class="hljs-built_in">date</span>&gt;  ifIndex-table<br></code></pre></td></tr></table></figure><p>启动配置文件为start-config</p><p>要保存当前配置文件的逻辑是先备份当前的启动文件startup-config </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">R1<span class="hljs-comment">#copy startup-config nvram:20190826.backup</span><br>Destination filename [20190826.backup]? <br><br>2190 bytes copied <span class="hljs-keyword">in</span> 1.136 secs (1928 bytes/sec)<br></code></pre></td></tr></table></figure><p>保存的配置文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">R1<span class="hljs-comment">#dir</span><br>Directory of nvram:/<br><br>  508  -rw-        2190                    &lt;no <span class="hljs-built_in">date</span>&gt;  startup-config<br>  509  ----          24                         &lt;no <span class="hljs-built_in">date</span>&gt;  private-config<br>  510  -rw-        2190                    &lt;no <span class="hljs-built_in">date</span>&gt;  underlying-config<br>    1  ----             34                         &lt;no <span class="hljs-built_in">date</span>&gt;  persistent-data<br>    2  -rw-           4                           &lt;no <span class="hljs-built_in">date</span>&gt;  rf_cold_starts<br>    3  -rw-           0                           &lt;no <span class="hljs-built_in">date</span>&gt;  ifIndex-table<br>    4  -rw-           2190                    &lt;no <span class="hljs-built_in">date</span>&gt;  20190826.backup<br><br>522232 bytes total (513822 bytes free)<br></code></pre></td></tr></table></figure><p>将当前配置保存为启动配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">R1<span class="hljs-comment">#copy running-config nvram:startup-config</span><br>Destination filename [startup-config]?<br>Building configuration...<br>[OK]<br></code></pre></td></tr></table></figure><h2 id="恢复配置文件"><a href="#恢复配置文件" class="headerlink" title="恢复配置文件"></a>恢复配置文件</h2><p>例如恢复到20190826的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">R1<span class="hljs-comment">#copy nvram:/20190826.backup startup-config</span><br>Destination filename [startup-config]? y<br><br>2190 bytes copied <span class="hljs-keyword">in</span> 1.108 secs (1977 bytes/sec)<br></code></pre></td></tr></table></figure><p>重启交换机，不需要保存运行中的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">R1<span class="hljs-comment">#reload </span><br>Proceed with reload? [confirm]y<br>*Jul 27 02:14:18.199: %SYS-5-RELOAD: Reload requested by console. Reload Reason: Reload Command.<br><br>                ROM: reload requested...<br></code></pre></td></tr></table></figure><h2 id="H3C-化为的操作思路"><a href="#H3C-化为的操作思路" class="headerlink" title="H3C 化为的操作思路"></a>H3C 化为的操作思路</h2><p>保存文件，选用配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;F1070&gt;save 20190828.cfg<br>The current configuration will be saved to flash:/20190828.cfg. Continue? [Y/N]:y<br>Now saving current configuration to the device.<br>Saving configuration flash:/20190828.cfg.Please <span class="hljs-built_in">wait</span>...<br>Configuration is saved to device successfully.<br></code></pre></td></tr></table></figure><p>配置启动项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;F1070&gt;startup saved-configuration 20190828.cfg <br>Please <span class="hljs-built_in">wait</span>...... Done.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cisco</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 6 ssr</title>
    <link href="/2019/06/28/centos-6-ssr/"/>
    <url>/2019/06/28/centos-6-ssr/</url>
    
    <content type="html"><![CDATA[<h2 id="centos-6-ssr"><a href="#centos-6-ssr" class="headerlink" title="centos 6 ssr"></a>centos 6 ssr</h2><p>centos 6 配置ssr服务、配置示例、启动服务相关操作示例。</p><span id="more"></span><h2 id="更换内核"><a href="#更换内核" class="headerlink" title="更换内核"></a>更换内核</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum update 更新系统<br>rpm -ivh http://www.aloneray.com/wp-content/uploads/2017/03/kernel-firmware-2.6.32-504.3.3.el6.noarch.rpm<br><span class="hljs-comment"># 更新内核</span><br>rpm -ivh http://www.aloneray.com/wp-content/uploads/2017/03/kernel-2.6.32-504.3.3.el6.x86_64.rpm --force<br><span class="hljs-comment"># 重启</span><br>reboot<br></code></pre></td></tr></table></figure><h2 id="安装SSR服务端"><a href="#安装SSR服务端" class="headerlink" title="安装SSR服务端"></a>安装SSR服务端</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget --no-check-certificate http://www.aloneray.com/wp-content/uploads/2019/01/shadowsocksR_CN.sh &amp;&amp; <span class="hljs-built_in">chmod</span> +x shadowsocksR_CN.sh &amp;&amp; ./shadowsocksR_CN.sh<br></code></pre></td></tr></table></figure><p>按提示和步骤操作。</p><h2 id="锐速安装"><a href="#锐速安装" class="headerlink" title="锐速安装"></a>锐速安装</h2><p>锐速是一款非常不错的TCP底层加速软件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh<br></code></pre></td></tr></table></figure><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">service iptables stop <br>chkconfig iptables off<br></code></pre></td></tr></table></figure><h2 id="锐速常用命令"><a href="#锐速常用命令" class="headerlink" title="锐速常用命令"></a>锐速常用命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">重启锐速：/serverspeeder/bin/serverSpeeder.sh restart<br>启动锐速：/serverspeeder/bin/serverSpeeder.sh start<br>停止锐速：/serverspeeder/bin/serverSpeeder.sh stop<br>锐速状态：/serverspeeder/bin/serverSpeeder.sh status<br></code></pre></td></tr></table></figure><h2 id="多端口配置"><a href="#多端口配置" class="headerlink" title="多端口配置"></a>多端口配置</h2><p>服务端更改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br><span class="hljs-string">&quot;server&quot;</span>: <span class="hljs-string">&quot;0.0.0.0&quot;</span>,<br><span class="hljs-string">&quot;server_ipv6&quot;</span>: <span class="hljs-string">&quot;[::]&quot;</span>,<br><span class="hljs-string">&quot;local_address&quot;</span>: <span class="hljs-string">&quot;127.0.0.1&quot;</span>,<br><span class="hljs-string">&quot;local_port&quot;</span>: 1080,<br><span class="hljs-string">&quot;port_password&quot;</span>:<br><span class="hljs-comment"># 多端口配置开始</span><br>&#123;<span class="hljs-string">&quot;8090&quot;</span>:<span class="hljs-string">&quot;password&quot;</span>,<br><span class="hljs-string">&quot;8089&quot;</span>:<span class="hljs-string">&quot;password&quot;</span>,<br><span class="hljs-string">&quot;459&quot;</span>:<span class="hljs-string">&quot;password&quot;</span>,<br><span class="hljs-string">&quot;456&quot;</span>:<span class="hljs-string">&quot;password&quot;</span><br>&#125;,<br><span class="hljs-comment"># 多端口配置结束</span><br><span class="hljs-string">&quot;timeout&quot;</span>: 120,<br><span class="hljs-string">&quot;udp_timeout&quot;</span>: 60,<br><span class="hljs-string">&quot;method&quot;</span>: <span class="hljs-string">&quot;aes-256-cfb&quot;</span>,<br><span class="hljs-string">&quot;protocol&quot;</span>: <span class="hljs-string">&quot;auth_aes128_md5&quot;</span>,<br><span class="hljs-string">&quot;protocol_param&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br><span class="hljs-string">&quot;obfs&quot;</span>: <span class="hljs-string">&quot;http_simple&quot;</span>,<br><span class="hljs-string">&quot;obfs_param&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br><span class="hljs-string">&quot;dns_ipv6&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;connect_verbose_info&quot;</span>: 1,<br><span class="hljs-string">&quot;redirect&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br><span class="hljs-string">&quot;fast_open&quot;</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-string">&quot;workers&quot;</span>: 1<br>&#125;<br></code></pre></td></tr></table></figure><p>重启服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/etc/init.d/shadowsocks restart<br></code></pre></td></tr></table></figure><p>多端口配置结束</p><p>常用操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">启动：/etc/init.d/shadowsocks start<br>停止：/etc/init.d/shadowsocks stop<br>重启：/etc/init.d/shadowsocks restart<br>状态：/etc/init.d/shadowsocks status<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>ssr</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python pip</title>
    <link href="/2019/06/17/python-pip/"/>
    <url>/2019/06/17/python-pip/</url>
    
    <content type="html"><![CDATA[<h1 id="python-pip"><a href="#python-pip" class="headerlink" title="python pip"></a>python pip</h1><p>记录python pip 相关的一些小问题，记录备忘。</p><span id="more"></span><h2 id="ubuntu-pip相关小问题"><a href="#ubuntu-pip相关小问题" class="headerlink" title="ubuntu pip相关小问题"></a>ubuntu pip相关小问题</h2><p>提示： ImportError: No module named ‘setuptools’</p><p>解决办法：安装setuptools</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Python 2.x:    sudo apt-get install python-setuptools<br>Python 3.x:    sudo apt-get install python3-setuptools<br></code></pre></td></tr></table></figure><p>如果安装出现错误：AttributeError: module ‘setuptools.dist’ has no attribute ‘check_specifier’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">Python 2.x:<br>pip install --upgrade pip<br><span class="hljs-built_in">hash</span> -r pip<br><br>Python 3.x:<br>pip3 install --upgrade pip<br><span class="hljs-built_in">hash</span> -r pip3<br><br><span class="hljs-built_in">cd</span> (Mask RCNN root folder)<br>sudo python3 setup.py install<br></code></pre></td></tr></table></figure><h2 id="pip升级"><a href="#pip升级" class="headerlink" title="pip升级"></a>pip升级</h2><p>pip升级后出现错误：Import Error:cannot import name main</p><p>解决办法：</p><ul><li>方法1</li></ul><p>更改from pip import main</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 更改下面行内容</span><br>from pip import main<br><span class="hljs-comment"># 更改为</span><br>from pip._internal import main<br></code></pre></td></tr></table></figure><ul><li>方法2</li></ul><p>更改sys.exit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 原内容：</span><br>from pip import main<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    sys.exit(main())<br><span class="hljs-comment"># 更改后内容</span><br>from pip import __main__<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    sys.exit(__main__._main())<br></code></pre></td></tr></table></figure><p>注意__main__左右的下划线是两个下划线。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小新700 触摸板双击右键</title>
    <link href="/2019/05/30/%E5%B0%8F%E6%96%B0700-%E8%A7%A6%E6%91%B8%E6%9D%BF%E5%8F%8C%E5%87%BB%E5%8F%B3%E9%94%AE/"/>
    <url>/2019/05/30/%E5%B0%8F%E6%96%B0700-%E8%A7%A6%E6%91%B8%E6%9D%BF%E5%8F%8C%E5%87%BB%E5%8F%B3%E9%94%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="联想小新700触摸板双击右键设置"><a href="#联想小新700触摸板双击右键设置" class="headerlink" title="联想小新700触摸板双击右键设置"></a>联想小新700触摸板双击右键设置</h1><p>之前买的联想小新电脑，在设置触摸板时，双击右键的设置是不生效的。在windows下的触摸板设置，如单指、双指、三指、四指操作，使用习惯后，操作起来也是非常高效和舒服的。不过小新的这个synaptics装置，在安装最新驱动后，双击右键依然是不起作用的。在使用过程中就比较尴尬。</p><span id="more"></span><h2 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h2><p>打开注册表编辑器，修改注册表值，路径如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">WIN＋R 运行 regedit，展开路径：<br>计算机\HKEY_CURRENT_USER\Software\Synaptics\SynTP\<br></code></pre></td></tr></table></figure><p>展开路径，找到TouchPadPS2TM开头的项，如自己的小新为TouchPadPS2TM3105，点击该项，右边的键值，找到2FingerTapAction，双击将默认数据0修改为2。确定修改，重启系统，双击右键设置生效。操作结束。记录备用。</p>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>lenovo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GNS3添加网络设备</title>
    <link href="/2019/05/14/GNS3%E6%B7%BB%E5%8A%A0%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/"/>
    <url>/2019/05/14/GNS3%E6%B7%BB%E5%8A%A0%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/</url>
    
    <content type="html"><![CDATA[<h1 id="GNS3添加网络设备"><a href="#GNS3添加网络设备" class="headerlink" title="GNS3添加网络设备"></a>GNS3添加网络设备</h1><p>使用GNS3模拟器搭建网络环境，操作小记，备忘。</p><span id="more"></span><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><ul><li><p>系统：ubuntu 18.04.2 LTS(Linux 4.15.0-48-generic #51-Ubuntu SMP Wed Apr 3 08:28:49 UTC 2019 x86_64 x86_64 x86_64 GNU&#x2F;Linux<br>)</p></li><li><p>GNS3 2.1.16</p></li><li><p>虚拟机virtualbox 6.0.4 r128413</p></li></ul><h2 id="GNS3安装"><a href="#GNS3安装" class="headerlink" title="GNS3安装"></a>GNS3安装</h2><p>ubuntu 直接添加PPA源安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo add-apt-repository ppa:gns3/ppa<br>sudo apt-get update<br>sudo apt-get install gns3-gui<br></code></pre></td></tr></table></figure><p>安装结束后，会出现关于dynamips报错。解决办法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo add-apt-repository ppa:gns3/ppa<br>sudo dpkg --add-architecture i386<br>sudo apt update<br>sudo apt install dynamips:i386<br></code></pre></td></tr></table></figure><p>启动后，出现配置向导。</p><h2 id="添加设备"><a href="#添加设备" class="headerlink" title="添加设备"></a>添加设备</h2><p>添加模拟的设备可以通过本地的server，GNS3 VM来完成。</p><p>本地的server中的Dynamips中添加设备。</p><p>[edit]-&gt;[Preferences]-&gt;[Dynamips]-&gt;[IOS routers]</p><p>添加的设备即直接通过本地电脑的Dynapips来模拟。</p><h2 id="添加IOU"><a href="#添加IOU" class="headerlink" title="添加IOU"></a>添加IOU</h2><p>添加GNS3 VM设备，需要先导入GNS3 VM虚拟机。从官网下载GNS3 VM，如本文所示，选择virtualbox版本。</p><p>下载后，选择导入虚拟机，打开virtualbox，操作如下：</p><p>[管理]-&gt;[导入虚拟电脑]-&gt;[选择下载的GNS VM文件]-&gt;[点击导入]</p><p>导入后，在GNS3中选择GNS3 VM。操作如下：</p><p>[edit]-&gt;[Preferences]-&gt;[GNS3 VM]-&gt;[enable GNS3 VM]-&gt;[select Virtualizatiom engine Virtualbox]-&gt;[Settings]-&gt;[select imported VM named GNS3 VM]-&gt;[Apply setting]-&gt;[OK]</p><p>选择启动GNS3 VM，选择虚拟化引擎，选择导入的GNS3 VM。</p><p>尝试启动GNS3 VM，启动后直接报错，vboxnet0相关，无法启动GNS3 VM。</p><p>解决办法，添加网络vboxnet0。操作步骤：</p><p>[管理]-&gt;[主机网络管理器]-&gt;[网络]-&gt;[创建]</p><p>默认创建的网络就是vboxnet0。其余选项保持默认不变，启用DHCP服务。</p><p>再次打开GNS3 VM，正常启动。</p><p>解决GNS3 VM启动问题后，即可添加IOU（IOS ON UNIX）。</p><p>操作步骤：</p><p>[edit]-&gt;[Preferences]-&gt;[IOS on UNIX]-&gt;[type the license key]</p><p>添加IOU需要cisco的许可密钥，本例中的许可密码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[license]<br>gns3vm = 73635fd3b0a13ad0;<br></code></pre></td></tr></table></figure><p>许可密码可以通过以下方式生成：</p><ol><li><p>打开GNS3 VM，选择Shell菜单</p></li><li><p>下载生成脚本,并生成license:</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget http://www.ipvanquish.com/download/CiscoIOUKeygen3f.py<br>python3 CiscoIOUKeygen3f.py<br></code></pre></td></tr></table></figure><p>生成的文件为.iourc。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">Already copy to the file iourc.txt<br><br>You can <span class="hljs-built_in">disable</span> the phone home feature with something like:<br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;127.0.0.127 xml.cisco.com&#x27;</span> &gt;&gt; /etc/hosts<br></code></pre></td></tr></table></figure><p>把生成的GNS VM license添加到IOU on UNIX中，后，即可添加IOU设备。</p><p>操作方法：</p><p>[edit]-&gt;[Preferenses]-&gt;[IOS on UNIX]-&gt;[IOU devices]-&gt;[new]</p><p>添加IOU镜像，添加后，即可直接通过VM来运行l2 switch l3 router设备。</p><p>IOU和.iourc文件在哪里找，可以度之。</p><p>license gen直接给脚本吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#! /usr/bin/python3</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;*********************************************************************&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Cisco IOU License Generator - Kal 2011, python port of 2006 C version&quot;</span>)<br>import os<br>import socket<br>import hashlib<br>import struct<br><span class="hljs-comment"># get the host id and host name to calculate the hostkey</span><br><span class="hljs-built_in">hostid</span>=os.popen(<span class="hljs-string">&quot;hostid&quot;</span>).<span class="hljs-built_in">read</span>().strip()<br>hostname = socket.gethostname()<br>ioukey=int(<span class="hljs-built_in">hostid</span>,16)<br><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> hostname:<br> ioukey = ioukey + ord(x)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hostid=&quot;</span> + <span class="hljs-built_in">hostid</span> +<span class="hljs-string">&quot;, hostname=&quot;</span>+ hostname + <span class="hljs-string">&quot;, ioukey=&quot;</span> + hex(ioukey)[2:])<br><span class="hljs-comment"># create the license using md5sum</span><br>iouPad1 = b<span class="hljs-string">&#x27;\x4B\x58\x21\x81\x56\x7B\x0D\xF3\x21\x43\x9B\x7E\xAC\x1D\xE6\x8A&#x27;</span><br>iouPad2 = b<span class="hljs-string">&#x27;\x80&#x27;</span> + 39*b<span class="hljs-string">&#x27;\0&#x27;</span><br>md5input=iouPad1 + iouPad2 + struct.pack(<span class="hljs-string">&#x27;!i&#x27;</span>, ioukey) + iouPad1<br>iouLicense=hashlib.md5(md5input).hexdigest()[:16]<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nAdd the following text to ~/.iourc:&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;[license]\n&quot;</span> + hostname + <span class="hljs-string">&quot; = &quot;</span> + iouLicense + <span class="hljs-string">&quot;;\n&quot;</span>)<br>with open(<span class="hljs-string">&quot;iourc.txt&quot;</span>, <span class="hljs-string">&quot;wt&quot;</span>) as out_file:<br>   out_file.write(<span class="hljs-string">&quot;[license]\n&quot;</span> + hostname + <span class="hljs-string">&quot; = &quot;</span> + iouLicense + <span class="hljs-string">&quot;;\n&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAlready copy to the file iourc.txt\n &quot;</span>)<br><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;You can disable the phone home feature with something like:&quot;</span>)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot; echo &#x27;127.0.0.127 xml.cisco.com&#x27; &gt;&gt; /etc/hosts\n&quot;</span>)<br></code></pre></td></tr></table></figure><p>好了，操作记录补充结束。</p>]]></content>
    
    
    <categories>
      
      <category>network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cisco</tag>
      
      <tag>gns3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows 10 homebasic rdp</title>
    <link href="/2019/05/06/windows-10-homebasic-rdp/"/>
    <url>/2019/05/06/windows-10-homebasic-rdp/</url>
    
    <content type="html"><![CDATA[<h1 id="windows-10-家庭版开启远程"><a href="#windows-10-家庭版开启远程" class="headerlink" title="windows 10 家庭版开启远程"></a>windows 10 家庭版开启远程</h1><p>windows 家庭版的系统默认没有远程功能，大多数的预装正版的系统中无法使用windows自带的远程服务。</p><p>虽然通过绝大多数的第三方程序，都可以实现远程，但是自己之前有搭内网穿透，所以，也想把这个用上。于是又找到一个工具:rdpwrap。下载<a href="https://github.com/stascorp/rdpwrap/releases">请戳</a>。</p><p>选择最新zip包下载。</p><span id="more"></span><h3 id="安装rdpwrap"><a href="#安装rdpwrap" class="headerlink" title="安装rdpwrap"></a>安装rdpwrap</h3><ol><li>解压下载的包装包</li><li>安装程序</li></ol><p>依次运行RDPWinst，install，RDPconf文件。</p><p>RDPconf文件为检测文件，运行后，会发现服务无法启用，会出现Listener state和支持的问题。</p><p>解决办法：使用命令重装安装，比如把文件夹复制到C盘目录下，CMD以管理员身份运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> c:\RDPWrap<br>c:\RDPWrap&gt;RDPWInst.exe -r<br></code></pre></td></tr></table></figure><p>安装后，再次打开RDPConf.exe</p><p>检测已经通过。安装结束。解决方法来自issues。</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>使用内网其它电脑上的RDP工具，远程测试。如果使用的是microsoft账号登录的，则直接使用microsoft认证的信息登录即可。不用使用PIN码登录。</p><p>配置结束。</p>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rdp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>lanproxy 配置</title>
    <link href="/2019/04/25/lanproxy-%E9%85%8D%E7%BD%AE/"/>
    <url>/2019/04/25/lanproxy-%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-18-04搭建lanproxy服务"><a href="#ubuntu-18-04搭建lanproxy服务" class="headerlink" title="ubuntu 18.04搭建lanproxy服务"></a>ubuntu 18.04搭建lanproxy服务</h1><p>linux下的内网穿工作具，实现在没有公网出口环境下的内网设备远程。</p><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>lanproxy是一个内网穿透工具。支持TCP流量转发。用于替代第三方付费工具，比如anydesk、teamview、花生壳等。这些第三方工具在个人使用上存在各种各样的限制，有的时候还非常不便，所以为了顺手，就有了自己搭内网穿透的想法。在内网穿透有选择上，选择了lanproxy。工具主页<a href="https://github.com/ffay/lanproxy">请戳</a>。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li>一台公网服务器(运行lanproxy server)</li><li>一台内网PC或服务器(lanproxy client测试)</li></ol><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><p>lanproxy 后端信赖JAVA。需要选安装jdk，再安装lanproxy。操作如下：</p><h3 id="java安装"><a href="#java安装" class="headerlink" title="java安装"></a>java安装</h3><p>操作系统环境如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -a<br>Linux vultr_vps_server 4.15.0-47-generic <span class="hljs-comment">#50-Ubuntu SMP Wed Mar 13 10:44:52 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span><br></code></pre></td></tr></table></figure><p>直接通过apt源安装openjdk。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install openjdk-11-jdk<br></code></pre></td></tr></table></figure><p>查看JAVA环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">java -version<br>openjdk version <span class="hljs-string">&quot;11.0.2&quot;</span> 2019-01-15<br>OpenJDK Runtime Environment (build 11.0.2+9-Ubuntu-3ubuntu118.04.3)<br>OpenJDK 64-Bit Server VM (build 11.0.2+9-Ubuntu-3ubuntu118.04.3, mixed mode, sharing)<br></code></pre></td></tr></table></figure><h3 id="lanproxy-server安装"><a href="#lanproxy-server安装" class="headerlink" title="lanproxy server安装"></a>lanproxy server安装</h3><p>下载地址<a href="https://seafile.io2c.com/d/2e81550ebdbd416c933f/">请戳</a>，选择server的程序包。下载后上传到服务器上。</p><p>解压缩程序包至需要安装的目录，比如本文示例&#x2F;usr&#x2F;bin&#x2F;proxy-server&#x2F;</p><p>配置文件在程序目录下的conf目录下，名称：config.properties。编辑配置文件，更改登录的用户名和密码。</p><p>配置文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">server.bind=0.0.0.0<br><br><span class="hljs-comment">#与代理客户端通信端口</span><br>server.port=4900<br><br><span class="hljs-comment">#ssl相关配置</span><br>server.ssl.enable=<span class="hljs-literal">true</span><br>server.ssl.bind=0.0.0.0<br>server.ssl.port=4993<br>server.ssl.jksPath=test.jks<br>server.ssl.keyStorePassword=123456<br>server.ssl.keyManagerPassword=123456<br><br><span class="hljs-comment">#这个配置可以忽略</span><br>server.ssl.needsClientAuth=<span class="hljs-literal">false</span><br><br><span class="hljs-comment">#WEB在线配置管理相关信息</span><br>config.server.bind=0.0.0.0<br>config.server.port=8090<br>config.admin.username=admin<br>config.admin.password=admin<br></code></pre></td></tr></table></figure><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><p>在程序目录下的bin目录有服务启动脚本，添加执行权限后，直接运行启动服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">/usr/bin/proxy-server/bin<br><span class="hljs-built_in">chmod</span> +x startup.sh<br>./startup.sh<br></code></pre></td></tr></table></figure><p>对于8090端口和ip访问的方式，可以配置nginx代理，使用域名访问。</p><h3 id="登录配置"><a href="#登录配置" class="headerlink" title="登录配置"></a>登录配置</h3><p>浏览器打开<a href="http://ip:8090/">http://ip:8090</a>，使用配置文件中的用户名和密码登录，至此服务端配置结束。</p><h3 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a>代理配置</h3><p>在客户端管理页添加客户端，添加后会自动生成客户端密钥。</p><p>添加代理端口配置，添加的名称和公网端口，公网端口在防火墙上放通。配置后端IP和端口即为要转发的内网服务器IP和端口。</p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><p>CentOS和Windows各测试一个，CentOS使用JAV客户端，Windows直接使用发布包程序。</p><h3 id="CentOS客户端配置"><a href="#CentOS客户端配置" class="headerlink" title="CentOS客户端配置"></a>CentOS客户端配置</h3><p>安装JAVA环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install java-11-openjdk.x86_64 java-11-openjdk-devel.x86_64<br></code></pre></td></tr></table></figure><p>下载程序包，解压至安装目录，如&#x2F;usr&#x2F;share&#x2F;proxy-java-client&#x2F;</p><p>同样，配置文件在安装目录下的conf目录中。配置文件名称：config.properties。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">client.key=客户端KEY<br>ssl.enable=<span class="hljs-literal">false</span><br>ssl.jksPath=test.jks<br>ssl.keyStorePassword=123456<br><br>server.host=服务端IP<br><br><span class="hljs-comment">#default ssl port is 4993</span><br>server.port=4900<br></code></pre></td></tr></table></figure><p>配置文件结束，返回到上级目录下的bin文件。运行startup.sh。客户端程序启动，在服务端的管理页面中，可以看到已添加的设备在线了。</p><h3 id="Windows客户端的配置"><a href="#Windows客户端的配置" class="headerlink" title="Windows客户端的配置"></a>Windows客户端的配置</h3><p>下载客户端程序，解压后直接放到C盘目录下，连接操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># mac 64位</span><br><span class="hljs-built_in">nohup</span> ./client_darwin_amd64 -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY &amp;<br><br><span class="hljs-comment"># linux 64位</span><br><span class="hljs-built_in">nohup</span> ./client_linux_amd64 -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY &amp;<br><br><span class="hljs-comment"># windows 64 位</span><br>./client_windows_amd64.exe -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY<br></code></pre></td></tr></table></figure><p>查看服务端管理页面，可以看到添加的代理服务器上线。</p><p>配置结束。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>lanproxy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>conky 配置透明度</title>
    <link href="/2019/04/24/conky-%E9%85%8D%E7%BD%AE%E9%80%8F%E6%98%8E%E5%BA%A6/"/>
    <url>/2019/04/24/conky-%E9%85%8D%E7%BD%AE%E9%80%8F%E6%98%8E%E5%BA%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="conky-配置透明度"><a href="#conky-配置透明度" class="headerlink" title="conky 配置透明度"></a>conky 配置透明度</h1><p>ubuntu 桌面上的配置的一个监视窗口，记录备忘。</p><span id="more"></span><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>配置conky后，桌面上会有一个半透明的窗口，在更换壁纸后，半透明窗口内的显示背景仍然为之前的壁纸部分。更改为全透明，即更换壁纸后，窗口一直透明不受壁纸影响操作如下：</p><p>conky 可以使用own_window_argb_visual、own_window_argb_value、own_window_transparent来调节透明特性。这需要窗口管理器支持Xorg复合特性，比如使用compiz或者启用metacity复合特性。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">own_window_argb_visual：布尔值。当为<span class="hljs-literal">true</span>时启用真透明特性<br>own_window_argb_value：当启用真透明时设定不透明度。值的范围是0-255。0是0%不透明度，255是100%不透明<br>own_window_transparent：布尔值。当该值为<span class="hljs-literal">true</span>，并且启用真透明时，设置不透明度为0%<br></code></pre></td></tr></table></figure><p>注意：不要和own_window_type override一起使用。根据conky的文档，这在大多数情况下是无效的，我这里尝试的结果也是如此。<br>所以，如果希望得到完全透明的conky，可以这样设置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">own_window_argb_visual <span class="hljs-literal">true</span><br>own_window_transparent <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>conky</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>checkpwd.sh</title>
    <link href="/2019/04/22/checkpwd-sh/"/>
    <url>/2019/04/22/checkpwd-sh/</url>
    
    <content type="html"><![CDATA[<h1 id="使用密码认证-open-v-p-n"><a href="#使用密码认证-open-v-p-n" class="headerlink" title="使用密码认证*open-[v]-[p]-[n]"></a>使用密码认证*open-[v]-[p]-[n]</h1><p>使用脚本验证实现客户端通过账号密码认证，完成VPN接入。</p><span id="more"></span><h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p>服务端追加配置项如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">auth-user-pass-verify /etc/openvpn/checkpsw.sh via-env<br></code></pre></td></tr></table></figure><p>在目录上添加配置脚本，脚本内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/sh</span><br><span class="hljs-comment">###########################################################</span><br><span class="hljs-comment"># checkpsw.sh (C) 2004 Mathias Sundman &lt;mathias@openvpn.se&gt;</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># This script will authenticate OpenVPN users against</span><br><span class="hljs-comment"># a plain text file. The passfile should simply contain</span><br><span class="hljs-comment"># one row per user with the username first followed by</span><br><span class="hljs-comment"># one or more space(s) or tab(s) and then the password.</span><br><br>PASSFILE=<span class="hljs-string">&quot;/etc/openvpn/pwd-file&quot;</span><br>LOG_FILE=<span class="hljs-string">&quot;/var/log/openvpn-password.log&quot;</span><br>TIME_STAMP=`<span class="hljs-built_in">date</span> <span class="hljs-string">&quot;+%Y-%m-%d %T&quot;</span>`<br><br><span class="hljs-comment">###########################################################</span><br><br><span class="hljs-keyword">if</span> [ ! -r <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;PASSFILE&#125;</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;TIME_STAMP&#125;</span>: Could not open password file \&quot;<span class="hljs-variable">$&#123;PASSFILE&#125;</span>\&quot; for reading.&quot;</span> &gt;&gt; <span class="hljs-variable">$&#123;LOG_FILE&#125;</span><br>  <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br>CORRECT_PASSWORD=`awk <span class="hljs-string">&#x27;!/^;/&amp;&amp;!/^#/&amp;&amp;$1==&quot;&#x27;</span><span class="hljs-variable">$&#123;username&#125;</span><span class="hljs-string">&#x27;&quot;&#123;print $2;exit&#125;&#x27;</span> <span class="hljs-variable">$&#123;PASSFILE&#125;</span>`<br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CORRECT_PASSWORD&#125;</span>&quot;</span> = <span class="hljs-string">&quot;&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;TIME_STAMP&#125;</span>: User does not exist: username=\&quot;<span class="hljs-variable">$&#123;username&#125;</span>\&quot;, password=\&quot;<span class="hljs-variable">$&#123;password&#125;</span>\&quot;.&quot;</span> &gt;&gt; <span class="hljs-variable">$&#123;LOG_FILE&#125;</span><br>  <span class="hljs-built_in">exit</span> 1<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-keyword">if</span> [ <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;password&#125;</span>&quot;</span> = <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;CORRECT_PASSWORD&#125;</span>&quot;</span> ]; <span class="hljs-keyword">then</span><br>  <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;TIME_STAMP&#125;</span>: Successful authentication: username=\&quot;<span class="hljs-variable">$&#123;username&#125;</span>\&quot;.&quot;</span> &gt;&gt; <span class="hljs-variable">$&#123;LOG_FILE&#125;</span><br>  <span class="hljs-built_in">exit</span> 0<br><span class="hljs-keyword">fi</span><br><br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;TIME_STAMP&#125;</span>: Incorrect password: username=\&quot;<span class="hljs-variable">$&#123;username&#125;</span>\&quot;, password=\&quot;<span class="hljs-variable">$&#123;password&#125;</span>\&quot;.&quot;</span> &gt;&gt; <span class="hljs-variable">$&#123;LOG_FILE&#125;</span><br><span class="hljs-built_in">exit</span> 1<br></code></pre></td></tr></table></figure><h3 id="客户端楝"><a href="#客户端楝" class="headerlink" title="客户端楝"></a>客户端楝</h3><p>客户端配置追加一条配置信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">auth-user-pass<br></code></pre></td></tr></table></figure><h3 id="证书的撤销"><a href="#证书的撤销" class="headerlink" title="证书的撤销"></a>证书的撤销</h3><p>添加多个用户后，对用户的撤销操作如下“</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ./vars<br>NOTE: If you run ./clean-all, I will be doing a <span class="hljs-built_in">rm</span> -rf on /home/your_name/openvpn-ca/keys<br><br>./revoke-full client1<br>Using configuration from /home/yourname/openvpn-ca/openssl.cnf<br>Revoking Certificate 02.<br>Data Base Updated<br>Using configuration from /home/yourname/openvpn-ca/openssl.cnf<br>C = your country, ST = your province , L = your city, O = your org, OU = your unit, CN = client1, name = server, emailAddress = yourname@abc.com <br>error 23 at 0 depth lookup: certificate revoked<br>error client1.crt: verification failed<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu change default torrent program</title>
    <link href="/2019/04/22/ubuntu-change-default-torrent-program/"/>
    <url>/2019/04/22/ubuntu-change-default-torrent-program/</url>
    
    <content type="html"><![CDATA[<h1 id="更改默认磁力链下载工具"><a href="#更改默认磁力链下载工具" class="headerlink" title="更改默认磁力链下载工具"></a>更改默认磁力链下载工具</h1><p>ubuntu 默认的连接力下载工具为Transmission。后面自己又下载了Deluge，安装后即更改了默认的磁力链下载为Deluge。后面发现，默认的Transmission工具对Tracker服务器的编辑比较方便，准备将默认的下载工具改回Transmission。</p><span id="more"></span><p>操作如下：</p><h3 id="查看默认注册的磁力链下载工具"><a href="#查看默认注册的磁力链下载工具" class="headerlink" title="查看默认注册的磁力链下载工具"></a>查看默认注册的磁力链下载工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gio mime x-scheme-handler/magnet<br></code></pre></td></tr></table></figure><p>输出如下：</p><blockquote><p>Default application for “x-scheme-handler&#x2F;magnet”: transmission-gtk.desktop<br>已注册的应用程序：<br>transmission-gtk.desktop<br>deluge.desktop<br>webtorrent-desktop.desktop<br>推荐的应用程序：<br>transmission-gtk.desktop<br>deluge.desktop<br>webtorrent-desktop.desktop  </p></blockquote><p>如上图，默认的已经更改为Transmission-gtk.desktop。</p><h3 id="更改默认的磁力链下载工具"><a href="#更改默认的磁力链下载工具" class="headerlink" title="更改默认的磁力链下载工具"></a>更改默认的磁力链下载工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gio mime x-scheme-handler/magnet transmission-gtk.desktop<br></code></pre></td></tr></table></figure><p>如果是更改为Deluge，则更改如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gio mime x-scheme-handler/magnet deluge.desktop<br></code></pre></td></tr></table></figure><p>同理，以上系统注册了三个应用程序，更改为其它的也是一样操作，后面的启动程序文件更改一下就可以了。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux下的病毒防护</title>
    <link href="/2019/04/18/linux%E4%B8%8B%E7%9A%84%E7%97%85%E6%AF%92%E9%98%B2%E6%8A%A4/"/>
    <url>/2019/04/18/linux%E4%B8%8B%E7%9A%84%E7%97%85%E6%AF%92%E9%98%B2%E6%8A%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="Linux-下的病毒防护"><a href="#Linux-下的病毒防护" class="headerlink" title="Ｌinux 下的病毒防护"></a>Ｌinux 下的病毒防护</h1><p>没有绝对安全的系统，linux下也存在病毒及安全后门。记录linux下的杀毒引擎clamav的安装及使用。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>CentOS直接通过yum安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install epel-release -y<br>sudo yum install clamav -y<br></code></pre></td></tr></table></figure><p>Ubuntu直接通过atp安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install clamav<br></code></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>安装后，更新病毒库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># freshclam</span><br><span class="hljs-comment"># 输出如下：</span><br>...............<br>ClamAV update process started at Sun Apr  7 11:10:18 2019<br>Downloading main.cvd [100%]<br>main.cvd updated (version: 58, sigs: 4566249, f-level: 60, builder: sigmgr)<br>Downloading daily.cvd [100%]<br>daily.cvd updated (version: 25422, sigs: 1552110, f-level: 63, builder: raynman)<br>Downloading bytecode.cvd [100%]<br>bytecode.cvd updated (version: 328, sigs: 94, f-level: 63, builder: neo)<br>[LibClamAV] ******************************************************<br>[LibClamAV] ***      Virus database timestamp <span class="hljs-keyword">in</span> the future!   ***<br>[LibClamAV] ***  Please check the timezone and clock settings  ***<br>[LibClamAV] ******************************************************<br>Database updated (6118453 signatures) from database.clamav.net (IP: 104.16.219.84)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>clamav</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu下的一些小折腾</title>
    <link href="/2019/04/17/ubuntu%E4%B8%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%98%E8%85%BE/"/>
    <url>/2019/04/17/ubuntu%E4%B8%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%98%E8%85%BE/</url>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu-18-04-小问题"><a href="#Ubuntu-18-04-小问题" class="headerlink" title="Ubuntu 18.04 小问题"></a>Ubuntu 18.04 小问题</h1><p>记录ubuntu 18.04安装后的一些小问题，以及解决方法，备用。</p><span id="more"></span><h2 id="ibus候选词方块"><a href="#ibus候选词方块" class="headerlink" title="ibus候选词方块"></a>ibus候选词方块</h2><ul><li>问题描述</li></ul><p>默认的ibus输入法，在输入中文的时候，会出现候选词为方块的现象，原因大致为输入法码表与系统字体渲染的问题。即码表中字符在系统的字体库中找不到对应的字体。虽然不影响使用，且码表中匹配的字大都为繁体或生僻字，看到方块，总有一种要干掉方块字的冲动。尝试把系统字体更改为思源黑体，不过输入法候选词中仍然存在方块。更改输入法显示字体：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ibus-setup<br></code></pre></td></tr></table></figure><p>更改如图：</p><p><img src="https://blog.ywmy.xyz/linux/ibus_setup.png" alt="ibus-setup"></p><p>尝试安装更多字符集的字体库，如明朝花园Ｂ。</p><p>下载链接<a href="https://github.com/tony/dot-fonts">请戳</a></p><p>补充CJK字体在不同程序之间输入显示的一个小问题，比如码表同[IDRN]源下加心，𢢵.这个字在VS CODE中可以显示，谷歌浏览器中也可以正常显示，在WPS中则显示为潮。</p><h2 id="vs-code-power-line-font"><a href="#vs-code-power-line-font" class="headerlink" title="vs code power-line font"></a>vs code power-line font</h2><ul><li>问题描述</li></ul><p>在昨天没事的时候，把系统的默认的bash更改为zsh，并配置了美化，oh my zsh。</p><p>终端上可以很赏心悦目了，不过在打开vs code的时候，调用zsh会出现power-line字体不显示的问题，具体可看下图：</p><p><img src="https://blog.ywmy.xyz/linux/vs_code_powerline.png" alt="vs_code_powerline"></p><ul><li>解决办法</li></ul><p>a. 安装power-line字体</p><p>下载<a href="https://github.com/abertsch/Menlo-for-Powerline">请戳</a></p><p>b. 配置vs code</p><p>操作步骤：设置－&gt;打开json设置-&gt;输入以下调用字体信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br><span class="hljs-string">&quot;terminal.integrated.fontFamily&quot;</span>: <span class="hljs-string">&quot;Menlo for Powerline&quot;</span>,<br>&#125;<br></code></pre></td></tr></table></figure><p>参考下图：</p><p><img src="https://blog.ywmy.xyz/linux/vs_code_powerline_set.png" alt="vs_code_powerline_set"></p><p>完成设置后，显示效果生效，参考下图：</p><p><img src="https://blog.ywmy.xyz/linux/vs_code_json_set.png" alt="vs_code_json_ser"></p><p><a href="https://dev.to/mattstratton/making-powerline-work-in-visual-studio-code-terminal-1m7">参考链接</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>记一些ubuntu 18.04的小毛病</title>
    <link href="/2019/04/13/%E8%AE%B0%E4%B8%80%E4%BA%9Bubuntu-18-04%E7%9A%84%E5%B0%8F%E6%AF%9B%E7%97%85/"/>
    <url>/2019/04/13/%E8%AE%B0%E4%B8%80%E4%BA%9Bubuntu-18-04%E7%9A%84%E5%B0%8F%E6%AF%9B%E7%97%85/</url>
    
    <content type="html"><![CDATA[<h2 id="Ubuntu-18-04个人使用问题汇总"><a href="#Ubuntu-18-04个人使用问题汇总" class="headerlink" title="Ubuntu 18.04个人使用问题汇总"></a>Ubuntu 18.04个人使用问题汇总</h2><p>使用桌面版的ubuntu，总会有一些小问题，也经常会疑惑，好好的用着，怎么突然就不行了呢。本着能折腾就折腾的原则，记录一下，目前遇到的，比较深刻的小问题。</p><h3 id="启动后无法进入X-org环境"><a href="#启动后无法进入X-org环境" class="headerlink" title="启动后无法进入X.org环境"></a>启动后无法进入X.org环境</h3><p>在一次更新操作后，重启了，选择X.org进入后，只有桌面壁纸，鼠标键盘无反应。</p><p>但是进入Wayland环境没有问题，正常操作。</p><p>记录以下操作：</p><p>因为也确实不清楚原因。大概能猜到和桌面环境有关系。</p><p>操作尝试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install ubuntu-desktop<br>sudo apt install xserver-xong-input-all<br>sudo apt install input-utils<br></code></pre></td></tr></table></figure><p>结束后，重启，进入X.org桌面，好了。正常操作了。</p><h3 id="QT5程序缩放不正常"><a href="#QT5程序缩放不正常" class="headerlink" title="QT5程序缩放不正常"></a>QT5程序缩放不正常</h3><p>同样在一次电脑启动后，发现一个常用的程序，QT5界面本来运行时，正常的图标，变小了，窗口变大了，字体变模糊了，而且，窗口调整还不正常。</p><p>试了一下另外一个QT5写的程序，stacer。打开发现，比例倒是正常的，缩放比正常大了两倍左右，字体显示倒是正常。</p><p>还有一个也是天天用的。网易云音乐，打开后，也是比正常缩放大了两倍左右，字体也模糊。系统程序都是正常的，想了一下，应该是QT5程序的问题。</p><p>百度关键字，QT5 缩放，还真有和QT 5相关各种缩放问题，再想到是不是和屏幕分辨训练场有关，自己屏幕是1080P的，检索关键字：QT5 HiDPI scaling gonme 3，比如这篇<a href="https://unix.stackexchange.com/questions/433385/scaling-hidpi-issue-for-qt5-applications-under-gnome">请戳</a>。还有一篇，也是写到高分辨率下的缩放问题，据说是一个多年没人管的BUG，链接<a href="https://my.oschina.net/flywuya/blog/1797527">请戳</a>。</p><p>好了，这次明白了，思路就是启动程序时手动调整绽放比例，或者是调字体DPI。</p><p>最后给个直接改启动参数的方法。效果是出来了，也算是正常使用了。</p><p>参考网易云音乐的启动参数，字体显示正常，缩放不正常的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /usr/share/applications/netease-cloud-music.desktop<br><br>[Desktop Entry]<br>Version=1.0<br>Type=Application<br>Name=NetEase Cloud Music<br>Name[zh_CN]=网易云音乐<br>Name[zh_TW]=網易雲音樂<br>Comment=NetEase Cloud Music<br>Comment[zh_CN]=网易云音乐<br>Comment[zh_TW]=網易雲音樂<br>Icon=netease-cloud-music<br>Exec=sh -c <span class="hljs-string">&quot;unset SESSION_MANAGER &amp;&amp; netease-cloud-music %U&quot;</span><br>Categories=AudioVideo;Player;<br>Terminal=<span class="hljs-literal">false</span><br>StartupNotify=<span class="hljs-literal">true</span><br>StartupWMClass=netease-cloud-music<br>MimeType=audio/aac;audio/flac;audio/mp3;audio/mp4;audio/mpeg;audio/ogg;audio/x-ape;audio/x-flac;audio/x-mp3;audio/x-mpeg;audio/x-ms-wma;audio/x-vorbis;audio/x-vorbis+ogg;audio/x-wav;<br>Exec=<span class="hljs-built_in">env</span> QT_SCALE_FACTOR=0.5 /usr/bin/netease-cloud-music   <span class="hljs-comment">#这一行，启动时调整绽放比例</span><br></code></pre></td></tr></table></figure><p>参考stacer启动参数，绽放和字体都不正常的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /usr/share/applications/stacer.desktop <br><br>[Desktop Entry]<br>Name=Stacer<br>Exec=stacer<br>Comment=Linux System Optimizer and Monitoring<br>Icon=stacer<br>Type=Application<br>Terminal=<span class="hljs-literal">false</span><br>Encoding=UTF-8<br>Categories=Utility;<br>Exec=<span class="hljs-built_in">env</span> QT_SCALE_FACTOR=0.5 QT_FONT_DPI=180 /usr/share/stacer/stacer  <span class="hljs-comment">#这一行，既调比例，也调DPI</span><br></code></pre></td></tr></table></figure><p>缩放比例和字体渲染，看自已屏幕分辨率，调整完后，试一下程序启动后的效果。好了，这个问题也算是处理结束。</p><p>再一次回到第一个问题上，Wayland环境上，基本自己使用的程序都能正常使用。有一点，自己买了一块wacom的手绘板，github上有一个linux wacom project的项目，可以支持linux使用手绘板。不过一个小问题，手绘板在wayland上使用的时候，手绘笔没办法选取程序的菜单项，暂时应该无解。所以默认就X.org环境启动系统使用了。</p><p>小记结束。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 18.04 安装 nginx</title>
    <link href="/2019/04/12/ubuntu-18-04-%E5%AE%89%E8%A3%85-nginx/"/>
    <url>/2019/04/12/ubuntu-18-04-%E5%AE%89%E8%A3%85-nginx/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-18-04-安装-nginx"><a href="#ubuntu-18-04-安装-nginx" class="headerlink" title="ubuntu 18.04 安装 nginx"></a>ubuntu 18.04 安装 nginx</h1><p>服务器上安装了两个服务。通过外网加端口访问。需求通过nginx代理访问两个服务。操作记录备忘。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>ubuntu 18.04,非root，常规用户账户。</p><h2 id="Step1-Installing-Nginx"><a href="#Step1-Installing-Nginx" class="headerlink" title="Step1-Installing Nginx"></a>Step1-Installing Nginx</h2><p>Ubuntu 18.04默认软件库中包含Nginx包。所以可以直接通过apt包管理工具进行安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br>sudo apt install nginx<br></code></pre></td></tr></table></figure><h2 id="Step2-Adjusting-the-Firewall"><a href="#Step2-Adjusting-the-Firewall" class="headerlink" title="Step2-Adjusting the Firewall"></a>Step2-Adjusting the Firewall</h2><p>在进行Nginx测试之前，需求调整防火墙设置放通Nginx服务。</p><p>相看ufw应用列表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw app list<br></code></pre></td></tr></table></figure><p>输出内容:</p><blockquote><p>Available applications:<br>Nginx Full<br>Nginx HTTP<br>Nginx HTTPS</p></blockquote><p>如所见，Nginx Full即放通80和443，Nginx HTTP即放通80，Nginx HTTPS即放通443。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw allow <span class="hljs-string">&#x27;Nginx FULL&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="Step3-Checking-your-Web-Server"><a href="#Step3-Checking-your-Web-Server" class="headerlink" title="Step3-Checking your Web Server"></a>Step3-Checking your Web Server</h2><p>安装结束，程序服务就会启用。通过systemctl查看Nginx相关的进程信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl status nginx <br><br>● nginx.service - A high performance web server and a reverse proxy server<br>   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)<br>   Active: active (running) since Sat 2019-04-13 09:41:04 UTC; 10s ago<br>     Docs: man:nginx(8)<br>  Process: 4576 ExecStop=/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid (code=exited, status=2)<br>  Process: 4586 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exited, status=0/SUCCESS)<br>  Process: 4577 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=0/SUCCESS)<br> Main PID: 4589 (nginx)<br>    Tasks: 2 (<span class="hljs-built_in">limit</span>: 1110)<br>   CGroup: /system.slice/nginx.service<br>           ├─4589 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;<br>           └─4593 nginx: worker process<br><br>Apr 13 09:41:04 vultr_vps_server systemd[1]: Starting A high performance web server and a reverse proxy server...<br></code></pre></td></tr></table></figure><p>安装程序结束。</p><p>一个小问题：启动后的nginx有一个状态问题：</p><blockquote><p>nginx.service: Failed to parse PID from file &#x2F;run&#x2F;nginx.pid: Invalid argument</p></blockquote><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">Workaround:<br><br> <span class="hljs-built_in">mkdir</span> /etc/systemd/system/nginx.service.d<br> <span class="hljs-built_in">printf</span> <span class="hljs-string">&quot;[Service]\nExecStartPost=/bin/sleep 0.1\n&quot;</span> &gt; /etc/systemd/system/nginx.service.d/override.conf<br> systemctl daemon-reload<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nginx</tag>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 18.04 安装 lanproxy</title>
    <link href="/2019/04/11/ubuntu-18-04-%E5%AE%89%E8%A3%85-lanproxy/"/>
    <url>/2019/04/11/ubuntu-18-04-%E5%AE%89%E8%A3%85-lanproxy/</url>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu-18-04-安装-lanproxy"><a href="#Ubuntu-18-04-安装-lanproxy" class="headerlink" title="Ubuntu 18.04 安装 lanproxy"></a>Ubuntu 18.04 安装 lanproxy</h1><p>ubuntu 环境安装lanproxy作为内网穿透的服务器，操作记录备忘。</p><span id="more"></span><p>lanproxy git-hub地址<a href="https://github.com/ffay/lanproxy">请戳</a></p><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>lanproxy依赖于java。服务端安装java通过包管理工具实现如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install default-jdk<br><br>java --version<br>openjdk 10.0.2 2018-07-17<br>OpenJDK Runtime Environment (build 10.0.2+13-Ubuntu-1ubuntu0.18.04.4)<br>OpenJDK 64-Bit Server VM (build 10.0.2+13-Ubuntu-1ubuntu0.18.04.4, mixed mode)<br></code></pre></td></tr></table></figure><h3 id="下载服务端"><a href="#下载服务端" class="headerlink" title="下载服务端"></a>下载服务端</h3><p>本文直接是先下载到自己电脑，然后上传至服务器，方式随意。下载地址<a href="https://github.com/ffay/lanproxy/releases">请戳</a></p><p>上传通过sftp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">sftp -i identify_file -P port user@host<br>....<br>&gt; put local_file remote_host_directory  <span class="hljs-comment">#上传至远程目录</span><br>....<br>退出sftp程序<br></code></pre></td></tr></table></figure><h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p>登录远程主机，将程序包解压，把程序文件移动到你想要放置的路径如&#x2F;usr&#x2F;bin&#x2F;</p><blockquote><p>&#x2F;usr&#x2F;bin&#x2F;proxy-server  </p></blockquote><p>大概以上路径。</p><p>配置文件在程序的config目录下，名字为：config.properties</p><p>内容如下：</p><blockquote><p>server.bind&#x3D;0.0.0.0<br>server.port&#x3D;4900</p><p>server.ssl.enable&#x3D;true<br>server.ssl.bind&#x3D;0.0.0.0<br>server.ssl.port&#x3D;4993<br>server.ssl.jksPath&#x3D;test.jks<br>server.ssl.keyStorePassword&#x3D;123456<br>server.ssl.keyManagerPassword&#x3D;123456<br>server.ssl.needsClientAuth&#x3D;false  </p><p>config.server.bind&#x3D;0.0.0.0<br>config.server.port&#x3D;8090<br>config.admin.username&#x3D;admin<br>config.admin.password&#x3D;admin  </p></blockquote><p>按需要更改。</p><h3 id="防火墙放通端口"><a href="#防火墙放通端口" class="headerlink" title="防火墙放通端口"></a>防火墙放通端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw allow 8090/tcp <br>sudo ufw reload<br></code></pre></td></tr></table></figure><h3 id="服务器测试"><a href="#服务器测试" class="headerlink" title="服务器测试"></a>服务器测试</h3><p>运行服务端，启动程序脚本在程序目录bin文件夹下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ./startup.sh<br></code></pre></td></tr></table></figure><p>打开IP:8090。程序运行。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>lanproxy</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 18.04 安装wireshark</title>
    <link href="/2019/04/11/ubuntu-18-04-%E5%AE%89%E8%A3%85wireshark/"/>
    <url>/2019/04/11/ubuntu-18-04-%E5%AE%89%E8%A3%85wireshark/</url>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu-18-04-安装-wireshark"><a href="#Ubuntu-18-04-安装-wireshark" class="headerlink" title="Ubuntu 18.04 安装 wireshark"></a>Ubuntu 18.04 安装 wireshark</h1><p>ubuntu 安装 wireshark，并配置非root用户选取网卡问题。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install wireshark wireshark-common<br></code></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>非root用户下的wireshark没有抓包权限</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li>以root用户运行</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo wireshark<br></code></pre></td></tr></table></figure><ol start="2"><li>配置非root用户抓包</li></ol><p>安装完成后，wireshark文档中有相应的处理方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gzip -d /usr/share/doc/wireshark-common/README.Debian.gz<br></code></pre></td></tr></table></figure><p>解压文档后，可以参考操作方法如下：</p><blockquote><p>sudo usermod -a -G wireshark {username}</p></blockquote><p>或者</p><blockquote><p>sudo gpasswd -a your_name wireshark  </p></blockquote><p>重新配置抓取权限</p><blockquote><p>sudo dpkg-reconfigure wireshark-common<br>“Should non-superusers be able to capture packages?”<br>选择yes(默认是no)</p></blockquote><p>注销用户或重启，再次打开wireshark，正常选取网卡列表。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>wireshark</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>华为交换机清除console密码</title>
    <link href="/2019/04/11/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E6%B8%85%E9%99%A4console%E5%AF%86%E7%A0%81/"/>
    <url>/2019/04/11/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E6%B8%85%E9%99%A4console%E5%AF%86%E7%A0%81/</url>
    
    <content type="html"><![CDATA[<h1 id="化为交换机清除console密码"><a href="#化为交换机清除console密码" class="headerlink" title="化为交换机清除console密码"></a>化为交换机清除console密码</h1><p>经常会接触到一种情况，有一台设备，网络出问题了，不知道是谁配置了管理信息或给到的信息已经不正确。这个时候，就可用到console连接，可以尝试重置console 密码，登录后再进行配置。</p><span id="more"></span><h2 id="操作的前置条件"><a href="#操作的前置条件" class="headerlink" title="操作的前置条件"></a>操作的前置条件</h2><p>昨天下午在准备查看一台交换机配置的时候，发现原来给的登录信息已经不正确了。就想着用console登录试试，发现console登录也设置了用户名和密码，于是只能想到通过启动菜单来尝试清除密码了。</p><div class="note note-warning">            <p>这个操作有前提，即开机启动菜单的密码为初始缺省值，没有单独设置过。</p>          </div><p>如果这个也改过，那直接化为400售后吧。</p><p>操作如下：</p><h2 id="启动菜单默认密码"><a href="#启动菜单默认密码" class="headerlink" title="启动菜单默认密码"></a>启动菜单默认密码</h2><ul><li>Console&#x2F;telnet登录(框式&#x2F;盒式)</li></ul><table><thead><tr><th>版本</th><th>缺省用户名</th><th>缺省密码</th><th>缺省级别</th></tr></thead><tbody><tr><td>V1R3C00</td><td>N&#x2F;A</td><td>N&#x2F;A</td><td>N&#x2F;A</td></tr><tr><td>V1R5C01</td><td>N&#x2F;A</td><td>N&#x2F;A</td><td>N&#x2F;A</td></tr><tr><td>V1R6C00－V1R6C05</td><td>N&#x2F;A</td><td>N&#x2F;A</td><td>N&#x2F;A</td></tr><tr><td>V2R2C00－V2R6C00</td><td>N&#x2F;A</td><td>N&#x2F;A</td><td>N&#x2F;A</td></tr></tbody></table><ul><li>Web登录(框式&#x2F;盒式)</li></ul><table><thead><tr><th>版本</th><th>缺省用户名</th><th>缺省密码</th><th>缺省级别</th></tr></thead><tbody><tr><td>V1R3C00</td><td>admin</td><td>admin</td><td>0</td></tr><tr><td>V1R5C01</td><td>admin</td><td>admin</td><td>0</td></tr><tr><td>V1R6C00</td><td>admin</td><td>admin</td><td>0</td></tr><tr><td>V1R6C05</td><td>admin</td><td><a href="mailto:&#x61;&#x64;&#109;&#x69;&#x6e;&#x40;&#x68;&#117;&#x61;&#x77;&#x65;&#105;&#x2e;&#x63;&#x6f;&#109;">&#x61;&#x64;&#109;&#x69;&#x6e;&#x40;&#x68;&#117;&#x61;&#x77;&#x65;&#105;&#x2e;&#x63;&#x6f;&#109;</a></td><td>0</td></tr><tr><td>V2R1C00</td><td>admin</td><td>admin</td><td>0</td></tr><tr><td>V2R3C00-V2R6C00</td><td>admin</td><td><a href="mailto:&#97;&#x64;&#x6d;&#105;&#110;&#64;&#104;&#x75;&#97;&#x77;&#x65;&#x69;&#x2e;&#99;&#111;&#109;">&#97;&#x64;&#x6d;&#105;&#110;&#64;&#104;&#x75;&#97;&#x77;&#x65;&#x69;&#x2e;&#99;&#111;&#109;</a></td><td>0</td></tr></tbody></table><ul><li>BootROM(框式&#x2F;盒式)</li></ul><table><thead><tr><th>版本</th><th>缺省用户名</th><th>缺省密码</th><th>缺省级别</th></tr></thead><tbody><tr><td>V1R3C00</td><td>N&#x2F;A</td><td>9300</td><td>无</td></tr><tr><td>V1R5C01</td><td>N&#x2F;A</td><td>huawei</td><td>无</td></tr><tr><td>V1R6C00</td><td>N&#x2F;A</td><td>9300(框式)</td><td>无</td></tr><tr><td>V1R6C00</td><td>N&#x2F;A</td><td>huawei(盒式)</td><td>无</td></tr></tbody></table><h2 id="恢复console密码"><a href="#恢复console密码" class="headerlink" title="恢复console密码"></a>恢复console密码</h2><ol><li><p>设备断电</p></li><li><p>重新加电</p></li><li><p>电脑连CONSOLE口</p></li><li><p>按CTRL＋B键加载BOOT MENU<br>加载图如下：</p><p><img src="https://blog.ywmy.xyz/network/huawei_boot_menu.png" alt="huawei_boot_memu"></p></li><li><p>清除console密码</p><p> 加载图如下：</p><p> <img src="https://blog.ywmy.xyz/network/clean_password_for_console_user.png" alt="clean_passwrod_for_console_user"></p></li><li><p>恢复默认启动项</p><p>加载图如下：</p><p><img src="https://blog.ywmy.xyz/network/boot_with_default_mode.png" alt="boot_with_default_mode"></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>console</tag>
      
      <tag>huawei</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS 环境变量配置错误</title>
    <link href="/2019/04/09/CentOS-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF/"/>
    <url>/2019/04/09/CentOS-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-环境变量配置错误"><a href="#CentOS-环境变量配置错误" class="headerlink" title="CentOS 环境变量配置错误"></a>CentOS 环境变量配置错误</h1><p>今天在配置Maven时，写入一条环境变量，在重新应用环境变量后，发现只有cd命令可以用了。其它命令都不可用。记录解决办法备用。</p><span id="more"></span><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/bin/sudo /bin/vim /etc/profile<br></code></pre></td></tr></table></figure><p>把之前配置的环境变量删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/bin/sudo reboot<br></code></pre></td></tr></table></figure><p>重启服务器，重启后，应用新的环境变量。命令正常使用。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>env</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ssh signing failed</title>
    <link href="/2019/04/04/ssh-signing-failed/"/>
    <url>/2019/04/04/ssh-signing-failed/</url>
    
    <content type="html"><![CDATA[<h1 id="ssh-signing-faild"><a href="#ssh-signing-faild" class="headerlink" title="ssh signing faild"></a>ssh signing faild</h1><p>处理重新系统后，之前保存的ssh pubkey 远程登录问题，记录备忘。</p><span id="more"></span><p>前言，自己电脑重装后，把原来的ssh key文件重新拷贝到了新的系统。尝试通过KEY登录远程主机，发现报错如下：</p><blockquote><p>ssh: sign_and_send_pubkey: signing failed: agent refused operation  </p></blockquote><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>选查看文件属性。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chown</span> yourname:yourname ~./ssh/*<br></code></pre></td></tr></table></figure><p>查看已添加的KEY</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-add -l<br></code></pre></td></tr></table></figure><p>更改key读写权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 600 ~./ssh/*<br></code></pre></td></tr></table></figure><p>好了。问题解决。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ssh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu shadow-socket</title>
    <link href="/2019/04/04/ubuntu-shadow-socket/"/>
    <url>/2019/04/04/ubuntu-shadow-socket/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-shadow-socket"><a href="#ubuntu-shadow-socket" class="headerlink" title="ubuntu shadow-socket"></a>ubuntu shadow-socket</h1><p>shadowsocks is a fast tunnel proxy that helps you bypass firewalls.</p><span id="more"></span> <h2 id="0x01-install"><a href="#0x01-install" class="headerlink" title="0x01 install"></a>0x01 install</h2><ul><li>ubuntu</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install python-pip<br>pip install shadowsocks<br></code></pre></td></tr></table></figure><p>or </p><p>install pip</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://bootstrap.pypa.ip/get-pip.py<br>python get-pip.py<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo easy_install shadowsocks<br></code></pre></td></tr></table></figure><ul><li>centos</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install python-setuptool &amp;&amp; easy_install pip<br>pip install shadowsocks<br></code></pre></td></tr></table></figure><h2 id="0x02-config-file"><a href="#0x02-config-file" class="headerlink" title="0x02 config_file"></a>0x02 config_file</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/shadowsocks.json<br><br>&#123; <br>   <span class="hljs-string">&quot;server&quot;</span>:<span class="hljs-string">&quot;my_server_ip&quot;</span>, <br>   <span class="hljs-string">&quot;server_port&quot;</span>:25, <br>   <span class="hljs-string">&quot;local_address&quot;</span>: <span class="hljs-string">&quot;127.0.0.1&quot;</span>, <br>   <span class="hljs-string">&quot;local_port&quot;</span>:1080, <br>   <span class="hljs-string">&quot;password&quot;</span>:<span class="hljs-string">&quot;mypassword&quot;</span>,<br>   <span class="hljs-string">&quot;timeout&quot;</span>:300, <br>   <span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-string">&quot;aes-256-cfb&quot;</span>, <br>   <span class="hljs-string">&quot;fast_open&quot;</span>: <span class="hljs-literal">false</span><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="0x03-start-server"><a href="#0x03-start-server" class="headerlink" title="0x03 start server"></a>0x03 start server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssserver -c /etc/shadowsocks.json<br></code></pre></td></tr></table></figure><p>后台启动和停止服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssserver -c /etc/shadowsocks.json -d start <br>ssserver -c /etc/shadowsocks.json -d stop<br></code></pre></td></tr></table></figure><h2 id="0X04-download"><a href="#0X04-download" class="headerlink" title="0X04 download"></a>0X04 download</h2><p>下载<a href="https://github.com/shadowsocks">请戳</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 7 zabbix proxy</title>
    <link href="/2019/04/04/centos-7-zabbix-proxy/"/>
    <url>/2019/04/04/centos-7-zabbix-proxy/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-安装配置Zabbix-Proxy"><a href="#CentOS-7-安装配置Zabbix-Proxy" class="headerlink" title="CentOS 7 安装配置Zabbix Proxy"></a>CentOS 7 安装配置Zabbix Proxy</h1><p>最近想重新搭建一台zabbix代理，发现zabbix官方的源已经没有办法访问了，试了一下，把zabbix源换成阿里云的，结果安装的时候部分依赖的还是有问题。想想还是直接下载源码包安装省事。之前搭建的zabbix是3.4.15版本的，就下载了3.4.15的源码。安装如下操作，备忘。</p><span id="more"></span><h2 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h2><p>  安装mariadb </p><p>可以参考链接<a href="https://www.ywmy.xyz/2018/08/20/centos%E5%AE%89%E8%A3%85mariadb/">centos 安装 mariadb</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install mariadb mariadb-server<br></code></pre></td></tr></table></figure><ul><li>启用服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start mariadb<br>systemctl status mariadb <br>systemctl <span class="hljs-built_in">enable</span> mariadb    //开机自启动<br></code></pre></td></tr></table></figure><h2 id="安装zabbix守护进程"><a href="#安装zabbix守护进程" class="headerlink" title="安装zabbix守护进程"></a>安装zabbix守护进程</h2><p>1 下载源代码归档</p><p>下载地址<a href="https://www.zabbix.com/cn/download_sources">zabbix proxy download page</a>，下载，解压源码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -zxvf zabbix-3.4.15.tar.gz<br></code></pre></td></tr></table></figure><p>2 创建用户</p><p>对于zabbix的守护进程，需要一个无特权的用户。如果zabbix守护进程以一个无特权的用户启动，那么它会使用该用户运行。<br>然而，如果守护进程以root用户启动，它会切换为zabbix用户账户，且这个用户必须存在。创建如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">groupadd --system zabbix<br>useradd --system -g zabbix -d /usr/lib/zabbix -s /sbin/nologin -C <span class="hljs-string">&quot;Zabbix Monitoring System&quot;</span>  zabbix<br></code></pre></td></tr></table></figure><p>3 创建数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql -u root -p<br>password<br>mysql &gt; create database zabbix_proxy character <span class="hljs-built_in">set</span> utf8 collate utf8_bin;<br>mysql &gt; grant all privileges on zabbix_proxy.* to zabbix@localhost identified by <span class="hljs-string">&#x27;password&#x27;</span>;<br>mysql &gt; quit;<br></code></pre></td></tr></table></figure><p>4 导入数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql -u zabbix -p<br>password:<br>mysql &gt; use zabbix_proxy;<br>mysql &gt; <span class="hljs-built_in">source</span> zabbix源码数据库文件路径/schema.sql<br>mysql &gt; quit;<br></code></pre></td></tr></table></figure><p>zabbix proxy只需要导入schemas.sql就可以了。</p><p>5 安装信赖程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install -y curl wget gcc gcc-c++ vim curl-devel net-snmp-devel nc libxml2 ssh2 libssh2 libssh2-devel<br></code></pre></td></tr></table></figure><p>6 编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">./configure --enable-proxy --enable-agent --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2 --prefix=/usr/local/zabbix<br>make install<br></code></pre></td></tr></table></figure><p>7 配置zabbix proxy配置文件 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">grep -Ev <span class="hljs-string">&quot;^$ | ^[#,;]&quot;</span> zabbix_proxy.conf<br>Server=A.B.C.D  <span class="hljs-comment">#zabbix server ip</span><br>Hostname=zabbix_proxy<br>LogFile=/tmp/zabbix_proxy.log<br>PidFile=/tmp/zabbix_proxy.pid<br>DBName=zabbix_proxy<br>DBPassword=your_password<br>SNMPTrapperFile=/tmp/zabbix_traps.tmp<br>Timeout=4<br>LogSlowQueris=3000<br></code></pre></td></tr></table></figure><p>8 防火墙配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-port=10050/tcp<br>firelwall-cmd --permanent --add-port=10051/tcp<br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><p>9 启动服务 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/lib/systemd/system<br>vi zabbix-proxy.service<br><br>自定义服务<br>[Unit]<br>Description=Zabbix Proxy<br>After=rsyslog.target<br>After=network.target<br><br>[Service]<br>User=zabbix<br>Group=zabbix<br>Environment=<span class="hljs-string">&quot;CONFFILE=/usr/local/zabbix/etc/zabbix_proxy.conf&quot;</span><br>Type=forking<br>Restart=on-failure<br>PIDFile=/tmp/zabbix_proxy.pid<br>KillMode=control-group<br>ExecStart=/usr/local/zabbix/sbin/zabbix_proxy -c <span class="hljs-variable">$CONFFILE</span><br>ExecStop=/bin/kill -SIGTERM <span class="hljs-variable">$MAINPID</span><br>RestartSec=10s<br>TimeoutSec=0<br><br>[Install]<br>WantedBy=multi-user.target<br><br>systemctl <span class="hljs-built_in">enable</span> zabbix-proxy<br>systemctl start zabbix-proxy<br></code></pre></td></tr></table></figure><p>最后就简单了。zabbix server上面添加代理程序就可以了。好了，结束。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>zabbix</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>华为GPON配置说明</title>
    <link href="/2019/04/02/%E5%8D%8E%E4%B8%BAGPON%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/"/>
    <url>/2019/04/02/%E5%8D%8E%E4%B8%BAGPON%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</url>
    
    <content type="html"><![CDATA[<h1 id="华为GPON配置说明"><a href="#华为GPON配置说明" class="headerlink" title="华为GPON配置说明"></a>华为GPON配置说明</h1><p>华为FTTH组网相关的名词说明，ONU,OLT注册配通相关的配置示例。</p><span id="more"></span><h2 id="名词说明"><a href="#名词说明" class="headerlink" title="名词说明"></a>名词说明</h2><ol><li>DBA模块：创建的dba模板时，给tcont引的，dba模板的作用是对整中ONU上行进行限速的。一个PON口上行带宽为1G，实际能用到的只有900M，所以要对ONU的上行进行合理分配。</li><li>Tcont：tcont是连接dba和gemport的通道，也就是说gemport是通过和tcont联系，才把dba的作用引用过来的。</li><li>Gemport：gemport是OLT线程工作的最小单元，前面的dba，tcont都是最终给gemport用。</li><li>线路模板ont-lineprofile：ONU注册时要选择相应的线路模板，里面包含tcont，gem等信息。</li><li>DBA模板，线路模板，可以创建多个；一个线路模板中：tcont有八个（0－7），gem可以创建128个（0－127）；一个gem中可有映射8个：gem mapping 1 0；gem mapping 1 1；一直到gem mapping 1 7；但是一个线路模板中最多只能创建128条gem mapping，超出会报错。</li></ol><h2 id="数据规划"><a href="#数据规划" class="headerlink" title="数据规划"></a>数据规划</h2><p>以花都狮岭数据规划为例：</p><p>OLT：网管VLAN 22；</p><pre><code class="hljs">IP：172.17.21.132；网关：172.17.21.129；语音VLAN 100；语音IP：172.16.0.11</code></pre><p>ONU：所属OLT的PON串口0&#x2F;18&#x2F;3<br>    ONUID：1<br>    ONU网管IP：172.17.21.134；网关：172.17.21.129；<br>    语音VLAN 100；语音IP：172.16.0.21</p><p>数据配置</p><ol><li><p>数据配置</p><ul><li>创建DBA模板</li></ul></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs bash">dba-profile add profile-id 102 profile-name DBA_2M type3 assure 2048 max 10240   //保证（assure）2M，最大10M<br><br><br>查看DBA模板信息<br><br>display dba-profile all<br><br>//以上命令，关于<span class="hljs-built_in">type</span>：<br>type1                 Fixed bandwidth       //固定带宽<br>type2                 Assured bandwidth             //保证带宽<br>type3                 Assured bandwidth, Maximum bandwidth          //保证带宽，最大峰值带宽<br>type4                 Maximum bandwidth         //最大带宽<br>type5                 Fixed bandwidth, Assured bandwidth, Maximum bandwidth             //固定带宽，保证带宽，最大带宽<br><br>dba-profile add profile-id 105 profile-name DBA_5M type3 assure 5210 max 20480<br>dba-profile add profile-id 120 profile-name DBA_20M type3 assure 20480 max 102400<br>dba-profile add profile-ed 150 profile-anem DBA_50M type3 assure 51200 max 512000<br><br>创建线路模板<br><br>创建线路模板101：供ONU ID 1到5 用；由于一个线路模板中gem mapping最多只能创建128条；故一个线路模板不要被过多的ONU调用。<br><br>ont-lineprofile gpon profile-id 101 profile-name MA561-_1_5<br><br>查看线路信息：<br><br>display ont-lineprofile gpon all<br><br>查看具体线路信息<br><br>BJ-BaiGongShi-JingQu-MA5608T(config)<span class="hljs-comment">#display ont-lineprofile gpon profile-id 122 </span><br>-----------------------------------------------------------------------------<br>Profile-ID          :122<br>Profile-name        :PWGB_10G<br>Access-<span class="hljs-built_in">type</span>         :GPON<br>-----------------------------------------------------------------------------<br>FEC upstream switch :Disable <br>OMCC encrypt switch :Off<br>Qos mode            :GEM-CAR<br>Mapping mode        :VLAN<br>TR069 management    :Disable<br>TR069 IP index      :0<br>-----------------------------------------------------------------------------<br>&lt;T-CONT   0&gt;          DBA Profile-ID:1<br>&lt;T-CONT   1&gt;          DBA Profile-ID:90<br>&lt;Gem Index 1&gt;<br>--------------------------------------------------------------------<br>|Serv-Type:ETH |Encrypt:off |Cascade:off |GEM-CAR:6            |<br>|Upstream-priority-queue:-  |Downstream-priority-queue:-       |<br>--------------------------------------------------------------------<br>Mapping VLAN  Priority Port    Port  Bundle  Flow  Transparent<br>index                  <span class="hljs-built_in">type</span>    ID    ID      CAR<br>--------------------------------------------------------------------<br>0       30    -        -       -     -       -     -<br>1       10    -        -       -     -       -     -<br>--------------------------------------------------------------------<br>-----------------------------------------------------------------------------<br>Notes: Run the display traffic table ip <span class="hljs-built_in">command</span> to query <br>     traffic table configuration<br>-----------------------------------------------------------------------------<br>Binding <span class="hljs-built_in">times</span>       :0<br>-----------------------------------------------------------------------------<br><br>线路模板的编号为101，模板名称MA5610_1_5<br><br>tcont 1 dba-profile-id 120<br>//tcont1绑定120的DBA模板<br>tcont 2 dba-profile-id 105<br>//tcont2绑定105的DBA模板<br>tcont 3 dba-profile-id 102<br>//tcont3绑定102的DBA模板<br><br>gem add 1 eth1 tcont 1<br>//gem 1 绑定tcont1<br>gem add 2 eth2 tcont 2<br>//gem 2 绑定tont1<br>gem add 126 eth tcont 2<br>//gem 126 绑定 tcont2<br>gem add 127 eth tcont 3 <br>//gem 126 绑定 tcont3<br>gem mapping 126 0 vlan 100<br>//gem 126 与 vlan 100 映射<br>gem mapping 127 0 vlan 22<br>//gem 的 127 与 vlan 22 映射<br><br>commit<br>//提交，保存线路模板<br><br>quit<br><br>创建线路模板102：供ONU ID 6到10 用<br>ont-lineprofile gpon profile-id 102 profile-nanme MA5610_6_10<br><br>tcont 1 dba-profile-id 120<br>tcont 2 dba-profile-id 105<br>tcont 3 dba-profile-id 102<br>gem add 1 eth tcont 1<br>gem add 2 eth tcont 1<br>gem add 126 eth tcont 2<br>gem add 127 eth tcont 3<br>gem mapping 126 0 vlan 100<br>gem mapping 127 0 vlan 22<br>commit<br>quit<br><br>创建线路模板103：供 ONU ID 11到15 用<br>ont-lineprofile gpon profile-id 103 profile-name MA5610_11_15<br>tcont 1 dba-profile-id 120<br>tcont 2 dba-profile-id 105<br>tcont 3 dba-profile-id 102<br><br>gem add 1 eth tcont 1<br>gem add 2 eth tcont 1<br>gem add 126 eth tcont 2<br>gem add 127 eth tcont 3<br>gem mapping 126 0 vlan 100<br>gem mapping 127 0 vlan 22<br>commit<br>quit<br><br><br>创建线路模板104：供ONU ID 16到20 用<br>ont-line-profile gpen profile-id 104 profile-name MA5610_16_20<br>tcont 1 dba-profile-id 120<br>tcont 2 dba-profile-id 105<br>tcont 3 dba-profile-id 102<br>gem add 1 eth tcont 1<br>gem add 2 eth tcont 1<br>gem add 126 eth tcont 2<br>gem add 127 eth tcont 3<br>gem mapping 126 0 vlan 100<br>gem mapping 127 0 vlan 22<br>commit<br>quit<br></code></pre></td></tr></table></figure><ul><li>注册ONU</li></ul><p>进入0&#x2F;18槽口的PON板</p><p>intface gpon 0&#x2F;18</p><p>ont add 3 1 sn-auth 48575443FFE2329A snap ont-lineprofile-id 101</p><p>给ONU注册，第三个PON口，ONU编号1，SN号：48575443FFE2329A</p><p>ont ipconfig 3 1 static ip-address 172.17.21.134 mask 255.255.255.128 gateway 172.17.21.129 vlan 22</p><p>给刚刚注册的ONU，下发管理IP地址，网关掩码，ONU上会自动生成一条缺少路由。</p><ul><li>OLT上透传ONU上来的VLAN</li></ul><p>service-port vlan 22 gpon 1&#x2F;18&#x2F;3 ont 1 gemport 127 multi-service user-vlan 22</p><p>&#x2F;&#x2F;给ONU透传网管VLAN22</p><p>service-port vlan 100 gpon 0&#x2F;18&#x2F;3 ont 1 gemport 126 multi-service user-vlan 100</p><p>&#x2F;&#x2F;ONU透传语音VLAN100</p><p>ONU上语音数据配置</p><p>telnet 172.17.21.134 登入到ONU上配置数据</p><p>board confim 0</p><p>&#x2F;&#x2F;单板确认</p><p>fax-modem parameters rfc2198-start-mode disable Rfc21985SmartStartup</p><p>&#x2F;&#x2F;关闭2198自启动功能</p><p>vlan 100 smart</p><p>&#x2F;&#x2F;创建语音VLAN 100</p><p>port vlan 100 0&#x2F;0 1</p><p>&#x2F;&#x2F;透传VLAN 100</p><p>interface vlanif 100</p><p>ip address 172.16.0.23 255.255.254.0</p><p>&#x2F;&#x2F;配置语音地址</p><p>quit</p><pre><code class="hljs"></code></pre>]]></content>
    
    
    <categories>
      
      <category>network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>huawei</tag>
      
      <tag>FTTH</tag>
      
      <tag>gpon</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>install Open.Vpn on CentOS 7 with easy-rsa 3</title>
    <link href="/2019/04/02/install-Open-Vpn-on-CentOS-7-with-easy-rsa-3/"/>
    <url>/2019/04/02/install-Open-Vpn-on-CentOS-7-with-easy-rsa-3/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS-7-Open-Vpn-WITH-easyrsa-3"><a href="#CentOS-7-Open-Vpn-WITH-easyrsa-3" class="headerlink" title="CentOS 7 Open.Vpn WITH easyrsa 3"></a>CentOS 7 Open.Vpn WITH easyrsa 3</h1><p>centos 7 openvpn 配置过程，记录备忘。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><blockquote><p>CentOS Linux release 7.6.1810 (Core)<br>openvpn-2.4.7-1.el7.x86_64<br>easy-rsa-3.0.3-1.el7.noarch</p></blockquote><p>两个概念：</p><ul><li>PKI：Public Key Infrastructure，公钥基础设施</li><li>CA：Certificate Authority，PKI的核心</li></ul><p>操作步骤：</p><ul><li>init-pki      &#x2F;&#x2F;建立一个空的PKI结构</li><li>build-ca      &#x2F;&#x2F;创建CA</li><li>gen-dh        &#x2F;&#x2F;创建diffie-hellman文件</li><li>gen-req       &#x2F;&#x2F;创建证书</li><li>sign-req      &#x2F;&#x2F;签约证书</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install epel-release<br>yum install openvpn easy-rsa<br></code></pre></td></tr></table></figure><p>写在前面，一件重要的事情，时间同步有重要性，在一次配置中，配置结束后，客户端认证错误，大概报错内容：VERIFY ERROR: depth&#x3D;1, error&#x3D;certificate is noe yes valid:CN&#x3D;xxxx</p><p>后查看服务器时间，发现时间不对，于是，更新时间，后报错消失。</p><p>更新时间操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install ntp ntpdate<br>ntpdate 0.cn.pool.ntp.org<br></code></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><ul><li>复制模版到配置文件目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /usr/share/doc/openvpn-2.4.7/sample/sample-config-files/server.conf /etc/openvpn/your_config_file_name.conf<br></code></pre></td></tr></table></figure><ul><li>修改配置文件</li></ul><p>修改配置如下：</p><p>取消注释</p><p>tls-auth ta.key</p><p>取消注释</p><p>topology subnet</p><p>TCP&#x2F;UDP看自己需求，我这边配置的为TCP</p><p>取消注释</p><p>push “redirect-gateway def1 bypass-dhcp”</p><p>取消注释</p><p>push “dhcp-option DNS 223.5.5.5”<br>push “dhcp-option DNS 223.6.6.6”</p><p>以上为阿里云的DNS</p><p>取消注释</p><p>duplicate-cn</p><p>取消注释</p><p>comp-lzo</p><p>取消注释</p><p>user nobody<br>group nobody</p><p>使用的TCP协议通信的，以下是重点：</p><p>explicit-exit-notify 只在udp模式下起作用，如果使用TCP，请更改为以下：</p><p>explicit-exit-notify 1<br>to<br>explicit-exit-notify 0</p><p>最终配置文件如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#################################################</span><br><span class="hljs-comment"># Sample OpenVPN 2.0 config file for            #</span><br><span class="hljs-comment"># multi-client server.                          #</span><br><span class="hljs-comment">#                                               #</span><br><span class="hljs-comment"># This file is for the server side              #</span><br><span class="hljs-comment"># of a many-clients &lt;-&gt; one-server              #</span><br><span class="hljs-comment"># OpenVPN configuration.                        #</span><br><span class="hljs-comment">#                                               #</span><br><span class="hljs-comment"># OpenVPN also supports                         #</span><br><span class="hljs-comment"># single-machine &lt;-&gt; single-machine             #</span><br><span class="hljs-comment"># configurations (See the Examples page         #</span><br><span class="hljs-comment"># on the web site for more info).               #</span><br><span class="hljs-comment">#                                               #</span><br><span class="hljs-comment"># This config should work on Windows            #</span><br><span class="hljs-comment"># or Linux/BSD systems.  Remember on            #</span><br><span class="hljs-comment"># Windows to quote pathnames and use            #</span><br><span class="hljs-comment"># double backslashes, e.g.:                     #</span><br><span class="hljs-comment"># &quot;C:\\Program Files\\OpenVPN\\config\\foo.key&quot; #</span><br><span class="hljs-comment">#                                               #</span><br><span class="hljs-comment"># Comments are preceded with &#x27;#&#x27; or &#x27;;&#x27;         #</span><br><span class="hljs-comment">#################################################</span><br><br><span class="hljs-comment"># Which local IP address should OpenVPN</span><br><span class="hljs-comment"># listen on? (optional)</span><br>;<span class="hljs-built_in">local</span> a.b.c.d<br><br><span class="hljs-comment"># Which TCP/UDP port should OpenVPN listen on?</span><br><span class="hljs-comment"># If you want to run multiple OpenVPN instances</span><br><span class="hljs-comment"># on the same machine, use a different port</span><br><span class="hljs-comment"># number for each one.  You will need to</span><br><span class="hljs-comment"># open up this port on your firewall.</span><br>port 1194<br><br><span class="hljs-comment"># TCP or UDP server?</span><br>proto tcp<br>;proto udp<br><br><span class="hljs-comment"># &quot;dev tun&quot; will create a routed IP tunnel,</span><br><span class="hljs-comment"># &quot;dev tap&quot; will create an ethernet tunnel.</span><br><span class="hljs-comment"># Use &quot;dev tap0&quot; if you are ethernet bridging</span><br><span class="hljs-comment"># and have precreated a tap0 virtual interface</span><br><span class="hljs-comment"># and bridged it with your ethernet interface.</span><br><span class="hljs-comment"># If you want to control access policies</span><br><span class="hljs-comment"># over the VPN, you must create firewall</span><br><span class="hljs-comment"># rules for the the TUN/TAP interface.</span><br><span class="hljs-comment"># On non-Windows systems, you can give</span><br><span class="hljs-comment"># an explicit unit number, such as tun0.</span><br><span class="hljs-comment"># On Windows, use &quot;dev-node&quot; for this.</span><br><span class="hljs-comment"># On most systems, the VPN will not function</span><br><span class="hljs-comment"># unless you partially or fully disable</span><br><span class="hljs-comment"># the firewall for the TUN/TAP interface.</span><br>;dev tap<br>dev tun<br><br><span class="hljs-comment"># Windows needs the TAP-Win32 adapter name</span><br><span class="hljs-comment"># from the Network Connections panel if you</span><br><span class="hljs-comment"># have more than one.  On XP SP2 or higher,</span><br><span class="hljs-comment"># you may need to selectively disable the</span><br><span class="hljs-comment"># Windows firewall for the TAP adapter.</span><br><span class="hljs-comment"># Non-Windows systems usually don&#x27;t need this.</span><br>;dev-node MyTap<br><br><span class="hljs-comment"># SSL/TLS root certificate (ca), certificate</span><br><span class="hljs-comment"># (cert), and private key (key).  Each client</span><br><span class="hljs-comment"># and the server must have their own cert and</span><br><span class="hljs-comment"># key file.  The server and all clients will</span><br><span class="hljs-comment"># use the same ca file.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># See the &quot;easy-rsa&quot; directory for a series</span><br><span class="hljs-comment"># of scripts for generating RSA certificates</span><br><span class="hljs-comment"># and private keys.  Remember to use</span><br><span class="hljs-comment"># a unique Common Name for the server</span><br><span class="hljs-comment"># and each of the client certificates.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Any X509 key management system can be used.</span><br><span class="hljs-comment"># OpenVPN can also use a PKCS #12 formatted key file</span><br><span class="hljs-comment"># (see &quot;pkcs12&quot; directive in man page).</span><br>ca /etc/openvpn/easy-rsa/pki/ca.crt<br>cert /etc/openvpn/easy-rsa/pki/issued/your_server.crt<br>key /etc/openvpn/easy-rsa/pki/private/your_server.key  <span class="hljs-comment"># This file should be kept secret</span><br><br><span class="hljs-comment"># Diffie hellman parameters.</span><br><span class="hljs-comment"># Generate your own with:</span><br><span class="hljs-comment">#   openssl dhparam -out dh2048.pem 2048</span><br>dh /etc/openvpn/easy-rsa/pki/dh.pem<br><br><span class="hljs-comment"># Network topology</span><br><span class="hljs-comment"># Should be subnet (addressing via IP)</span><br><span class="hljs-comment"># unless Windows clients v2.0.9 and lower have to</span><br><span class="hljs-comment"># be supported (then net30, i.e. a /30 per client)</span><br><span class="hljs-comment"># Defaults to net30 (not recommended)</span><br>;topology subnet<br><br><span class="hljs-comment"># Configure server mode and supply a VPN subnet</span><br><span class="hljs-comment"># for OpenVPN to draw client addresses from.</span><br><span class="hljs-comment"># The server will take 10.8.0.1 for itself,</span><br><span class="hljs-comment"># the rest will be made available to clients.</span><br><span class="hljs-comment"># Each client will be able to reach the server</span><br><span class="hljs-comment"># on 10.8.0.1. Comment this line out if you are</span><br><span class="hljs-comment"># ethernet bridging. See the man page for more info.</span><br>server 10.8.0.0 255.255.255.0<br><br><span class="hljs-comment"># Maintain a record of client &lt;-&gt; virtual IP address</span><br><span class="hljs-comment"># associations in this file.  If OpenVPN goes down or</span><br><span class="hljs-comment"># is restarted, reconnecting clients can be assigned</span><br><span class="hljs-comment"># the same virtual IP address from the pool that was</span><br><span class="hljs-comment"># previously assigned.</span><br>ifconfig-pool-persist ipp.txt<br><br><span class="hljs-comment"># Configure server mode for ethernet bridging.</span><br><span class="hljs-comment"># You must first use your OS&#x27;s bridging capability</span><br><span class="hljs-comment"># to bridge the TAP interface with the ethernet</span><br><span class="hljs-comment"># NIC interface.  Then you must manually set the</span><br><span class="hljs-comment"># IP/netmask on the bridge interface, here we</span><br><span class="hljs-comment"># assume 10.8.0.4/255.255.255.0.  Finally we</span><br><span class="hljs-comment"># must set aside an IP range in this subnet</span><br><span class="hljs-comment"># (start=10.8.0.50 end=10.8.0.100) to allocate</span><br><span class="hljs-comment"># to connecting clients.  Leave this line commented</span><br><span class="hljs-comment"># out unless you are ethernet bridging.</span><br>;server-bridge 10.8.0.4 255.255.255.0 10.8.0.50 10.8.0.100<br><br><span class="hljs-comment"># Configure server mode for ethernet bridging</span><br><span class="hljs-comment"># using a DHCP-proxy, where clients talk</span><br><span class="hljs-comment"># to the OpenVPN server-side DHCP server</span><br><span class="hljs-comment"># to receive their IP address allocation</span><br><span class="hljs-comment"># and DNS server addresses.  You must first use</span><br><span class="hljs-comment"># your OS&#x27;s bridging capability to bridge the TAP</span><br><span class="hljs-comment"># interface with the ethernet NIC interface.</span><br><span class="hljs-comment"># Note: this mode only works on clients (such as</span><br><span class="hljs-comment"># Windows), where the client-side TAP adapter is</span><br><span class="hljs-comment"># bound to a DHCP client.</span><br>;server-bridge<br><br><span class="hljs-comment"># Push routes to the client to allow it</span><br><span class="hljs-comment"># to reach other private subnets behind</span><br><span class="hljs-comment"># the server.  Remember that these</span><br><span class="hljs-comment"># private subnets will also need</span><br><span class="hljs-comment"># to know to route the OpenVPN client</span><br><span class="hljs-comment"># address pool (10.8.0.0/255.255.255.0)</span><br><span class="hljs-comment"># back to the OpenVPN server.</span><br>;push <span class="hljs-string">&quot;route 192.168.10.0 255.255.255.0&quot;</span><br>;push <span class="hljs-string">&quot;route 192.168.20.0 255.255.255.0&quot;</span><br><br><span class="hljs-comment"># To assign specific IP addresses to specific</span><br><span class="hljs-comment"># clients or if a connecting client has a private</span><br><span class="hljs-comment"># subnet behind it that should also have VPN access,</span><br><span class="hljs-comment"># use the subdirectory &quot;ccd&quot; for client-specific</span><br><span class="hljs-comment"># configuration files (see man page for more info).</span><br><br><span class="hljs-comment"># EXAMPLE: Suppose the client</span><br><span class="hljs-comment"># having the certificate common name &quot;Thelonious&quot;</span><br><span class="hljs-comment"># also has a small subnet behind his connecting</span><br><span class="hljs-comment"># machine, such as 192.168.40.128/255.255.255.248.</span><br><span class="hljs-comment"># First, uncomment out these lines:</span><br>;client-config-dir ccd<br>;route 192.168.40.128 255.255.255.248<br><span class="hljs-comment"># Then create a file ccd/Thelonious with this line:</span><br><span class="hljs-comment">#   iroute 192.168.40.128 255.255.255.248</span><br><span class="hljs-comment"># This will allow Thelonious&#x27; private subnet to</span><br><span class="hljs-comment"># access the VPN.  This example will only work</span><br><span class="hljs-comment"># if you are routing, not bridging, i.e. you are</span><br><span class="hljs-comment"># using &quot;dev tun&quot; and &quot;server&quot; directives.</span><br><br><span class="hljs-comment"># EXAMPLE: Suppose you want to give</span><br><span class="hljs-comment"># Thelonious a fixed VPN IP address of 10.9.0.1.</span><br><span class="hljs-comment"># First uncomment out these lines:</span><br>;client-config-dir ccd<br>;route 10.9.0.0 255.255.255.252<br><span class="hljs-comment"># Then add this line to ccd/Thelonious:</span><br><span class="hljs-comment">#   ifconfig-push 10.9.0.1 10.9.0.2</span><br><br><span class="hljs-comment"># Suppose that you want to enable different</span><br><span class="hljs-comment"># firewall access policies for different groups</span><br><span class="hljs-comment"># of clients.  There are two methods:</span><br><span class="hljs-comment"># (1) Run multiple OpenVPN daemons, one for each</span><br><span class="hljs-comment">#     group, and firewall the TUN/TAP interface</span><br><span class="hljs-comment">#     for each group/daemon appropriately.</span><br><span class="hljs-comment"># (2) (Advanced) Create a script to dynamically</span><br><span class="hljs-comment">#     modify the firewall in response to access</span><br><span class="hljs-comment">#     from different clients.  See man</span><br><span class="hljs-comment">#     page for more info on learn-address script.</span><br>;learn-address ./script<br><br><span class="hljs-comment"># If enabled, this directive will configure</span><br><span class="hljs-comment"># all clients to redirect their default</span><br><span class="hljs-comment"># network gateway through the VPN, causing</span><br><span class="hljs-comment"># all IP traffic such as web browsing and</span><br><span class="hljs-comment"># and DNS lookups to go through the VPN</span><br><span class="hljs-comment"># (The OpenVPN server machine may need to NAT</span><br><span class="hljs-comment"># or bridge the TUN/TAP interface to the internet</span><br><span class="hljs-comment"># in order for this to work properly).</span><br>push <span class="hljs-string">&quot;redirect-gateway def1 bypass-dhcp&quot;</span><br><br><span class="hljs-comment"># Certain Windows-specific network settings</span><br><span class="hljs-comment"># can be pushed to clients, such as DNS</span><br><span class="hljs-comment"># or WINS server addresses.  CAVEAT:</span><br><span class="hljs-comment"># http://openvpn.net/faq.html#dhcpcaveats</span><br><span class="hljs-comment"># The addresses below refer to the public</span><br><span class="hljs-comment"># DNS servers provided by opendns.com.</span><br>push <span class="hljs-string">&quot;dhcp-option DNS 223.5.5.5&quot;</span><br>push <span class="hljs-string">&quot;dhcp-option DNS 223.6.6.6&quot;</span><br><br><span class="hljs-comment"># Uncomment this directive to allow different</span><br><span class="hljs-comment"># clients to be able to &quot;see&quot; each other.</span><br><span class="hljs-comment"># By default, clients will only see the server.</span><br><span class="hljs-comment"># To force clients to only see the server, you</span><br><span class="hljs-comment"># will also need to appropriately firewall the</span><br><span class="hljs-comment"># server&#x27;s TUN/TAP interface.</span><br>;client-to-client<br><br><span class="hljs-comment"># Uncomment this directive if multiple clients</span><br><span class="hljs-comment"># might connect with the same certificate/key</span><br><span class="hljs-comment"># files or common names.  This is recommended</span><br><span class="hljs-comment"># only for testing purposes.  For production use,</span><br><span class="hljs-comment"># each client should have its own certificate/key</span><br><span class="hljs-comment"># pair.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># IF YOU HAVE NOT GENERATED INDIVIDUAL</span><br><span class="hljs-comment"># CERTIFICATE/KEY PAIRS FOR EACH CLIENT,</span><br><span class="hljs-comment"># EACH HAVING ITS OWN UNIQUE &quot;COMMON NAME&quot;,</span><br><span class="hljs-comment"># UNCOMMENT THIS LINE OUT.</span><br>duplicate-cn<br><br><span class="hljs-comment"># The keepalive directive causes ping-like</span><br><span class="hljs-comment"># messages to be sent back and forth over</span><br><span class="hljs-comment"># the link so that each side knows when</span><br><span class="hljs-comment"># the other side has gone down.</span><br><span class="hljs-comment"># Ping every 10 seconds, assume that remote</span><br><span class="hljs-comment"># peer is down if no ping received during</span><br><span class="hljs-comment"># a 120 second time period.</span><br>keepalive 10 120<br><br><span class="hljs-comment"># For extra security beyond that provided</span><br><span class="hljs-comment"># by SSL/TLS, create an &quot;HMAC firewall&quot;</span><br><span class="hljs-comment"># to help block DoS attacks and UDP port flooding.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Generate with:</span><br><span class="hljs-comment">#   openvpn --genkey --secret ta.key</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># The server and each client must have</span><br><span class="hljs-comment"># a copy of this key.</span><br><span class="hljs-comment"># The second parameter should be &#x27;0&#x27;</span><br><span class="hljs-comment"># on the server and &#x27;1&#x27; on the clients.</span><br>tls-auth ta.key 0 <span class="hljs-comment"># This file is secret</span><br><br><span class="hljs-comment"># Select a cryptographic cipher.</span><br><span class="hljs-comment"># This config item must be copied to</span><br><span class="hljs-comment"># the client config file as well.</span><br><span class="hljs-comment"># Note that v2.4 client/server will automatically</span><br><span class="hljs-comment"># negotiate AES-256-GCM in TLS mode.</span><br><span class="hljs-comment"># See also the ncp-cipher option in the manpage</span><br>cipher AES-256-CBC<br><br><span class="hljs-comment"># Enable compression on the VPN link and push the</span><br><span class="hljs-comment"># option to the client (v2.4+ only, for earlier</span><br><span class="hljs-comment"># versions see below)</span><br>;compress lz4-v2<br>;push <span class="hljs-string">&quot;compress lz4-v2&quot;</span><br><br><span class="hljs-comment"># For compression compatible with older clients use comp-lzo</span><br><span class="hljs-comment"># If you enable it here, you must also</span><br><span class="hljs-comment"># enable it in the client config file.</span><br>comp-lzo<br><br><span class="hljs-comment"># The maximum number of concurrently connected</span><br><span class="hljs-comment"># clients we want to allow.</span><br>;max-clients 100<br><br><span class="hljs-comment"># It&#x27;s a good idea to reduce the OpenVPN</span><br><span class="hljs-comment"># daemon&#x27;s privileges after initialization.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># You can uncomment this out on</span><br><span class="hljs-comment"># non-Windows systems.</span><br>user nobody<br>group nobody<br><br><span class="hljs-comment"># The persist options will try to avoid</span><br><span class="hljs-comment"># accessing certain resources on restart</span><br><span class="hljs-comment"># that may no longer be accessible because</span><br><span class="hljs-comment"># of the privilege downgrade.</span><br>persist-key<br>persist-tun<br><br><span class="hljs-comment"># Output a short status file showing</span><br><span class="hljs-comment"># current connections, truncated</span><br><span class="hljs-comment"># and rewritten every minute.</span><br>status openvpn-status.log<br><br><span class="hljs-comment"># By default, log messages will go to the syslog (or</span><br><span class="hljs-comment"># on Windows, if running as a service, they will go to</span><br><span class="hljs-comment"># the &quot;\Program Files\OpenVPN\log&quot; directory).</span><br><span class="hljs-comment"># Use log or log-append to override this default.</span><br><span class="hljs-comment"># &quot;log&quot; will truncate the log file on OpenVPN startup,</span><br><span class="hljs-comment"># while &quot;log-append&quot; will append to it.  Use one</span><br><span class="hljs-comment"># or the other (but not both).</span><br><span class="hljs-built_in">log</span>         openvpn.log<br>log-append  openvpn.log<br><br><span class="hljs-comment"># Set the appropriate level of log</span><br><span class="hljs-comment"># file verbosity.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># 0 is silent, except for fatal errors</span><br><span class="hljs-comment"># 4 is reasonable for general usage</span><br><span class="hljs-comment"># 5 and 6 can help to debug connection problems</span><br><span class="hljs-comment"># 9 is extremely verbose</span><br>verb 3<br><br><span class="hljs-comment"># Silence repeating messages.  At most 20</span><br><span class="hljs-comment"># sequential messages of the same message</span><br><span class="hljs-comment"># category will be output to the log.</span><br>;mute 20<br><br><span class="hljs-comment"># Notify the client that when the server restarts so it</span><br><span class="hljs-comment"># can automatically reconnect.</span><br><span class="hljs-comment">#explicit-exit-notify 1</span><br></code></pre></td></tr></table></figure><p>生成ta.key文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">openvpn --genkey --secret ta.key<br></code></pre></td></tr></table></figure><h3 id="生成证书及签约"><a href="#生成证书及签约" class="headerlink" title="生成证书及签约"></a>生成证书及签约</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> /etc/openvpn/easr-rsa<br><span class="hljs-built_in">cp</span> -rf /usr/share/easy-rsa/3.0.3/* /etc/openvpn/easy-rsa<br><span class="hljs-built_in">cd</span> /etc/openvpn/easy-rsa<br><br>./easyrsa init-pki<br>./easyrsa build-ca<br><br>./easyrsa gen-req your_server nopass        //创建服务端证书<br>./easyrsa gen-req your_client nopass         //创建客户端证书<br>./easyrsa sign-req server your_server               //签约服务端证书<br>./easy-rsa sign-req client your_client              //签约客户端证书<br>./easyrsa gen-dh<br></code></pre></td></tr></table></figure><p>记住此时配置的目录结构，要记住与服务的conf文件中目录路径一致。</p><h3 id="转发及防火墙配置"><a href="#转发及防火墙配置" class="headerlink" title="转发及防火墙配置"></a>转发及防火墙配置</h3><ul><li>配置转发</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/sysctl.conf<br>//添加一行<br>net.ipv4.ip_forward =1 <br></code></pre></td></tr></table></figure><p>重启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl restart network.service<br></code></pre></td></tr></table></figure><ul><li>防火墙配置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-port=1194<br>firewall-cmd --add-masquerade <br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">iptables -A INPUT -p tcp -m tcp --dport 1194 -j ACCEPT<br>iptables -t nat -A POSTROUTING -s 10.8.0.0/24 -o ens160 -j MASQUERADE<br>iptables -A INPUT -p tcp -m tcp --dport 1194 -j ACCEPT<br>iptables -P FORWARD ACCEPT<br>iptables -P OUTPUT ACCEPT<br>iptables -A INPUT -i tun0 -j ACCEPT<br>iptables -A INPUT -i lo -j ACCEPT<br>iptables-save &gt;&gt; /etc/sysconfig/iptables<br></code></pre></td></tr></table></figure><h3 id="启用服务"><a href="#启用服务" class="headerlink" title="启用服务"></a>启用服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl start openvpn@your_config<br>systemctl status openvpn@your_conf<br>//输出如下：<br>● openvpn@bldjvpn.service - OpenVPN Robust And Highly Flexible Tunneling Application On bldjvpn<br>   Loaded: loaded (/usr/lib/systemd/system/openvpn@.service; enabled; vendor preset: disabled)<br>   Active: active (running) since Mon 2019-04-01 23:29:10 CST; 1h 27min ago<br> Main PID: 25355 (openvpn)<br>   Status: <span class="hljs-string">&quot;Initialization Sequence Completed&quot;</span><br>   CGroup: /system.slice/system-openvpn.slice/openvpn@your_conf.service<br>           └─25355 /usr/sbin/openvpn --<span class="hljs-built_in">cd</span> /etc/openvpn/ --co...<br><br>Apr 01 23:29:10 bldj-vpn systemd[1]: Starting OpenVPN Robust...<br>Apr 01 23:29:10 bldj-vpn systemd[1]: Started OpenVPN Robust ...<br>Hint: Some lines were ellipsized, use -l to show <span class="hljs-keyword">in</span> full.<br><br>systemctl <span class="hljs-built_in">enable</span> openvpn@your_conf      //开机自启动<br></code></pre></td></tr></table></figure><h3 id="配置客户端"><a href="#配置客户端" class="headerlink" title="配置客户端"></a>配置客户端</h3><p>在&#x2F;etc&#x2F;openvpn&#x2F;client目录下创建如下目录结构：</p><blockquote><p>.<br>├── base.conf<br>├── files<br>├── keys<br>│   ├── your_client.crt<br>│   ├── your_client.key<br>│   ├── ca.crt<br>│   └── ta.key<br>└── make_conf.sh  </p></blockquote><p>files文件输出为客户端的配置文件，keys文件用来存储需要客户端证书文件。</p><p>复制这些文件到files目录：</p><blockquote><p>&#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;ca.crt<br>&#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;issued&#x2F;your_client.crt<br>&#x2F;etc&#x2F;openvpn&#x2F;easy-rsa&#x2F;pki&#x2F;private&#x2F;your_client.key<br>&#x2F;etc&#x2F;openvpn&#x2F;ta.key  </p></blockquote><p>配置客户端配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /usr/share/doc/openvpn-2.4.7/sample/sample-config-files/client.conf /etc/openvpn/client/base.conf<br></code></pre></td></tr></table></figure><p>配置参考如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><code class="hljs bash"> <span class="hljs-comment">##############################################</span><br><span class="hljs-comment"># Sample client-side OpenVPN 2.0 config file #</span><br><span class="hljs-comment"># for connecting to multi-client server.     #</span><br><span class="hljs-comment">#                                            #</span><br><span class="hljs-comment"># This configuration can be used by multiple #</span><br><span class="hljs-comment"># clients, however each client should have   #</span><br><span class="hljs-comment"># its own cert and key files.                #</span><br><span class="hljs-comment">#                                            #</span><br><span class="hljs-comment"># On Windows, you might want to rename this  #</span><br><span class="hljs-comment"># file so it has a .ovpn extension           #</span><br><span class="hljs-comment">##############################################</span><br><br><span class="hljs-comment"># Specify that we are a client and that we</span><br><span class="hljs-comment"># will be pulling certain config file directives</span><br><span class="hljs-comment"># from the server.</span><br>client<br><br><span class="hljs-comment"># Use the same setting as you are using on</span><br><span class="hljs-comment"># the server.</span><br><span class="hljs-comment"># On most systems, the VPN will not function</span><br><span class="hljs-comment"># unless you partially or fully disable</span><br><span class="hljs-comment"># the firewall for the TUN/TAP interface.</span><br>;dev tap<br>dev tun<br><br><span class="hljs-comment"># Windows needs the TAP-Win32 adapter name</span><br><span class="hljs-comment"># from the Network Connections panel</span><br><span class="hljs-comment"># if you have more than one.  On XP SP2,</span><br><span class="hljs-comment"># you may need to disable the firewall</span><br><span class="hljs-comment"># for the TAP adapter.</span><br>;dev-node MyTap<br><br><span class="hljs-comment"># Are we connecting to a TCP or</span><br><span class="hljs-comment"># UDP server?  Use the same setting as</span><br><span class="hljs-comment"># on the server.</span><br>proto tcp<br>;proto udp<br><br><span class="hljs-comment"># The hostname/IP and port of the server.</span><br><span class="hljs-comment"># You can have multiple remote entries</span><br><span class="hljs-comment"># to load balance between the servers.</span><br>remote your_server port_number<br>;remote my-server-2 1194<br><br><span class="hljs-comment"># Choose a random host from the remote</span><br><span class="hljs-comment"># list for load-balancing.  Otherwise</span><br><span class="hljs-comment"># try hosts in the order specified.</span><br>;remote-random<br><br><span class="hljs-comment"># Keep trying indefinitely to resolve the</span><br><span class="hljs-comment"># host name of the OpenVPN server.  Very useful</span><br><span class="hljs-comment"># on machines which are not permanently connected</span><br><span class="hljs-comment"># to the internet such as laptops.</span><br>resolv-retry infinite<br><br><span class="hljs-comment"># Most clients don&#x27;t need to bind to</span><br><span class="hljs-comment"># a specific local port number.</span><br>nobind<br><br><span class="hljs-comment"># Downgrade privileges after initialization (non-Windows only)</span><br>;user nobody<br>;group nobody<br><br><span class="hljs-comment"># Try to preserve some state across restarts.</span><br>persist-key<br>persist-tun<br><br><span class="hljs-comment"># If you are connecting through an</span><br><span class="hljs-comment"># HTTP proxy to reach the actual OpenVPN</span><br><span class="hljs-comment"># server, put the proxy server/IP and</span><br><span class="hljs-comment"># port number here.  See the man page</span><br><span class="hljs-comment"># if your proxy server requires</span><br><span class="hljs-comment"># authentication.</span><br>;http-proxy-retry <span class="hljs-comment"># retry on connection failures</span><br>;http-proxy [proxy server] [proxy port <span class="hljs-comment">#]</span><br><br><span class="hljs-comment"># Wireless networks often produce a lot</span><br><span class="hljs-comment"># of duplicate packets.  Set this flag</span><br><span class="hljs-comment"># to silence duplicate packet warnings.</span><br>;mute-replay-warnings<br><br><span class="hljs-comment"># SSL/TLS parms.</span><br><span class="hljs-comment"># See the server config file for more</span><br><span class="hljs-comment"># description.  It&#x27;s best to use</span><br><span class="hljs-comment"># a separate .crt/.key file pair</span><br><span class="hljs-comment"># for each client.  A single ca</span><br><span class="hljs-comment"># file can be used for all clients.</span><br>ca ca.crt<br>cert client.crt<br>key client.key<br><br><span class="hljs-comment"># Verify server certificate by checking that the</span><br><span class="hljs-comment"># certicate has the correct key usage set.</span><br><span class="hljs-comment"># This is an important precaution to protect against</span><br><span class="hljs-comment"># a potential attack discussed here:</span><br><span class="hljs-comment">#  http://openvpn.net/howto.html#mitm</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># To use this feature, you will need to generate</span><br><span class="hljs-comment"># your server certificates with the keyUsage set to</span><br><span class="hljs-comment">#   digitalSignature, keyEncipherment</span><br><span class="hljs-comment"># and the extendedKeyUsage to</span><br><span class="hljs-comment">#   serverAuth</span><br><span class="hljs-comment"># EasyRSA can do this for you.</span><br>remote-cert-tls server<br><br><span class="hljs-comment"># If a tls-auth key is used on the server</span><br><span class="hljs-comment"># then every client must also have the key.</span><br>tls-auth ta.key 1<br><br><span class="hljs-comment"># Select a cryptographic cipher.</span><br><span class="hljs-comment"># If the cipher option is used on the server</span><br><span class="hljs-comment"># then you must also specify it here.</span><br><span class="hljs-comment"># Note that v2.4 client/server will automatically</span><br><span class="hljs-comment"># negotiate AES-256-GCM in TLS mode.</span><br><span class="hljs-comment"># See also the ncp-cipher option in the manpage</span><br>cipher AES-256-CBC<br><br><span class="hljs-comment"># Enable compression on the VPN link.</span><br><span class="hljs-comment"># Don&#x27;t enable this unless it is also</span><br><span class="hljs-comment"># enabled in the server config file.</span><br>comp-lzo<br><br><span class="hljs-comment"># Set log file verbosity.</span><br>verb 3<br><br><span class="hljs-comment"># Silence repeating messages</span><br>;mute 20<br>auth-user-pass<br></code></pre></td></tr></table></figure><p>创建配置脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim make_conf.sh<br><br><span class="hljs-comment">#!/bin/bash</span><br><br><span class="hljs-comment"># First argument: Client identifier</span><br><br>KEY_DIR=./keys<br>OUTPUT_DIR=./files<br>BASE_CONFIG=./base.conf<br><br><span class="hljs-built_in">cat</span> <span class="hljs-variable">$&#123;BASE_CONFIG&#125;</span> \<br>    &lt;(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;&lt;ca&gt;&#x27;</span>) \<br>    <span class="hljs-variable">$&#123;KEY_DIR&#125;</span>/ca.crt \<br>    &lt;(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;&lt;/ca&gt;\n&lt;cert&gt;&#x27;</span>) \<br>    <span class="hljs-variable">$&#123;KEY_DIR&#125;</span>/<span class="hljs-variable">$&#123;1&#125;</span>.crt \<br>    &lt;(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;&lt;/cert&gt;\n&lt;key&gt;&#x27;</span>) \<br>    <span class="hljs-variable">$&#123;KEY_DIR&#125;</span>/<span class="hljs-variable">$&#123;1&#125;</span>.key \<br>    &lt;(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;&lt;/key&gt;\n&lt;tls-auth&gt;&#x27;</span>) \<br>    <span class="hljs-variable">$&#123;KEY_DIR&#125;</span>/ta.key \<br>    &lt;(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;&lt;/tls-auth&gt;&#x27;</span>) \<br>    &gt; <span class="hljs-variable">$&#123;OUTPUT_DIR&#125;</span>/<span class="hljs-variable">$&#123;1&#125;</span>.ovpn<br></code></pre></td></tr></table></figure><p>给脚本添加执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> u+x make_conf.sh<br></code></pre></td></tr></table></figure><p>通过脚本生成配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./make_conf.sh your_client<br></code></pre></td></tr></table></figure><p>输出配置文件在files目录中。好了，至此配置完成，我们需要做的就是把配置文件下载到自己的电脑上，可心安心使用了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sftp -P ssh_port name@openvpn_server_ip:/etc/openvpn/client/files/client1.ovpn ~/<br></code></pre></td></tr></table></figure><p>通过文件导入OPEN.VPN客户端程序，我们就可以正常使用了。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>linux</tag>
      
      <tag>openvpn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ttf-mscorefonts-installer ubuntu</title>
    <link href="/2019/04/01/ttf-mscorefonts-installer-ubuntu/"/>
    <url>/2019/04/01/ttf-mscorefonts-installer-ubuntu/</url>
    
    <content type="html"><![CDATA[<h1 id="ttf-mscorefonts-installer下载额外数据失败"><a href="#ttf-mscorefonts-installer下载额外数据失败" class="headerlink" title="ttf-mscorefonts-installer下载额外数据失败"></a>ttf-mscorefonts-installer下载额外数据失败</h1><p>ubuntu中引用微软的字体的问题，操作记录备忘。</p><span id="more"></span><p>完成ubuntu安装后，特别是安装wine之后，电脑经常跳出更新信息：</p><blockquote><p>下载额外数据文件失败<br>以下软件包要求安装后下载附加数据，但其数据无法下载或无法处理。<br>ttf-mscorefonts-installer<br>稍后系统将自动重试下载，您也可以手工立即重试。执行此命令需要有活动的网络连接。  </p></blockquote><p>点击重试后，实际后台自动既即出。输入密码后无响应了。实际上没有执行操作。虽不影响使用，不过挺经常跳出来挺麻烦。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ul><li>下载文件</li></ul><p>查看目录&#x2F;usr&#x2F;share&#x2F;package-data-downloads&#x2F;目录下，有一个文件ttf-mscorefonts-installer，查看内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs bash">Url: http://downloads.sourceforge.net/corefonts/andale32.exe<br>Sha256: 0524fe42951adc3a7eb870e32f0920313c71f170c859b5f770d82b4ee111e970<br><br>Url: http://downloads.sourceforge.net/corefonts/arial32.exe<br>Sha256: 85297a4d146e9c87ac6f74822734bdee5f4b2a722d7eaa584b7f2cbf76f478f6<br><br>Url: http://downloads.sourceforge.net/corefonts/arialb32.exe<br>Sha256: a425f0ffb6a1a5ede5b979ed6177f4f4f4fdef6ae7c302a7b7720ef332fec0a8<br><br>Url: http://downloads.sourceforge.net/corefonts/comic32.exe<br>Sha256: 9c6df3feefde26d4e41d4a4fe5db2a89f9123a772594d7f59afd062625cd204e<br><br>Url: http://downloads.sourceforge.net/corefonts/courie32.exe<br>Sha256: bb511d861655dde879ae552eb86b134d6fae67cb58502e6ff73ec5d9151f3384<br><br>Url: http://downloads.sourceforge.net/corefonts/georgi32.exe<br>Sha256: 2c2c7dcda6606ea5cf08918fb7cd3f3359e9e84338dc690013f20cd42e930301<br><br>Url: http://downloads.sourceforge.net/corefonts/impact32.exe<br>Sha256: 6061ef3b7401d9642f5dfdb5f2b376aa14663f6275e60a51207ad4facf2fccfb<br><br>Url: http://downloads.sourceforge.net/corefonts/times32.exe<br>Sha256: db56595ec6ef5d3de5c24994f001f03b2a13e37cee27bc25c58f6f43e8f807ab<br><br>Url: http://downloads.sourceforge.net/corefonts/trebuc32.exe<br>Sha256: 5a690d9bb8510be1b8b4fe49f1f2319651fe51bbe54775ddddd8ef0bd07fdac9<br><br>Url: http://downloads.sourceforge.net/corefonts/verdan32.exe<br>Sha256: c1cb61255e363166794e47664e2f21af8e3a26cb6346eb8d2ae2fa85dd5aad96<br><br>Url: http://downloads.sourceforge.net/corefonts/webdin32.exe<br>Sha256: 64595b5abc1080fba8610c5c34fab5863408e806aafe84653ca8575bed17d75a<br><br>Script: /usr/lib/msttcorefonts/update-ms-fonts<br>Should-Download: msttcorefonts/accepted-mscorefonts-eula<br></code></pre></td></tr></table></figure><p>可以看到11个文件的下载链接。直接下载字体文件，放在一个文件夹里。如&#x2F;home&#x2F;yourname&#x2F;ttf-mscorefonts&#x2F;目录下。</p><ul><li>手动更新</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dpkg-reconfigure ttf-mscorefonts-installer<br></code></pre></td></tr></table></figure><p>指定下载字体的目录，确认安装配置。</p><ul><li>删除下载失败的通知信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/share/package-data-downloads/<br>sudo <span class="hljs-built_in">rm</span> ttf-mscorefonts-installer<br><span class="hljs-built_in">cd</span> /var/lib/update-notifier/package-data-downloads/<br>sudo <span class="hljs-built_in">rm</span> ttf-mscorefonts-installer<br><span class="hljs-built_in">cd</span> /var/lib/update-notifier/user.d/<br>sudo <span class="hljs-built_in">rm</span> data-downloads-failed<br></code></pre></td></tr></table></figure><p>至此更新结束。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows 脚本更改密码/远程端口/开放防火墙端口</title>
    <link href="/2019/03/31/windows-%E8%84%9A%E6%9C%AC%E6%9B%B4%E6%94%B9%E5%AF%86%E7%A0%81-%E8%BF%9C%E7%A8%8B%E7%AB%AF%E5%8F%A3-%E5%BC%80%E6%94%BE%E9%98%B2%E7%81%AB%E5%A2%99%E7%AB%AF%E5%8F%A3/"/>
    <url>/2019/03/31/windows-%E8%84%9A%E6%9C%AC%E6%9B%B4%E6%94%B9%E5%AF%86%E7%A0%81-%E8%BF%9C%E7%A8%8B%E7%AB%AF%E5%8F%A3-%E5%BC%80%E6%94%BE%E9%98%B2%E7%81%AB%E5%A2%99%E7%AB%AF%E5%8F%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="脚本更改用户密码-x2F-远程端口-x2F-开放防火墙端口"><a href="#脚本更改用户密码-x2F-远程端口-x2F-开放防火墙端口" class="headerlink" title="脚本更改用户密码&#x2F;远程端口&#x2F;开放防火墙端口"></a>脚本更改用户密码&#x2F;远程端口&#x2F;开放防火墙端口</h1><p>通过脚本设置用户信息，更改windows远程端口及开放防火墙端口。</p><span id="more"></span><h2 id="操作记录"><a href="#操作记录" class="headerlink" title="操作记录"></a>操作记录</h2><p>创建一个bat文件，文件内容直接复制下面的，然后运行即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash">@<span class="hljs-built_in">echo</span> off<br>:begin<br><span class="hljs-built_in">echo</span> %Date% %Time% &gt;&gt; change.txt<br><span class="hljs-built_in">echo</span> <span class="hljs-comment">#######################</span><br><span class="hljs-built_in">set</span> /p input=请输入需要修改的密码:<br><span class="hljs-built_in">echo</span> 密码修改为:%input% &gt;&gt; change.txt<br>net user administrator %input% &amp;&amp; <span class="hljs-built_in">echo</span> 密码修改成功 || <span class="hljs-built_in">echo</span> 密码修改失败，输入密码为弱密码，请重新输入强密码 &amp;&amp; goto begin<br><br><span class="hljs-built_in">echo</span> <span class="hljs-comment">##############</span><br><span class="hljs-built_in">echo</span> 修改远程桌面端口<br><span class="hljs-built_in">echo</span> <span class="hljs-comment">##############</span><br><br><span class="hljs-built_in">set</span> /p c=请输入新的远程登录端口:<br>reg add <span class="hljs-string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds\tcp&quot;</span> /v <span class="hljs-string">&quot;PortNumber&quot;</span> /t REG_DWORD /d <span class="hljs-string">&quot;%c&quot;</span> /f<br>reg add <span class="hljs-string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot;</span> /v <span class="hljs-string">&quot;PortNumber&quot;</span> /t REG_DWORD /d <span class="hljs-string">&quot;%c&quot;</span> /f<br><span class="hljs-built_in">echo</span> 远程桌面端口更改为：%c% &gt;&gt; change.txt<br><br><span class="hljs-built_in">echo</span> <span class="hljs-comment">######################</span><br><span class="hljs-built_in">echo</span> 配置防火墙开放远程端口%c%<br><span class="hljs-built_in">echo</span> <span class="hljs-comment">######################</span><br><br>netsh firewall show state | findstr 操作模式 &gt; %temp%\1.txt<br><span class="hljs-built_in">set</span> /p a= &lt;%temp%\1.txt<br><span class="hljs-built_in">set</span> b=%a:~-2%<br>del %temp%\1.txt<br><span class="hljs-keyword">if</span> <span class="hljs-string">&quot;%b%&quot;</span>==<span class="hljs-string">&quot;启用&quot;</span> (<span class="hljs-built_in">echo</span> 防火墙已经开放%c%端口 &amp;&amp; netsh firewall <span class="hljs-built_in">set</span> protopening TCP %c% <span class="hljs-built_in">enable</span> &gt; NUL) <span class="hljs-keyword">else</span> <span class="hljs-built_in">echo</span> 防火墙未开启，无须配置<br><br><span class="hljs-built_in">echo</span> <span class="hljs-comment">##########</span><br><span class="hljs-built_in">echo</span> 重启生效<br><span class="hljs-built_in">echo</span> <span class="hljs-comment">##########</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 7 配置ntp服务</title>
    <link href="/2019/03/31/centos-7-%E9%85%8D%E7%BD%AEntp%E6%9C%8D%E5%8A%A1/"/>
    <url>/2019/03/31/centos-7-%E9%85%8D%E7%BD%AEntp%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="CentOS配置ntp-server"><a href="#CentOS配置ntp-server" class="headerlink" title="CentOS配置ntp server"></a>CentOS配置ntp server</h1><p>网络时间协议 - NTP - 是运行在传输层 123 号端口的 UDP 协议，它允许计算机通过网络同步准确时间。随着时间的流逝，计算机内部时间会出现漂移，这会导致时间不一致问题，尤其是对于服务器和客户端日志文件，或者你想要复制服务器的资源或数据库。</p><span id="more"></span><h2 id="安装和配置ntp-serve"><a href="#安装和配置ntp-serve" class="headerlink" title="安装和配置ntp serve"></a>安装和配置ntp serve</h2><p>安装配置过程记录如下：</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>可直接通过官方yum安装。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bahs">sudo yum install ntp<br></code></pre></td></tr></table></figure><h3 id="选择NTP-SERVER"><a href="#选择NTP-SERVER" class="headerlink" title="选择NTP SERVER"></a>选择NTP SERVER</h3><p>NTP Public Pool Time Servers，安装NTP后，可以在NTP公共服务器池中选择所在地理位置的服务器列表。服务池链接[请戳][1]。</p><p>如中国的服务器池为：</p><blockquote><p>0.cn.pool.ntp.org<br>1.cn.pool.ntp.org<br>2.cn.pool.ntp.org<br>3.cn.pool.ntp.org  </p></blockquote><h3 id="更改ntp服务配置文件"><a href="#更改ntp服务配置文件" class="headerlink" title="更改ntp服务配置文件"></a>更改ntp服务配置文件</h3><p>配置文件为&#x2F;etc&#x2F;ntp.conf：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/ntp.conf<br><br><span class="hljs-comment"># For more information about this file, see the man pages</span><br><span class="hljs-comment"># ntp.conf(5), ntp_acc(5), ntp_auth(5), ntp_clock(5), ntp_misc(5), ntp_mon(5).</span><br><br>driftfile /var/lib/ntp/drift<br><br><span class="hljs-comment"># Permit time synchronization with our time source, but do not</span><br><span class="hljs-comment"># permit the source to query or modify the service on this system.</span><br>restrict default nomodify notrap nopeer noquery<br><br><span class="hljs-comment"># Permit all access over the loopback interface.  This could</span><br><span class="hljs-comment"># be tightened as well, but to do so would effect some of</span><br><span class="hljs-comment"># the administrative functions.</span><br>restrict 127.0.0.1 <br>restrict ::1<br><br><span class="hljs-comment"># Hosts on local network are less restricted.</span><br><span class="hljs-comment">#restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap</span><br><br>restrict 172.17.10.0 mask 255.255.255.0 nomodify notrap<br>restrict 52.109.3.0 mask 255.255.255.0 nomodify notrap<br><br><span class="hljs-comment"># Use public servers from the pool.ntp.org project.</span><br><span class="hljs-comment"># Please consider joining the pool (http://www.pool.ntp.org/join.html).</span><br>server 0.cn.pool.ntp.org<br>server 1.cn.pool.ntp.org<br>server 2.cn.pool.ntp.org<br>server 3.cn.pool.ntp.org<br><br><span class="hljs-comment">#broadcast 192.168.1.255 autokey        # broadcast server</span><br><span class="hljs-comment">#broadcastclient                        # broadcast client</span><br><span class="hljs-comment">#broadcast 224.0.1.1 autokey            # multicast server</span><br><span class="hljs-comment">#multicastclient 224.0.1.1              # multicast client</span><br><span class="hljs-comment">#manycastserver 239.255.254.254         # manycast server</span><br><span class="hljs-comment">#manycastclient 239.255.254.254 autokey # manycast client</span><br><br><span class="hljs-comment"># Enable public key cryptography.</span><br><span class="hljs-comment">#crypto</span><br><br>includefile /etc/ntp/crypto/pw<br><br><span class="hljs-comment"># Key file containing the keys and key identifiers used when operating</span><br><span class="hljs-comment"># with symmetric key cryptography. </span><br>keys /etc/ntp/keys<br><br><span class="hljs-comment"># Specify the key identifiers which are trusted.</span><br><span class="hljs-comment">#trustedkey 4 8 42</span><br><br><span class="hljs-comment"># Specify the key identifier to use with the ntpdc utility.</span><br><span class="hljs-comment">#requestkey 8</span><br><br><span class="hljs-comment"># Specify the key identifier to use with the ntpq utility.</span><br><span class="hljs-comment">#controlkey 8</span><br><br><span class="hljs-comment"># Enable writing of statistics records.</span><br><span class="hljs-comment">#statistics clockstats cryptostats loopstats peerstats</span><br><br><span class="hljs-comment"># Disable the monitoring facility to prevent amplification attacks using ntpdc</span><br><span class="hljs-comment"># monlist command when default restrict does not include the noquery flag. See</span><br><span class="hljs-comment"># CVE-2013-5211 for more details.</span><br><span class="hljs-comment"># Note: Monitoring will not be disabled with the limited restriction flag.</span><br><span class="hljs-built_in">disable</span> monitor<br><br>logfile /var/log/ntp.log<br></code></pre></td></tr></table></figure><p>更改如上所示：</p><blockquote><p>restrict 172.17.10.0 mask 255.255.255.0 nomodify notrap</p></blockquote><p>nomodify notrap 语句意味着不允许你的客户端配置服务器或者作为同步时间的节点。</p><blockquote><p>logfile &#x2F;var&#x2F;log&#x2F;ntp.log  </p></blockquote><p>如果需要用于错误处理的额外信息，以防你的 NTP 守护进程出现问题，添加一个 logfile 语句，用于记录所有 NTP 服务器问题到一个指定的日志文件。</p><p>保存配置文件。</p><h2 id="启用服务以及防火墙配置"><a href="#启用服务以及防火墙配置" class="headerlink" title="启用服务以及防火墙配置"></a>启用服务以及防火墙配置</h2><h3 id="开放NTP-SERVE端口"><a href="#开放NTP-SERVE端口" class="headerlink" title="开放NTP SERVE端口"></a>开放NTP SERVE端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo firewall-cmd --add-service=ntp --permanent<br>sudo firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><h3 id="启用NTP-SERVER"><a href="#启用NTP-SERVER" class="headerlink" title="启用NTP SERVER"></a>启用NTP SERVER</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start ntpd<br>sudo systemctl <span class="hljs-built_in">enable</span> ntpd<br>sudo systemctl status ntpd<br><br>● ntpd.service - Network Time Service<br>   Loaded: loaded (/usr/lib/systemd/system/ntpd.service; enabled; vendor preset: disabled)<br>   Active: active (running) since Sun 2019-03-31 14:33:27 CST; 23min ago<br> Main PID: 14926 (ntpd)<br>   CGroup: /system.slice/ntpd.service<br>           └─14926 /usr/sbin/ntpd -u ntp:ntp -g<br><br>Mar 31 14:33:27 ntp-server systemd[1]: Starting Network Time Service...<br>Mar 31 14:33:27 ntp-server systemd[1]: Started Network Time Service.<br>Mar 31 14:33:27 ntp-server ntpd[14926]: proto: precision = 0.054 usec<br>Mar 31 14:33:27 ntp-server ntpd[14926]: 0.0.0.0 c01d 0d kern kernel time <span class="hljs-built_in">sync</span> enabled<br></code></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ntp-server ~]<span class="hljs-comment"># ntpq -p</span><br>     remote           refid      st t when poll reach   delay   offset  jitter<br>==============================================================================<br> ntp1.ams1.nl.le 130.133.1.10     2 u  309  128  104  286.324  -30.954   2.799<br>*electrode.felix 89.231.96.83     2 u   79  128  177  245.661   -4.341  11.315<br> 118.190.21.209  .STEP.          16 u    - 1024    0    0.000    0.000   0.000<br> biisoni.miuku.n .STEP.          16 u    - 1024    0    0.000    0.000   0.000<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ntp-server ~]<span class="hljs-comment"># date -R</span><br>Sun, 31 Mar 2019 15:06:12 +0800<br></code></pre></td></tr></table></figure><p>查询ntp服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@ntp-server ~]<span class="hljs-comment"># ntpdate -q 0.cn.pool.ntp.org</span><br>server 78.46.102.180, stratum 2, offset -0.004452, delay 0.25752<br>server 51.15.238.170, stratum 0, offset 0.000000, delay 0.00000<br>server 199.182.204.197, stratum 0, offset 0.000000, delay 0.00000<br>server 94.130.49.186, stratum 3, offset -0.021914, delay 0.32487<br>31 Mar 15:09:05 ntpdate[24663]: adjust time server 78.46.102.180 offset -0.004452 sec<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ntp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>华为获取诊断信息文件</title>
    <link href="/2019/03/29/%E5%8D%8E%E4%B8%BA%E8%8E%B7%E5%8F%96%E8%AF%8A%E6%96%AD%E4%BF%A1%E6%81%AF%E6%96%87%E4%BB%B6/"/>
    <url>/2019/03/29/%E5%8D%8E%E4%B8%BA%E8%8E%B7%E5%8F%96%E8%AF%8A%E6%96%AD%E4%BF%A1%E6%81%AF%E6%96%87%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="华为交换机获取诊断信息"><a href="#华为交换机获取诊断信息" class="headerlink" title="华为交换机获取诊断信息"></a>华为交换机获取诊断信息</h1><p>在遇到设备故障或配置问题时，我们需要获取设备诊断信息，提供给华为厂商，用于判断故障原因。</p><span id="more"></span><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;HEXIN&gt;display diagnostic-information dia-info.txt<br>Now saving the diagnostic information to the device<br>34%/        //输出进度<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>huawei</tag>
      
      <tag>debug</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>更改windows默认3389端口</title>
    <link href="/2019/03/29/%E6%9B%B4%E6%94%B9windows%E9%BB%98%E8%AE%A43389%E7%AB%AF%E5%8F%A3/"/>
    <url>/2019/03/29/%E6%9B%B4%E6%94%B9windows%E9%BB%98%E8%AE%A43389%E7%AB%AF%E5%8F%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="windows-更改默认3389端口"><a href="#windows-更改默认3389端口" class="headerlink" title="windows 更改默认3389端口"></a>windows 更改默认3389端口</h1><p>windows 下通过注册更改默认的rdp协议端口，提升安全性。</p><span id="more"></span><h2 id="windows远程端口更改"><a href="#windows远程端口更改" class="headerlink" title="windows远程端口更改"></a>windows远程端口更改</h2><p>windows默认远程协议RDP端口为3389，更改默认端口操作如下：</p><h2 id="通过注册表更改默认RDP端口"><a href="#通过注册表更改默认RDP端口" class="headerlink" title="通过注册表更改默认RDP端口"></a>通过注册表更改默认RDP端口</h2><p>WIN+R运行程序regedit。注册表编辑器。</p><p>HKEY_LOCAL_MACHINE -&gt; SYSTEM -&gt; CurrentControlSet -&gt; Control -&gt; Terminal Server -&gt; Wds -&gt; rdpwd -&gt; Tds -tcp -&gt; PortNumber -&gt; 基数用十进制方式显示 -&gt; 更改为想要的端口号</p><p>HKEY_LOCAL_MACHINE -&gt; SYSTEM -&gt; CurrentControlSet -&gt; Control -&gt; Terminal Server -&gt; WinStations -&gt; RDP-Tcp -&gt; PortNumber -&gt; 基数用十进制方式显示 -&gt; 更改为想要的端口号</p><p>重启系统后，使用新的端口号进行远程连接。</p>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>rdp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 配置tftp服务</title>
    <link href="/2019/03/28/ubuntu-%E9%85%8D%E7%BD%AEtftp%E6%9C%8D%E5%8A%A1/"/>
    <url>/2019/03/28/ubuntu-%E9%85%8D%E7%BD%AEtftp%E6%9C%8D%E5%8A%A1/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-18-04-启用TFTP服务"><a href="#ubuntu-18-04-启用TFTP服务" class="headerlink" title="ubuntu 18.04 启用TFTP服务"></a>ubuntu 18.04 启用TFTP服务</h1><p>ubuntu 下配置tftp服务，用于上传或下载网络设备中的配置文件、固件等场合，记录备忘。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install tftpd-hpa tftp-hpa tftp-hpa-dbg pxelinux<br></code></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><ul><li>创建tftp服务目录</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> tftproot<br><span class="hljs-built_in">chmod</span> 777 tftproot<br></code></pre></td></tr></table></figure><ul><li>修改配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">cp</span> /etc/default/tftpd-hpa /etc/default/tftpd-hpa_backup   //备份配置文件<br>sudo vim /etc/default/tftpd-hpa         //修改配置文件<br><br>//配置如下<br><br><span class="hljs-comment"># /etc/default/tftpd-hpa</span><br><br>TFTP_USERNAME=<span class="hljs-string">&quot;tftp&quot;</span><br>TFTP_DIRECTORY=<span class="hljs-string">&quot;/home/abcd/tftproot&quot;</span><br>TFTP_ADDRESS=<span class="hljs-string">&quot;:69&quot;</span><br>TFTP_OPTIONS=<span class="hljs-string">&quot;-l -c -s&quot;</span><br></code></pre></td></tr></table></figure><ul><li>启用tftp服务</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo service tftpd-hpa restart<br>sudo systemctl status tftpd-hpa //查看服务状态<br><br>● tftpd-hpa.service - LSB: HPA<span class="hljs-string">&#x27;s tftp server</span><br><span class="hljs-string">   Loaded: loaded (/etc/init.d/tftpd-hpa; generated)</span><br><span class="hljs-string">   Active: active (running) since Thu 2019-03-28 19:44:48 CST; 16s ago</span><br><span class="hljs-string">     Docs: man:systemd-sysv-generator(8)</span><br><span class="hljs-string">  Process: 11088 ExecStop=/etc/init.d/tftpd-hpa stop (code=exited, status=0/SUCC</span><br><span class="hljs-string">  Process: 11093 ExecStart=/etc/init.d/tftpd-hpa start (code=exited, status=0/SU</span><br><span class="hljs-string">    Tasks: 1 (limit: 4915)</span><br><span class="hljs-string">   CGroup: /system.slice/tftpd-hpa.service</span><br><span class="hljs-string">           └─11101 /usr/sbin/in.tftpd --listen --user tftp --address :69 -l -c -</span><br><span class="hljs-string"></span><br><span class="hljs-string">3月 28 19:44:48 ian-ThinkPad systemd[1]: Starting LSB: HPA&#x27;</span>s tftp server...<br>3月 28 19:44:48 ian-ThinkPad tftpd-hpa[11093]:  * Starting HPA<span class="hljs-string">&#x27;s tftpd in.tftpd</span><br><span class="hljs-string">3月 28 19:44:48 ian-ThinkPad tftpd-hpa[11093]:    ...done.</span><br><span class="hljs-string">3月 28 19:44:48 ian-ThinkPad systemd[1]: Started LSB: HPA&#x27;</span>s tftp server.<br>lines 1-14/14 (END)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tftp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows 脚本自动登录交换机</title>
    <link href="/2019/03/27/windows-%E8%84%9A%E6%9C%AC%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E4%BA%A4%E6%8D%A2%E6%9C%BA/"/>
    <url>/2019/03/27/windows-%E8%84%9A%E6%9C%AC%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E4%BA%A4%E6%8D%A2%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="windows-脚本telnet登录交换机"><a href="#windows-脚本telnet登录交换机" class="headerlink" title="windows 脚本telnet登录交换机"></a>windows 脚本telnet登录交换机</h1><p>公司的另外一个项目中的一个小问题，网络中的LED显示屏，会经常从服务端到终端不通。从网关上ping一下之前，又可以从服务端正常操作。一直也没找到这个问题的根源，就想到了一个暂时解决方法，能不能写一个脚本自动登录交换机，执行ping命令。再写一个计划任务，每天定时执行一次脚本。</p><span id="more"></span><p>这个想法还真可以操作。脚本代码如下：</p><h2 id="自动登录脚本"><a href="#自动登录脚本" class="headerlink" title="自动登录脚本"></a>自动登录脚本</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> off<br><span class="hljs-built_in">echo</span> <span class="hljs-built_in">set</span> sh=WScript.CreateObject(<span class="hljs-string">&quot;WScript.Shell&quot;</span>) &gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> WScript.Sleep 3000 &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> sh.SendKeys <span class="hljs-string">&quot;open 10.10.10.2&quot;</span> &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> WScript.Sleep 3000 &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> sh.SendKeys <span class="hljs-string">&quot;&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> WScript.Sleep 3000 &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> sh.SendKeys “USERNAME&#123;ENTER&#125;” &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> WSCript.Sleep 3000 &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> sh.SendKeys <span class="hljs-string">&quot;PASSWORD&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> WScript.Sleep 3000 &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> sh.SendKeys <span class="hljs-string">&quot;ping 192.0.5.120&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs<br>......<br><span class="hljs-built_in">echo</span> sh.SendKeys <span class="hljs-string">&quot;exit&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> WScript.Sleep 30 &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> sh.SendKeys <span class="hljs-string">&quot;&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> sh.SendKeys <span class="hljs-string">&quot;&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs<br><span class="hljs-built_in">echo</span> sh.SendKeys <span class="hljs-string">&quot;&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs<br>start telnet<br>cscript //nologo telnet_tmp.vbs<br>taskkill /f /im cmd.exe<br><span class="hljs-built_in">echo</span> sh.SendKeys <span class="hljs-string">&quot;&#123;ENTER&#125;&quot;</span><br><span class="hljs-built_in">echo</span> sh.SendKeys <span class="hljs-string">&quot;quit&#123;ENTER&#125;&quot;</span><br><span class="hljs-built_in">echo</span> del telnet_tmp.vbs<br></code></pre></td></tr></table></figure><p>TODO：以上脚本可以实现登录和自动PING，仍然存在一个问题，就是telnet退出后，有一个任意键退出。此问题暂无思路。留后。</p>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vbs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 7 双网卡共享上网</title>
    <link href="/2019/03/27/centos-7-%E5%8F%8C%E7%BD%91%E5%8D%A1%E5%85%B1%E4%BA%AB%E4%B8%8A%E7%BD%91/"/>
    <url>/2019/03/27/centos-7-%E5%8F%8C%E7%BD%91%E5%8D%A1%E5%85%B1%E4%BA%AB%E4%B8%8A%E7%BD%91/</url>
    
    <content type="html"><![CDATA[<h1 id="centos-7-双网卡共享上网"><a href="#centos-7-双网卡共享上网" class="headerlink" title="centos 7 双网卡共享上网"></a>centos 7 双网卡共享上网</h1><p>多网口服务器配置nat转发，实现内网共享上网。</p><span id="more"></span><h2 id="centos-7-为私网提共nat网关服务"><a href="#centos-7-为私网提共nat网关服务" class="headerlink" title="centos 7 为私网提共nat网关服务"></a>centos 7 为私网提共nat网关服务</h2><p>前言，公司的一个项目需要，只有三台服务器和一个上一家中标单位提供的公网IP，除此之外没有其余的硬件。公司的应用部署需求是，一台应用两台数据库，可能还有后期数据库从项目本身内网设备中取数据的需求。在没有网络设备的情况下，想到一个办法，因为服务器都是四网卡，可以从把一台服务器配置双网卡，一网卡配置公司IP，一网卡配置私网IP。私网IP连另外两台服务器接一个小的四口交换机连内网。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><p>配置其中一台一个网口作为内网网关，另一网口作为出口接入，nat转发内网流量。</p><h3 id="服务器一"><a href="#服务器一" class="headerlink" title="服务器一"></a>服务器一</h3><p>双网卡配置，em1配置公网，em2配置内网地址，即内网网关。</p><h4 id="IP配置"><a href="#IP配置" class="headerlink" title="IP配置"></a>IP配置</h4><ul><li>em1:218.108.88.88     项目公网地址</li><li>em2:10.10.100.10      项目私网网段</li></ul><h4 id="配置IP转发"><a href="#配置IP转发" class="headerlink" title="配置IP转发"></a>配置IP转发</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim /etc/sysctl.conf<br><span class="hljs-comment"># 追加一行内容</span><br><span class="hljs-comment"># Controls IP packet forwarding</span><br>net.ipv4.ip_forward = 1<br></code></pre></td></tr></table></figure><h4 id="启用转发配置"><a href="#启用转发配置" class="headerlink" title="启用转发配置"></a>启用转发配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sysctl -w net.ipv4.ip_forward=1<br></code></pre></td></tr></table></figure><h4 id="防火墙域控制"><a href="#防火墙域控制" class="headerlink" title="防火墙域控制"></a>防火墙域控制</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --zone=external --add-interface=em0 --permanent<br>firewall-cmd --zone=internal --add-interface=em1 --permanent<br></code></pre></td></tr></table></figure><p>分别把公网的网卡添加到external域，私网网卡添加到internal域。</p><h4 id="更新防火墙配置"><a href="#更新防火墙配置" class="headerlink" title="更新防火墙配置"></a>更新防火墙配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><h4 id="添加IP伪装"><a href="#添加IP伪装" class="headerlink" title="添加IP伪装"></a>添加IP伪装</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --zone=external --add-masquerade --permanent<br></code></pre></td></tr></table></figure><p>启用公网IP伪装。</p><h4 id="启用NAT规则"><a href="#启用NAT规则" class="headerlink" title="启用NAT规则"></a>启用NAT规则</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --direct --passthrough ipv4 -t nat -I POSTROUTING -o em0 -j MASQUERADE -s 10.10.100.0/24<br></code></pre></td></tr></table></figure><p>启用私网段IP NAT转发。</p><h4 id="放通服务器上必要的端口"><a href="#放通服务器上必要的端口" class="headerlink" title="放通服务器上必要的端口"></a>放通服务器上必要的端口</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --zone=internal --add-service=tftp<br>firewall-cmd --permanent --zone=internal --add-service=ssh<br></code></pre></td></tr></table></figure><p>如tftp，ssh等。</p><h4 id="更新防火墙配置-1"><a href="#更新防火墙配置-1" class="headerlink" title="更新防火墙配置"></a>更新防火墙配置</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><p>至此nat配置结束。</p><h3 id="服务器二配置"><a href="#服务器二配置" class="headerlink" title="服务器二配置"></a>服务器二配置</h3><p>配置服务器网串口IP为私网IP，如10.10.10.9。</p><blockquote><p>TYPE&#x3D;Ethernet<br>PROXY_METHOD&#x3D;none<br>BROWSER_ONLY&#x3D;no<br>BOOTPROTO&#x3D;static<br>DEFROUTE&#x3D;yes<br>IPV4_FAILURE_FATAL&#x3D;no<br>IPV6INIT&#x3D;yes<br>IPV6_AUTOCONF&#x3D;yes<br>IPV6_DEFROUTE&#x3D;yes<br>IPV6_FAILURE_FATAL&#x3D;no<br>IPV6_ADDR_GEN_MODE&#x3D;stable-privacy<br>NAME&#x3D;em1<br>UUID&#x3D;09560695-2f1b-4052-854d-3d0840c00d6a<br>DEVICE&#x3D;em1<br>ONBOOT&#x3D;yes<br>IPADDR&#x3D;10.10.100.9<br>NETMASK&#x3D;255.255.255.0<br>GATEWAY&#x3D;10.10.100.10<br>DNS1&#x3D;223.5.5.5.5<br>DNS2&#x3D;114.114.114.114<br>PREFIX&#x3D;24<br>ZONE&#x3D;internal  </p></blockquote><h3 id="服务器三配置"><a href="#服务器三配置" class="headerlink" title="服务器三配置"></a>服务器三配置</h3><p>参考服务器二，配置网关指向服务器一的私网IP。至此，三台服务器均可上网，服务器配置公司业务。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NIC</tag>
      
      <tag>centos 7</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 安装打印机驱动</title>
    <link href="/2019/03/26/ubuntu-%E5%AE%89%E8%A3%85%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8/"/>
    <url>/2019/03/26/ubuntu-%E5%AE%89%E8%A3%85%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="EPSON-L455驱动安装"><a href="#EPSON-L455驱动安装" class="headerlink" title="EPSON L455驱动安装"></a>EPSON L455驱动安装</h1><p>自己在多年前买了一个打印复印一体机，EPSON L455，4色喷墨打印机。也是长时间没有在ubuntu下使用，重装系统后，准备用起来。安装驱动记录备忘。</p><span id="more"></span><h2 id="驱动下载"><a href="#驱动下载" class="headerlink" title="驱动下载"></a>驱动下载</h2><p>EPSON L455有linux驱动支持。下载页面<a href="http://download.ebz.epson.net/dsc/search/01/search/searchModule">请戳</a>，在驱动页面选择型号，L455，选择操作系统LINUX。有三个下载项，两个打印驱动和一个扫描驱动：</p><ul><li>Epson Printer Utility 1.0.2</li><li>Epson Printer Utility 1.0.0</li><li>Scanner Driver 1.3.44</li></ul><p>两个打印驱动任选一个，进入下载页面，点击同意，出现下载链接。点击下载deb包。扫描安装，选择ubuntu版本。</p><h2 id="打印驱动依赖安装"><a href="#打印驱动依赖安装" class="headerlink" title="打印驱动依赖安装"></a>打印驱动依赖安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install lsb<br></code></pre></td></tr></table></figure><h2 id="安装打印机"><a href="#安装打印机" class="headerlink" title="安装打印机"></a>安装打印机</h2><p>双南打印机驱动安装包，安装驱动程序。安装结束后，打开系统设置，打印机，已经自动连接和添加了打印机。</p><h2 id="扫描安装"><a href="#扫描安装" class="headerlink" title="扫描安装"></a>扫描安装</h2><p>解压下载的驱动安装包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> u+x install.sh<br>./install.sh<br></code></pre></td></tr></table></figure><p>安装结束后，打开扫描易，已经自动添加EPSON扫描设备了。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>EPSON L455</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 18.04 使用小结</title>
    <link href="/2019/03/24/ubuntu-18-04-%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/"/>
    <url>/2019/03/24/ubuntu-18-04-%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-18-04安装配置小结"><a href="#ubuntu-18-04安装配置小结" class="headerlink" title="ubuntu 18.04安装配置小结"></a>ubuntu 18.04安装配置小结</h1><p>起因，从自己毕业以来，自己的电脑就一直在使用ubuntu。最早的长期使用就是从12.04LTS用起。基本到每一个LTS版本自己就升级一次版本。到18.04时，自己重装了系统，各种小折腾后，基本上就比较符合自己需求了。一些小瑕疵还是有的，比如有一些自己之前常用的软件，某些依赖不再被支持，无法安装或启动。在自己尝试无果后，还因为不知道安装了某些依赖，导致系统重启后，每次都会跳出系统错误，询问是否发送报告。虽然实际使用中是没什么问题，不过这个让人比较难受。</p><p>另外一个比较让人纠结的问题，去年的时候，自己买了一块手绘板，尝试安装linux wacom project后，经常性的在重启后，无法使用。这让我不得不在重新启动电脑后，再一次的尝试重新安装wacom project相关的依赖，或者不关／重启计算机。</p><p>鉴于对自己笔记本硬件已经不太满意，前一段时间，花了点钱，给自己的电脑加了一根固态。后面，就又一次重装了系统。</p><p>接下来梳理一下自已安装系统后的经过。记录一下常用的程序，及各个程序相关的插件。备用。</p><span id="more"></span><h2 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h2><p>由于自己的笔记本有一个NGFF 2242的插槽支持NVME协议，所以，直接买了一根NGFF的小固态。装上去后，直接开始安装全新系统。电脑上已经双硬盘SSD＋HDD布局，所以安装分区的时候，考虑到固态的容量和个人资料的安全性，分区思路如下：</p><p>固态硬盘：EFFI＋&#x2F;分区</p><p>机械硬盘：&#x2F;home分区</p><p>安装时，直接连网并更新系统，以及第三方插件。安装结束后，重新启动。接下来就是属于安装结束后要做的事情了。</p><h2 id="安装后做的事情"><a href="#安装后做的事情" class="headerlink" title="安装后做的事情"></a>安装后做的事情</h2><h3 id="切换源"><a href="#切换源" class="headerlink" title="切换源"></a>切换源</h3><p>在安装后，第一件事，更换源。打开应用程序“软件和更新”–&gt;ubuntu软件–&gt;选择下拉列表中的其它站点(默认为中国的服务器)–&gt;点击选择最佳服务器。程序会做一系列连通性测试，并给出一个最快的系统源，在我自己的使用中，一般都是CN99的源(所说是网易的源)。应用后，系统会重新加载软件更新缓存，再安装程序或更新的时候，就从最近的源中提供更新了。</p><h3 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h3><p>ubuntu 18.04默认的输入法，又从之前的fictx换回了ibus。安装时，选择了中文语言后，ibus默认会安装拼音输入法。而很巧的是，我自己是五笔的使用者，因为在手机上五笔打字这个绝对是很糟糕的体验，自己又学习了双拼。所以，自己电脑上是五毛，手机上是双拼，使用的是微软双拼的方案。</p><p>所以在ubuntu上，同时使用了双拼和五笔的输入法。</p><h4 id="双拼"><a href="#双拼" class="headerlink" title="双拼"></a>双拼</h4><p>双拼输入法的设置，直接在面板上点击输入法图标–&gt;首选项–&gt;拼间模式–&gt;选择双拼(微软双拼)–&gt;关闭标签面即可。</p><h4 id="五笔"><a href="#五笔" class="headerlink" title="五笔"></a>五笔</h4><p>五笔输入法，我们需要安装五笔输入法框架。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install ibus-table-wubi<br></code></pre></td></tr></table></figure><p>安装结束后，终端运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ibus-setup<br></code></pre></td></tr></table></figure><p>输入法设置中选择输入法标签页–&gt;添加–&gt;汉语–&gt;汉语(海峰五笔86)–&gt;关闭标签页</p><p>另外一个比较好玩的是，ubuntu已经支持输入法已经支持emoje了。在系统自带的gedit中，输入时，右击–&gt;插入绘文字–&gt;选择emoje即可。除了自带的gedit，其余的应用暂未测试，至少自己写文档的vs code中右击是没有的。</p><h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><h4 id="firefox"><a href="#firefox" class="headerlink" title="firefox"></a>firefox</h4><p>firefox浏览器作为系统自带的默认浏览器，自然是非常优秀，但自己通常来说在安装结束后，基本就将firefox作为备用了。因为一些众所周知的原因。firefox我是不会放弃的。firefox上也有一些自己经常用到的插件记录如下：</p><ol><li>Gnome-shell(18.04必备了)</li><li>Firefox-Lightbeam</li><li>Tab2QR</li></ol><p>Gonme-shell通过命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install gnome-shell-extensions<br></code></pre></td></tr></table></figure><p>后三个通过附件管理器中搜索安装。</p><p>Gnome-shell-extensions为了使ubuntu桌面更符合自己的使用需求，会配合gnome-tweak-tool一起使用。</p><p>Gnome-shell-etensions控件，使用列表如下：</p><ol><li>Dash to Panel(Dash、Pancel合并和设置)</li><li>Hide Top Bar </li><li>Open Weather</li><li>Removable Drive Menu</li><li>Sound Input &amp; Ootput Device Chooser</li></ol><p>Firefox控件可以在登录后同步。</p><h4 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h4><p>对于Chrome，可以直接使用apt安装源里的Chromium，Chrome也中基于开源的Chromium而来。两者在使用的时候，很少能感知到差别，同样也是使得google的账号同步。之前一直通过源里安装Chromium安装，在后面有一次打开google earth时，提示，使用的非chrome浏览器，后面我就直接安装chrome浏览器了。</p><p>chrome使用的插件：</p><ol><li>GSConnect</li><li>Momentum</li><li>PanicButton</li><li>Google翻译</li><li>Neater Bookmarks</li><li>Secure Shell Extension</li><li>Unsplash Instant</li><li>Full Page Screen Capture</li></ol><p>同样的，只要你能登录，那你的设置和习惯就跑不了。同步后，就都有了。</p><h3 id="文档码字或者代码"><a href="#文档码字或者代码" class="headerlink" title="文档码字或者代码"></a>文档码字或者代码</h3><h4 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h4><p>在之前的vim中，我会折腾代码补全、目录浏览等，参考各路大神的配置，尝试打造成一个自己用得顺手的IDE。在有了space vim之后，我已经什么都不想动了。</p><p>一条命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">curl -sLf https://spacevim.org/cn/install.sh | bash<br></code></pre></td></tr></table></figure><p>回车后，打开vim，相关的插件会自动的安装上去。</p><p>好了，剩下的只有享受了。</p><h4 id="VS-CODE"><a href="#VS-CODE" class="headerlink" title="VS CODE"></a>VS CODE</h4><p>微软家开源的，质量没得说。结果自己主要的用途居然是markdown。先说安装，再说插件。</p><p>下载地址，<a href="https://code.visualstudio.com/">请戳</a>。</p><p>插件如下：</p><ul><li>Chinese(simplified)LanguadePack for Visual Studio Code</li><li>Gitlens</li><li>LeetCode</li><li>Markdown All in One</li><li>Markdown+Math</li><li>Mysql</li><li>Mysql Syntax</li><li>One Dark Pro</li><li>PowerShell</li><li>Python</li><li>Vim</li><li>Vscode-icons</li><li>C&#x2F;C++</li></ul><h4 id="Gitkraken"><a href="#Gitkraken" class="headerlink" title="Gitkraken"></a>Gitkraken</h4><p>下载<a href="https://www.gitkraken.com/">请戳</a></p><h3 id="远程管理，调试"><a href="#远程管理，调试" class="headerlink" title="远程管理，调试"></a>远程管理，调试</h3><p>在linux上似乎很难找到一个和xshell相当的顺手的设备调试和管理工具，虽然说，有命令行通过配置文件一样非常高效，但是，GUI也自有其优势。在自己使用的工具中，关于串口调试：</p><ul><li>minicom</li><li>picocom</li></ul><p>远程管理工具：</p><ul><li>termius</li></ul><p>全平台(windows, mac os, linux, android)，可以购买许可，多端同步。当然，也可以不买许可。单机用。</p><p>安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo snap install termius-app<br></code></pre></td></tr></table></figure><ul><li>anydesk   方便访问本机</li></ul><h3 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h3><h4 id="播放器"><a href="#播放器" class="headerlink" title="播放器"></a>播放器</h4><ul><li>vlc</li><li>kodi</li><li>网易去音乐(必装了)</li><li>Cpod      网络收音机</li></ul><h4 id="画图、图片"><a href="#画图、图片" class="headerlink" title="画图、图片"></a>画图、图片</h4><ul><li>GIMP</li><li>Krita</li><li>Mypaint</li><li>Peek  gif录屏</li><li>OBS   录屏、串流</li><li>OpenTooz     简单的动画制作</li><li>Openshot     视频剪辑</li></ul><h3 id="虚拟机和模拟器"><a href="#虚拟机和模拟器" class="headerlink" title="虚拟机和模拟器"></a>虚拟机和模拟器</h3><ul><li>virtualbox</li><li>playonlinux</li></ul><h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><ul><li>steam</li><li>gog</li></ul><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul><li>uget </li><li>transmission</li><li>filezilla</li></ul><h3 id="词典"><a href="#词典" class="headerlink" title="词典"></a>词典</h3><ul><li>goldendict    本地</li><li>有道词典</li></ul><h3 id="聊天"><a href="#聊天" class="headerlink" title="聊天"></a>聊天</h3><ul><li>skype</li><li>gitter</li></ul><h3 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h3><ul><li>stacer    优化工具，下载<a href="https://github.com/oguzhaninan/Stacer">请戳</a></li><li>avast     杀毒(给个心理安慰，基本不用系列)</li><li>etcher    U盘镜像写入工具，下载<a href="https://www.balena.io/etcher/">请戳</a></li></ul><h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><h4 id="文泉驿"><a href="#文泉驿" class="headerlink" title="文泉驿"></a>文泉驿</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install font-wqy-microhei   //文泉驿米黑<br>sudo apt install font-wqy-zhenhei    //文泉驿正黑<br></code></pre></td></tr></table></figure><h4 id="ubuntu-font-family"><a href="#ubuntu-font-family" class="headerlink" title="ubuntu-font-family"></a>ubuntu-font-family</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install ttf-ubuntu-font-family <br></code></pre></td></tr></table></figure><h4 id="google-Noto"><a href="#google-Noto" class="headerlink" title="google Noto"></a>google Noto</h4><p>下载地址<a href="https://fonts.google.com/">请戳</a>，如果可以访问得到的话。</p><h4 id="dejavu"><a href="#dejavu" class="headerlink" title="dejavu"></a>dejavu</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install ttf-dejavu ttf-dejavu-core ttf-dejavu-extra<br></code></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在完成这次的重装后，因为上了固态这个大保健，电脑似乎又能再战三年。全新安装后的系统也没有报错，之前因为自己折腾而导致各种不明依赖造成的手绘板不可用也正常使用了。算是已经接近自己完美使用的需要了。</p><p>自然，也还有一些问题，在我自己搭建的过程中，也给解决掉了。其中有一个因为系统更新后，键盘鼠标不可用的。也在自己搜索后得到解决的办法，会单独写一篇记录，实在是值得记住，差点想要放弃重新再安装。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 18.04 开启TCP BBR拥塞控制</title>
    <link href="/2019/03/15/ubuntu-18-04-%E5%BC%80%E5%90%AFTCP-BBR%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/"/>
    <url>/2019/03/15/ubuntu-18-04-%E5%BC%80%E5%90%AFTCP-BBR%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/</url>
    
    <content type="html"><![CDATA[<h1 id="启用TCP-BBR拥塞算法"><a href="#启用TCP-BBR拥塞算法" class="headerlink" title="启用TCP BBR拥塞算法"></a>启用TCP BBR拥塞算法</h1><p>TCP BBR是一个改良版的tcp拥塞控制算法，其目的在于最大化利用网络链路。</p><span id="more"></span><p>TCP BBR要解决的问题：</p><ul><li>充分利用存在一定丢包率的网络</li><li>降低网络</li></ul><h2 id="查看系统内核"><a href="#查看系统内核" class="headerlink" title="查看系统内核"></a>查看系统内核</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -r<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">4.15.0-46-generic<br></code></pre></td></tr></table></figure><h2 id="修改系统变量"><a href="#修改系统变量" class="headerlink" title="修改系统变量"></a>修改系统变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; /etc/sysctl.conf<br><span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; /etc/sysctl.conf<br></code></pre></td></tr></table></figure><h2 id="保存生效，配置内核"><a href="#保存生效，配置内核" class="headerlink" title="保存生效，配置内核"></a>保存生效，配置内核</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sysctl -p<br></code></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">net.ipv4.neigh.default.base_reachable_time_ms = 600000<br>net.ipv4.neigh.default.macast_solicit = 20<br>net.ipv4.neigh.default.retrans_time_ms = 250<br>net.core.default_qdisc = fq<br>net.ipv4.tcp_congestion_control = bbr<br></code></pre></td></tr></table></figure><h2 id="查看内核是否开启BBR"><a href="#查看内核是否开启BBR" class="headerlink" title="查看内核是否开启BBR"></a>查看内核是否开启BBR</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sysctl net.ipv4.tcp_available_congestion_control<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net.ipv4.tcp_available_congestion_control = reno cubic bbr<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sysctl net.ipv4.tcp_congestion_control<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net.ipv4.tcp_congestion_control = bbr<br></code></pre></td></tr></table></figure><h2 id="验证BBR是否已经启动"><a href="#验证BBR是否已经启动" class="headerlink" title="验证BBR是否已经启动"></a>验证BBR是否已经启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsmod | grep bbr<br></code></pre></td></tr></table></figure><p>输出：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tcp_bbr         20480 2<br></code></pre></td></tr></table></figure><p>BBR已启用，BBR协议在linux4.9内核开始集成。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>TCP</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 不支持i386</title>
    <link href="/2019/03/10/ubuntu-%E4%B8%8D%E6%94%AF%E6%8C%81i386/"/>
    <url>/2019/03/10/ubuntu-%E4%B8%8D%E6%94%AF%E6%8C%81i386/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu更新跳过i386体系结构"><a href="#ubuntu更新跳过i386体系结构" class="headerlink" title="ubuntu更新跳过i386体系结构"></a>ubuntu更新跳过i386体系结构</h1><p>前一次，在电脑上安装了google_earth_pro。安装结束后，系统更新就会多出一条更新信息：</p><blockquote><p>N: 鉴于仓库 ‘<a href="http://dl.google.com/linux/earth/deb">http://dl.google.com/linux/earth/deb</a> stable InRelease’ 不支持 ‘i386’ 体系结构，跳过配置文件 ‘main&#x2F;binary-i386&#x2F;Packages’ 的获取。</p></blockquote><span id="more"></span><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ul><li>打开&#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;google-earth-pro.list</li></ul><p>－ 修改文件</p><p>原文件内容：</p><p>deb <a href="http://dl.google.com/linux/earth/deb/">http://dl.google.com/linux/earth/deb/</a> stable main</p><p>更改为：</p><p>deb [arch&#x3D;amd64] <a href="http://dl.google.com/linux/earth/deb/">http://dl.google.com/linux/earth/deb/</a> stable main</p><p>好了，更新正常。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 安装mysql server</title>
    <link href="/2019/03/06/ubuntu-%E5%AE%89%E8%A3%85mysql-server/"/>
    <url>/2019/03/06/ubuntu-%E5%AE%89%E8%A3%85mysql-server/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-安装mysql-server"><a href="#ubuntu-安装mysql-server" class="headerlink" title="ubuntu 安装mysql server"></a>ubuntu 安装mysql server</h1><p>ubuntu 安装配置 mysql 记录备忘。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>系统：ubuntu 18.04 LTS</li><li>安装方式：apt</li><li>版本：5.7.25</li></ul><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install mysql<br></code></pre></td></tr></table></figure><h3 id="启用服务"><a href="#启用服务" class="headerlink" title="启用服务"></a>启用服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start mysql  //启用服务<br>sudo systemctl status mysql //查看服务状态<br>sudo systemctl <span class="hljs-built_in">enable</span> mysql //将服务添加开机启动<br></code></pre></td></tr></table></figure><h3 id="初始化操作"><a href="#初始化操作" class="headerlink" title="初始化操作"></a>初始化操作</h3><p>在之前的ubuntu版本中，通过apt方式安装mysql服务后，直接运行命令mysql_secure_installation，即可直接运行mysql的初始化。默认的root密码为空，提交回车后，会直接提示设置root密码，以及mysql相关的其它配置。</p><p>在ubuntu 18.04中，默认的安装中，没有root账号，运行会提示如下：</p><blockquote><p>Securing the MySQL server deployment.<br>Enter password for user root:<br>Error: Access denied for user ‘root‘@’localhost’  </p></blockquote><p>即没有root账号也没有无法运行mysql_secure_installation命令，需要我们从安装的配置文件中寻找有用的信息，运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">whereis mysql<br></code></pre></td></tr></table></figure><p>输出结果：</p><blockquote><p>mysql: &#x2F;usr&#x2F;bin&#x2F;mysql &#x2F;usr&#x2F;lib&#x2F;mysql &#x2F;etc&#x2F;mysql &#x2F;usr&#x2F;share&#x2F;mysql &#x2F;usr&#x2F;share&#x2F;man&#x2F;man1&#x2F;mysql.1.gz  </p></blockquote><p>找到配置文件目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> /etc/mysqlconf.d  debian.cnf  debian-start  my.cnf  my.cnf.fallback  mysql.cnf  mysql.conf.d<br></code></pre></td></tr></table></figure><p>在配置目录中，还看到了debian.cnf，查看配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/mysql/debian.cnf<br></code></pre></td></tr></table></figure><p>输出如下：</p><blockquote><p>Automatically generated for Debian scripts. DO NOT TOUCH!<br>[client]<br>host     &#x3D; localhost<br>user     &#x3D; debian-sys-maint<br>password &#x3D; ABCDEFGHIJKLMNOPQ<br>socket   &#x3D; &#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.sock<br>[mysql_upgrade]<br>host     &#x3D; localhost<br>user     &#x3D; debian-sys-maint<br>password &#x3D; ABCDEFGHIJKLMNOPQ<br>socket   &#x3D; &#x2F;var&#x2F;run&#x2F;mysqld&#x2F;mysqld.sock  </p></blockquote><p>好了，从配置文件中，我们看到了初始生成的用户名和密码了，使用用户名和密码登录，成功进入。</p><h3 id="创建用户及授权"><a href="#创建用户及授权" class="headerlink" title="创建用户及授权"></a>创建用户及授权</h3><p>使用默认生成的账号和密码登录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql -u debain-sys-maint -p<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">CREATE USER <span class="hljs-string">&#x27;your_name&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="hljs-string">&#x27;password&#x27;</span>;<br></code></pre></td></tr></table></figure><p>授权：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">GRANT ALL PRIVILEGES ON *.* TO <span class="hljs-string">&#x27;your_name&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> WITH GRANT OPTION<br></code></pre></td></tr></table></figure><p>授权所有权限，并授权从任意位置登录。</p><p>以上操作至此结束。</p><p>查看已存在的用户密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">select user,host from mysql.user;<br></code></pre></td></tr></table></figure><p>更改用户密码：</p><p>例如更新那个不知道密码的root账号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">mysql&gt; update user <span class="hljs-built_in">set</span> authentication_string=password(<span class="hljs-string">&#x27;new_password&#x27;</span>) WHERE user=<span class="hljs-string">&#x27;root&#x27;</span>;<br>Query OK, 1 row affected, 1 warning (0.08 sec)<br>Rows matched: 1  Changed: 1  Warnings: 1<br><br>mysql&gt; flush privileges;     //刷新权限，立即生效<br>Query OK, 0 rows affected (0.00 sec)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mysql</tag>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C 语言数的表示（二）</title>
    <link href="/2019/03/04/C-%E8%AF%AD%E8%A8%80%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <url>/2019/03/04/C-%E8%AF%AD%E8%A8%80%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="C语言数的表示"><a href="#C语言数的表示" class="headerlink" title="C语言数的表示"></a>C语言数的表示</h1><p>纯理论记录C语文是如果表示数值的，原理向，仅记录备忘。</p><span id="more"></span><h2 id="十进制与二进制的转换"><a href="#十进制与二进制的转换" class="headerlink" title="十进制与二进制的转换"></a>十进制与二进制的转换</h2><p>先记工式，任意一个二进制浮点数V可以表示成下面的形式；</p><p>V &#x3D; (-1)^s<em>M</em>2^E</p><ol><li><p>(-1)^s表示符号位，当s&#x3D;0时，V为正数，当s&#x3D;1时，V为负数。</p></li><li><p>M表示有效数字，大于等于1，小于2。</p></li><li><p>2^E表示指数位。</p></li></ol><p>举例说明，十进制的5.0，写成二进制是101.0，相当于-1.01*2^2，那么，s&#x3D;1，M&#x3D;1.01，E＝2。</p><p>32位浮点数，最高1位是符号位S，接着8位是指数E，剩下23位为有效数字M。</p><p>64位浮点数，最高1位是符号位S，接着11位是指数E，剩下52位为有效数字M。</p><p>IEEE 754对有效数字M和指数E还有一些特别的规定：</p><h3 id="对于有效数字M"><a href="#对于有效数字M" class="headerlink" title="对于有效数字M"></a>对于有效数字M</h3><p>1&lt;&#x3D;M&lt;2，也就是说M可以写成1.XXXX的形式，其中XXXX表示小数部分。在计算机内部保存M时，默认这个数的第一位总是1，因此可以被舍去，只保存后面的XXXX部分。比如保存1.01的时候，只存在01，等到读取的时候，再把第一位的1加上去。这样的目的，是节省1位有效数字。以32位浮点数为例留给M只有23位，将第1位舍去以后，等于可以保存24位有效数字。</p><h3 id="对于指数E"><a href="#对于指数E" class="headerlink" title="对于指数E"></a>对于指数E</h3><p>首先，E为一个无符号数(unsignedint)，如果E为8位，它的取值范围为[0,255]；如果E为11位，它的取值范围为[0,2047]。但是，我们知道，科学计数法中E是可以出负数的，所以IEEE 754规定，E的真实值必须再减去一个中间数，对于8位的E，这个中间数是127，对于11位的E，这个中间数是1023。</p><p>E－中间数得到的值即为指数领衔值(exponent bias),是指浮点数表示法中的指数域的编码值为实际值加上某个固定值，IEEE 754规定该固定值为2^(e-1)-1，其中e为存储指数的比特的长度。</p><p>比如2^10的E是10，保存的成32位的浮点数时，必须保存成10＋127＝137，即10001001。</p><p>采用指数的实际值加上固定领衔值的办法表示浮点数的指数，好处是可以用长度为e个比特的无符号数表示所有的指数取值，这使得两个浮点数的指数大小的比较更为容易，实际上可以按照字典充比较两个浮点数的大小，这种移码表示指数部分，中文称为阶码。</p><p>以单精度型阶码表示示例如下：</p><h4 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h4><p>如果我们要表示0，则有0＋127＝127，二进制表示为：0000 0000＋0111 1111＝0111 1111；</p><h4 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h4><p>如果我们要表示1，则有1＋127＝128，二进制表示为：0000 0001＋0111 1111＝1000 0000；</p><h4 id="例3"><a href="#例3" class="headerlink" title="例3"></a>例3</h4><p>如果我们要表示2，则有2＋127＝129，二进制表示为：0000 0010＋0111 1111＝1000 0001；</p><h4 id="例4"><a href="#例4" class="headerlink" title="例4"></a>例4</h4><p>如果我们要表示128，则有128＋127＝255，二进制表示为：1000 0000＋0111 1111＝1111 1111；</p><p>移码128即为8位二进制移位存储表示的最大正数。</p><p>我们再来看一下负数：</p><h4 id="例5"><a href="#例5" class="headerlink" title="例5"></a>例5</h4><p>如果我们要表示－1，则有－1＋127＝126，二进制表示为</p><p>然后，指数E还分三种情况：</p><ol><li><p>E不全为0或不全为1时，浮点数就彩上面的规则表示，即指数E的计算值减去127(或1023)，得到真实值，再奖有效数字M前加上第一位的1。</p></li><li><p>E全为0时，浮点数的指数E等于1－127(1-1023)，有效数字M不再加上第一位的1，而是还为0.XXXX的小数，这样作是为了表示±0，以及接近0的很小的数值。</p></li><li><p>E全为1时，如果有效数字M全为0，表示±无穷大(正负取决于符号s)；如果有效数字M不全为0，表示这个数不是一个数(NaN)。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C 语言数的表示（一）</title>
    <link href="/2019/03/02/C-%E8%AF%AD%E8%A8%80%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2019/03/02/C-%E8%AF%AD%E8%A8%80%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="c语言整数表示"><a href="#c语言整数表示" class="headerlink" title="c语言整数表示"></a>c语言整数表示</h1><p>写文章的目的在于整理c语言整数溢出时出现的知识。</p><span id="more"></span><h2 id="数据类型与表示方法"><a href="#数据类型与表示方法" class="headerlink" title="数据类型与表示方法"></a>数据类型与表示方法</h2><p>c语言中基本数据类型的表示有整型和浮点型，整型有short，int，long，还有一个修饰词，unsigned，即无符号。声明一个变量，即向内存申请一段数据类型相对应的存储地址，申请的变量类型及分配的内存大小，可以通过sizeof函数来得出。输出结果如下列表所示：</p><blockquote><p>Type short has a size of 2 bytes.<br>Type int has a size of 4 bytes.<br>Type long has a size of 8 bytes.<br>Type float has a size of 4 bytes.<br>Type double has a size of 8 bytes.<br>Type long long has size of 8 bytes  </p></blockquote><p>由此可看到各个不同类型数在系统申请内存的字节数。内存中存储的二进制值为机器数，其通过表示方法对应为十进制的真值。</p><h2 id="机器数和真值"><a href="#机器数和真值" class="headerlink" title="机器数和真值"></a>机器数和真值</h2><p>机器数和真值，在上面所列出的数据类型中，如short类，在内存申请的存储空间为2字节，即16bit位。在表示中，高位为符号位，0为正数，1为负数。</p><p>假定8位表示一个数，如数字7，为正数，转换为二进制为00000111，如果是-3，负数首位为1，转换为二进制为10000111。</p><p>如上3，－3为真值，00000111／10000111为其对应的机器数。</p><h2 id="原码、反码、补码"><a href="#原码、反码、补码" class="headerlink" title="原码、反码、补码"></a>原码、反码、补码</h2><h3 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h3><p>原码为符号位＋真值的绝对值，如[+1]原＝00000001，[-1]原＝10000001，则8位二进制原码取值范围为：[11111111-011111111]，即[-127~+127]。</p><h3 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h3><p>反码为正数的反码为其原码，负数的反码为在其原码的基础上，符号位不变，其余位依次取反。如[+1]反＝00000001，[-1]反＝11111110。</p><h3 id="补码"><a href="#补码" class="headerlink" title="补码"></a>补码</h3><p>正数的被码为其原码，负数的补码为反码＋1，如[+1]补＝00000001，[-1]补＝11111111。</p><h3 id="采用不同编码方式的原因"><a href="#采用不同编码方式的原因" class="headerlink" title="采用不同编码方式的原因"></a>采用不同编码方式的原因</h3><p>计算机中，因保持电路简单的设计，计算机只能执行简单的加法运算，减法运算，可以让参数符号位参与运算，即＋负数。</p><p>如上描述中，计算1－1＝0，对应的机器数原码操作为：</p><p>[00000001]原+[10000001]原&#x3D;[10000010]原＝[－2]真，对应的真值为－2。即参与负数计算的真值中不正确的。</p><p>如使用反码参与减法计算，1-1则对应的机器数反码操作为：</p><p>[00000001]反＋[11111110]反＝[11111111]反＝[10000000]原＝[－0]真，让符号位参与运算，得到为－0的真值，即反码操作中，存在一个为－0的问题，－0是没有意义的，而原码和反码本身即都存在±0的表示。</p><p>为了解决±0的问题，即补码出现：</p><p>1－1＝1＋（－1）&#x3D;》[00000001]原＋[10000001]原＝》[00000001]补+[11111111]补＝》[00000000]补&#x3D;[00000000]原&#x3D;[0]真。</p><p>即[00000000]表示0，同时可以使用[10000000]表示[-128]</p><p>即[-1]+[-127]&#x3D;》[10000001]原＋[111111111]原&#x3D;》[11111111]补＋[10000001]补&#x3D;》[10000000]原。即使用-0的原码表示-128的补码。</p><p>实际-128没有原码和反码的对应值，使用补码不仅修复了原码和反码中存在0和计算的问题，还可以多使用一个低位数值，8位原码和反码的表示范围为[-127<del>+127]，补码的表示范围为[-128</del>+128]。</p><p>即采用补码计算中，数值的取值范围为[-2^(n-1)~2^(n-1)-1]。(n为位数)</p>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>c</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 18.04 安装 GoogleEarth</title>
    <link href="/2019/03/02/ubuntu-18-04-%E5%AE%89%E8%A3%85-GoogleEarth/"/>
    <url>/2019/03/02/ubuntu-18-04-%E5%AE%89%E8%A3%85-GoogleEarth/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-18-04-安装-GoogleEarthPro"><a href="#ubuntu-18-04-安装-GoogleEarthPro" class="headerlink" title="ubuntu 18.04 安装 GoogleEarthPro"></a>ubuntu 18.04 安装 GoogleEarthPro</h1><p>ubuntu 安装谷歌地球应用，记录备忘。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>系统：ubuntu 18.04 LTS</p><h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install update<br>sudo apt install upgrade<br>sudo apt install gdebi-core wget<br></code></pre></td></tr></table></figure><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://dl.google.com/dl/earth/client/current/google-earth-pro-stable_current_amd64.deb<br></code></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo gdebi google-earth-pro-stable_current_amd64.deb<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>google earth</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 串口调试</title>
    <link href="/2019/02/22/ubuntu-%E4%B8%B2%E5%8F%A3%E8%B0%83%E8%AF%95/"/>
    <url>/2019/02/22/ubuntu-%E4%B8%B2%E5%8F%A3%E8%B0%83%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-18-04串口调试工具"><a href="#ubuntu-18-04串口调试工具" class="headerlink" title="ubuntu 18.04串口调试工具"></a>ubuntu 18.04串口调试工具</h1><p>ubuntu 下串口调试的两个命令行工具，安装及基础配置记录备忘。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>系统：ubuntu 18.04</p><p>工具：USB转串口</p><p>设备：H3C FIREWARE</p><h2 id="使用命令"><a href="#使用命令" class="headerlink" title="使用命令"></a>使用命令</h2><p>命令行工具：picocom、minicom</p><h3 id="查看系统是否加载usb-serial模块"><a href="#查看系统是否加载usb-serial模块" class="headerlink" title="查看系统是否加载usb_serial模块"></a>查看系统是否加载usb_serial模块</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">lsmod | grep usbserial<br></code></pre></td></tr></table></figure><p>输出结果：</p><blockquote><p>usbserial              45056  3 ftdi_sio</p></blockquote><p>查看系统是否启用USB_serial</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dmesg | grep usbserial<br></code></pre></td></tr></table></figure><p>输出结果：</p><blockquote><p>[ 2909.513568] usbcore: registered new interface driver usbserial_generic</p><p>[ 2909.513581] usbserial: USB Serial support registered for generic</p><p>[ 2909.532690] usbserial: USB Serial support registered for FTDI USB Serial Device</p></blockquote><p>查看设备挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> -l /dev/ttyUSB*<br></code></pre></td></tr></table></figure><p>输出结果：</p><blockquote><p>crw-rw—- 1 root dialout 188, 0 2月  22 16:18 &#x2F;dev&#x2F;ttyUSB0</p></blockquote><p>系统已经挂载了ttyUSB0设备，即为串口转USB口连接线。</p><h3 id="使用minicom调试设备"><a href="#使用minicom调试设备" class="headerlink" title="使用minicom调试设备"></a>使用minicom调试设备</h3><h4 id="安装minicom"><a href="#安装minicom" class="headerlink" title="安装minicom"></a>安装minicom</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install minicom lrzsz<br></code></pre></td></tr></table></figure><p>从上面挂载结果可以得出设备所属root，dialout组。所以，在我们使用minicom时，需要使用root权限。</p><h4 id="配置串口信息"><a href="#配置串口信息" class="headerlink" title="配置串口信息"></a>配置串口信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo minicom<br></code></pre></td></tr></table></figure><p>输出欢迎信息如下：</p><p><img src="https://blog.ywmy.xyz/networkstartup.png" alt="startup"></p><p>包含欢迎信息，字符集，端口信息。</p><p>由图可以看出转义字符为CTRL-A，输入Z查看帮助。</p><p>按下CTRL－A，后输入Z。得到帮助页面如下：</p><p><img src="https://blog.ywmy.xyz/networkhelp_screen.png" alt="help_screen"></p><p>如图所示：</p><p>D：排号目录<br>S：发送文件<br>F：发送断开帧<br>T：终端设置<br>G：运行脚本<br>O：配置minicom<br>X：退出minicom等</p><p>这里，我们想要连接串口，首先配置minicom。按O键。</p><p>得到如下配置项：</p><p><img src="https://blog.ywmy.xyz/network/config_minicom.png" alt="config_minicom"></p><p>使用方向键选择serial port setup</p><p>配置如下：</p><p><img src="https://blog.ywmy.xyz/network/serial_setup.png" alt="serial_setup"></p><p>如图上图所示，按A，更改默认tty8为已挂载串口设备ttyUSB0，按F键更改默认Hardware Floww Control为no，默认硬件控制，即不接受串口输入信息，连接后，从键盘的输入就没有响应。改为no，后，按esc键退出菜单，将配置另存，或者直接保存默认dfl文件，然后退出配置。按X键退出minicom。</p><p>重新进入minicom程序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo minicom your_config_file<br></code></pre></td></tr></table></figure><p>进入程序后，按回国，终端回显登录信息，如下图：</p><p><img src="https://blog.ywmy.xyz/network/login_device.png" alt="login_device"></p><p>接下来就是愉快的调试了。</p><p>串口的配置文件保存在家目录下的隐藏文件，名称为.minirc.filename。如默认的.minirc.dfl。</p><h3 id="使用pococom调试"><a href="#使用pococom调试" class="headerlink" title="使用pococom调试"></a>使用pococom调试</h3><h4 id="安装pococom"><a href="#安装pococom" class="headerlink" title="安装pococom"></a>安装pococom</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install picocom<br></code></pre></td></tr></table></figure><p>连接操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo picocom -b 9600 /dev/ttyUSB0<br></code></pre></td></tr></table></figure><p>输出如下：</p><p><img src="https://blog.ywmy.xyz/network/picocom_startup.png" alt="picocom_startup"></p><p>转义字符为CTRL－A，CTRL-H为查看帮助；</p><p><img src="https://blog.ywmy.xyz/network/help_screen.png" alt="help_screen"></p><p>配置项如上图所示，CTRL-A-&gt;CTRL-X退出picocom。</p><p>terminal ready。按回车直接进入终端。开始调试吧。</p>]]></content>
    
    
    <categories>
      
      <category>network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>console</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 安装增强功能</title>
    <link href="/2019/02/20/centos-%E5%AE%89%E8%A3%85%E5%A2%9E%E5%BC%BA%E5%8A%9F%E8%83%BD/"/>
    <url>/2019/02/20/centos-%E5%AE%89%E8%A3%85%E5%A2%9E%E5%BC%BA%E5%8A%9F%E8%83%BD/</url>
    
    <content type="html"><![CDATA[<h1 id="virtualbox-centos-安装增强功能"><a href="#virtualbox-centos-安装增强功能" class="headerlink" title="virtualbox centos 安装增强功能"></a>virtualbox centos 安装增强功能</h1><p>virtualbox 虚拟机安装centos后，控制台提示安装增强功能，操作记录备忘。</p><span id="more"></span><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>系统：ubuntu 18.04<br>虚拟机：virtualbox</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="挂载虚拟增强工具包镜像"><a href="#挂载虚拟增强工具包镜像" class="headerlink" title="挂载虚拟增强工具包镜像"></a>挂载虚拟增强工具包镜像</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> vbox_tool<br>mount /dev/cdrom ./vbox_tool<br></code></pre></td></tr></table></figure><h3 id="安装信赖关系"><a href="#安装信赖关系" class="headerlink" title="安装信赖关系"></a>安装信赖关系</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum update kernel //升级内核<br>sudo yum update<br>sudo yum install bzip2 tar gcc make perl kernel-devel kernel-headers<br></code></pre></td></tr></table></figure><p>最小化安装的centos安装增强功能时，会提示依赖如下图所示：</p><p><img src="https://blog.ywmy.xyz/linuxcentos_vbox_addition_install.png" alt="centos_vbox_install_adition"></p><p>注意内核版本的匹配问题，安装完成后，重启虚拟机。参考:<a href="1">链接</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">uname</span> -r<br>yum install kernel-devel-`<span class="hljs-built_in">uname</span> -r`<br>yum install kernel-headers-`<span class="hljs-built_in">uname</span> -r`<br>rpm -qa | grep -e kernel-devel -e kernel-headers<br></code></pre></td></tr></table></figure><p>如果遇到内核版本与header版本不一致的，可以直接导出内核的环境变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> KERN_DIR=/usr/src/kernels/$(<span class="hljs-built_in">uname</span> -r)<br></code></pre></td></tr></table></figure><p>建议重启虚拟机。</p><h3 id="安装增强功能"><a href="#安装增强功能" class="headerlink" title="安装增强功能"></a>安装增强功能</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./VBoxLinuxAdditions.run<br></code></pre></td></tr></table></figure><p>完成安装：</p><p><img src="https://blog.ywmy.xyz/linuxadditions_installed.png" alt="additions_installed"></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>virtualbox</tag>
      
      <tag>vsphere</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vim查找与替换</title>
    <link href="/2019/02/16/vim%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%9B%BF%E6%8D%A2/"/>
    <url>/2019/02/16/vim%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%9B%BF%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="vim中使用查找和替换"><a href="#vim中使用查找和替换" class="headerlink" title="vim中使用查找和替换"></a>vim中使用查找和替换</h1><p>vim 常用操作记录备忘。</p><span id="more"></span><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p>在normal模式下按下”&#x2F;“即可进入查找模式，输入要查找的字符串并按下回车，Vim会跳到第一个匹配。按下”n”查找下一个，按下”N”查找上一个。</p><p>Vim查找支持正则表达式，例如&#x2F;vim$匹配行尾的”vim”。需要查找特殊字符，需要黑底，例如&#x2F;vim$匹配“vim$”。</p><p><code>注意查找回车应用\n，而替换为回车应当用\r(相当于&lt;CR&gt;)。</code></p><h3 id="大小写第三查找"><a href="#大小写第三查找" class="headerlink" title="大小写第三查找"></a>大小写第三查找</h3><p>在查找模式中加入\c表示大小写不敏感查找，\C表示大小写敏感查找。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/foo\c<br></code></pre></td></tr></table></figure><p>将会查找所有的“foo”,”FOO”,”Foo”等字符串。</p><p>大小写敏感配置</p><p>Vim默认采用大小写敏感查找，为了方便我们常常将配置为大小写不敏感：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-string">&quot; 设置默认进行大小写敏感查找</span><br><span class="hljs-string">set ignorecase</span><br><span class="hljs-string">&quot;</span> 如果有一个大写字母，则切换到大小敏感查找<br><span class="hljs-built_in">set</span> smartcase<br></code></pre></td></tr></table></figure><p><code>将上述设置粘贴到你的~/.vimrc，重新打开Vim即可生效</code></p><h3 id="查找当前单词"><a href="#查找当前单词" class="headerlink" title="查找当前单词"></a>查找当前单词</h3><p>在normal模式下，按下”\<em>“即可查找光标所在的单词(word)，要求每次出现的前后为空白或标点符号。例如当前为foo，可以匹配foo bar中的foo，但不可匹配foobar中的foo。这在查找函数名、变量名时非常有用。按下”\g</em>“即可查找光标所在的单词的字符序列，每次出现前后字符无要求。即foo bar和foobar中的foo均可以被匹配到。</p><h2 id="查找与替换"><a href="#查找与替换" class="headerlink" title="查找与替换"></a>查找与替换</h2><p>:s (substitude) 命令用来查找和替换字符串，语法如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:&#123;作用范围&#125;s/&#123;目标&#125;/&#123;替换值&#125;/&#123;替换标志&#125;<br></code></pre></td></tr></table></figure><p>例如:”%s&#x2F;foo&#x2F;bar&#x2F;g”会在全局范围(%)查找foo并替换为bar，所有出现都会被替换(g)。</p><h3 id="作用范围"><a href="#作用范围" class="headerlink" title="作用范围"></a>作用范围</h3><p>作用范围分为当前行，全文，选区等。</p><p>当前行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:s/foo/bar/g<br></code></pre></td></tr></table></figure><p>全文：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">%s/foo/bar/g<br></code></pre></td></tr></table></figure><p>选区，在Visual模式下选择区域后输入:，Vim即自动补全为:’&lt;,’&gt;s&#x2F;foo&#x2F;bar&#x2F;g</p><p>2-11行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:5,12s/foo/bar/g<br></code></pre></td></tr></table></figure><p>当前行.与接下来两行+2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:.,+2s/foo/bar/g<br></code></pre></td></tr></table></figure><h3 id="替换标志"><a href="#替换标志" class="headerlink" title="替换标志"></a>替换标志</h3><p>上文中命令结尾g即是替换标志之一，表示全局global替换(即替换目标的所有出现)。还有很多其它有用的替换标志：</p><p>空替换标志表示只替换从光标位置开始，目标第一次出现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:%s/foo/bar<br></code></pre></td></tr></table></figure><p><strong>i</strong>表示大小写不敏感查找，<strong>I</strong>表示大写小敏感：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">:%s/foo/bar/i<br>＃ 等效于模式中\c(不敏感)或\C(敏感)<br>:%s/foo\c/bar<br></code></pre></td></tr></table></figure><p><strong>c</strong>表示确认，例如全局查找“<strong>foo</strong>”替换为”<strong>bar</strong>“并且需要确认：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">:%s/foo/bar/gc<br></code></pre></td></tr></table></figure><p>回车后Vim会将光标移动到每一次”<strong>foo</strong>“出现的位置，并提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">replace with bar (y/n/a/q/l^E/^Y)?<br></code></pre></td></tr></table></figure><p>按下<strong>y</strong>表示替换，<strong>n</strong>表示不替换，<strong>a</strong>表示替换所有，<strong>q</strong>表示退出查找模式，<strong>l</strong>表示替换当前位置并退出。<strong>^E</strong>与<strong>^Y</strong>是光标移动快捷键。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vim</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 7上安装webmin</title>
    <link href="/2019/01/15/centos-7%E4%B8%8A%E5%AE%89%E8%A3%85webadmin/"/>
    <url>/2019/01/15/centos-7%E4%B8%8A%E5%AE%89%E8%A3%85webadmin/</url>
    
    <content type="html"><![CDATA[<h1 id="centos-7上安装-webmin"><a href="#centos-7上安装-webmin" class="headerlink" title="centos 7上安装 webmin"></a>centos 7上安装 webmin</h1><p>webmin是一个基于浏览器界面的类Unix系统配置管理工具。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>操作记录：</p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget http://prdownloads.sourceforge.net/webadmin/webmin-1.900-1.noarch.rpm<br></code></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum -y install perl perl-Net-SSLeay openssl perl-IO-Tty perl-Encode-Detect<br></code></pre></td></tr></table></figure><h3 id="安装程序"><a href="#安装程序" class="headerlink" title="安装程序"></a>安装程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm -U webmin-1.900-1.noarch.rpm<br></code></pre></td></tr></table></figure><p>程序安装位置：&#x2F;usr&#x2F;libexec&#x2F;webmin</p><p>程序默认通过https访问，端口10000 TCP，按访问需求放通。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>webadmin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>H3C SNMP配置举例</title>
    <link href="/2018/12/27/H3C-SNMP%E9%85%8D%E7%BD%AE%E4%B8%BE%E4%BE%8B/"/>
    <url>/2018/12/27/H3C-SNMP%E9%85%8D%E7%BD%AE%E4%B8%BE%E4%BE%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="配置举例"><a href="#配置举例" class="headerlink" title="配置举例"></a>配置举例</h1><p>基于H3C V7版本，举例包含SNMP V2。</p><span id="more"></span><h2 id="组网需求"><a href="#组网需求" class="headerlink" title="组网需求"></a>组网需求</h2><p><img src="https://blog.ywmy.xyz/network/network_topology.png" alt="network_topology"></p><h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><h3 id="snmp-v2c-agent"><a href="#snmp-v2c-agent" class="headerlink" title="snmp v2c agent"></a>snmp v2c agent</h3><ul><li>设置 Agent 使用的 SNMP 版本为 v2c、只读团体名为 readtest,读写团体名为 writetest。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">&lt;Agent&gt; system-view<br>[Agent] snmp-agent sys-info version v2c<br>[Agent] snmp-agent community <span class="hljs-built_in">read</span> readtest<br>[Agent] snmp-agent community write writetest<br></code></pre></td></tr></table></figure><ul><li>设置设备的联系人和位置信息,以方便维护。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Agent] snmp-agent sys-info contact Mr.Wang-Tel:3306<br>[Agent] snmp-agent sys-info location telephone-closet,3rd-floor<br></code></pre></td></tr></table></figure><ul><li>设置允许向 NMS 发送告警信息,使用的团体名为 traptest。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Agent] snmp-agent <span class="hljs-built_in">trap</span> <span class="hljs-built_in">enable</span><br>[Agent] snmp-agent target-host <span class="hljs-built_in">trap</span> address udp-domain 192.168.100.4 params securityname<br>traptest<br></code></pre></td></tr></table></figure><h3 id="NMS-zabbix"><a href="#NMS-zabbix" class="headerlink" title="NMS zabbix"></a>NMS zabbix</h3><ul><li>添加设备</li></ul><p>登录zabbix后台 -&gt; Configuration -&gt; Hosts -&gt; Create host，操作如下图所示：</p><p><img src="https://blog.ywmy.xyz/network/hosts_list.png" alt="hosts_list"></p><p>点击创建后 -&gt; 输入监控设备相关的信息 -&gt; Host name -&gt; Visable name -&gt; Groups (选择已有的组或创建新的组) -&gt; 移除默认的Agent interface -&gt; 添加SNMP interface 勾选 Use bulk requests</p><p><img src="https://blog.ywmy.xyz/network/create_host.png" alt="create_host"></p><p>点击 Templates -&gt; 选择系统创建的SNMP模版 (zabbix内置了一些常用的模版，可以直接选择来使用)</p><p><img src="https://blog.ywmy.xyz/network/add_templates.png" alt="add_selected"></p><p>因默认模版中并未包含H3C相关的模版，所以，选用了通用的SNMP V2模版。</p><p><img src="https://blog.ywmy.xyz/template_selected.png" alt="template_selected"></p><p>最后点击add。完成添加主机，这时的主机监控也可能还不能用。取决于上例中Agent中community的设置，在默认的模版里，已经有对一些常用变量的，一些继承全局变量的值，需要在主机的宏变量中更改。</p><p>点击创建的主机 -&gt; Macros -&gt; Inherited and host macros -&gt; change -&gt; 输入设备上配置的名称 (建议只读共同体的值)</p><p><img src="https://blog.ywmy.xyz/network/Macros.png" alt="Macros"></p><p>更改完成后，可以看到已经添加的设备列表后面的SNMP标识已经变成绿色，说明监控模版已经在起作用。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>h3c</tag>
      
      <tag>snmp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LVM命令相关</title>
    <link href="/2018/12/10/LVM%E5%91%BD%E4%BB%A4%E7%9B%B8%E5%85%B3/"/>
    <url>/2018/12/10/LVM%E5%91%BD%E4%BB%A4%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="LVM命令相关"><a href="#LVM命令相关" class="headerlink" title="LVM命令相关"></a>LVM命令相关</h1><p>linux LVM磁盘管理，添加新硬盘，硬盘扩容操作，记录备忘。</p><span id="more"></span><h2 id="LVM常用命令"><a href="#LVM常用命令" class="headerlink" title="LVM常用命令"></a>LVM常用命令</h2><table><thead><tr><th>功能&#x2F;命令</th><th>物理卷管理</th><th>卷管理</th><th>逻辑卷管理</th></tr></thead><tbody><tr><td>扫描</td><td>pvscan</td><td>vgscan</td><td>lvscan</td></tr><tr><td>建立</td><td>pvcreate</td><td>vgcreate</td><td>lvcreate</td></tr><tr><td>显示</td><td>pvdisplay</td><td>vgdisplay</td><td>lvdisplay</td></tr><tr><td>删除</td><td>pvremove</td><td>vgremove</td><td>lvremove</td></tr><tr><td>扩展</td><td></td><td>vgextend</td><td>lvextend</td></tr><tr><td>缩小</td><td></td><td>vgreduce</td><td>lvreduce</td></tr></tbody></table><h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><ul><li>物理卷Physical volume (PV)：可以在上面建立卷组的媒介，可以是硬盘分区，也可以是硬盘本身或者回环文件（loopback file）。物理卷包括一个特殊的header，其余部分被切割为一块块物理区域（physical extents）。</li><li>卷组Volume group (VG)：将一组物理卷收集为一个管理单元。</li><li>逻辑卷Logical volume (LV)：虚拟分区，由物理区域（physical extents）组成。</li><li>物理区域Physical extent (PE)：硬盘可供指派给逻辑卷的最小单位（通常为4MB）。</li></ul>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>lvm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LVM 磁盘扩容</title>
    <link href="/2018/12/04/LVM-%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9/"/>
    <url>/2018/12/04/LVM-%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="LVM-磁盘扩容"><a href="#LVM-磁盘扩容" class="headerlink" title="LVM 磁盘扩容"></a>LVM 磁盘扩容</h1><p>linux LVM磁盘管理，添加新硬盘，硬盘扩容操作，记录备忘。</p><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前给公司的同事配置了一台samba服务器，因为主要使用的是UI设计的同事，有大量的共享素材，磁盘很快的已经满了。前两天有同事来告知，映射的网络硬盘已经显示没有可用的空间了。想想那台主机里面的电源，应该可以再挂两个硬盘，于是，对磁盘扩容就玩起来了。</p><p>一张来来说明LVM管理：</p><p><img src="https://blog.ywmy.xyz/linux/LVM.png" alt="LVM"></p><hr><h2 id="添加硬盘"><a href="#添加硬盘" class="headerlink" title="添加硬盘"></a>添加硬盘</h2><p>关机，找到一块未用的硬笔，安装在主机里。</p><h2 id="查看硬盘使用情况"><a href="#查看硬盘使用情况" class="headerlink" title="查看硬盘使用情况"></a>查看硬盘使用情况</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -HT<br>文件系统                类型      容量  已用  可用 已用% 挂载点<br>/dev/mapper/centos-root xfs        54G  1.6G   53G    3% /<br>devtmpfs                devtmpfs  2.0G     0  2.0G    0% /dev<br>tmpfs                   tmpfs     2.0G     0  2.0G    0% /dev/shm<br>tmpfs                   tmpfs     2.0G  9.2M  2.0G    1% /run<br>tmpfs                   tmpfs     2.0G     0  2.0G    0% /sys/fs/cgroup<br>/dev/sda1               xfs       518M  228M  290M   44% /boot<br>/dev/mapper/centos-home xfs       942G  933G  9.1G  100% /home   //这里是重点，已经满了<br>tmpfs                   tmpfs     398M     0  398M    0% /run/user/0<br></code></pre></td></tr></table></figure><h2 id="创建分区"><a href="#创建分区" class="headerlink" title="创建分区"></a>创建分区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># fdisk /dev/sdb</span><br>欢迎使用 fdisk (util-linux 2.23.2)。<br><br>更改将停留在内存中，直到您决定将更改写入磁盘。<br>使用写入命令前请三思。<br><br><br>命令(输入 m 获取帮助)：m<br>命令操作<br>   a   toggle a bootable flag<br>   b   edit bsd disklabel<br>   c   toggle the dos compatibility flag<br>   d   delete a partition<br>   g   create a new empty GPT partition table<br>   G   create an IRIX (SGI) partition table<br>   l   list known partition types<br>   m   <span class="hljs-built_in">print</span> this menu<br>   n   add a new partition<br>   o   create a new empty DOS partition table<br>   p   <span class="hljs-built_in">print</span> the partition table<br>   q   quit without saving changes<br>   s   create a new empty Sun disklabel<br>   t   change a partition<span class="hljs-string">&#x27;s system id</span><br><span class="hljs-string">   u   change display/entry units</span><br><span class="hljs-string">   v   verify the partition table</span><br><span class="hljs-string">   w   write table to disk and exit</span><br><span class="hljs-string">   x   extra functionality (experts only)</span><br><span class="hljs-string"></span><br><span class="hljs-string">命令(输入 m 获取帮助)：d</span><br><span class="hljs-string">已选择分区 1</span><br><span class="hljs-string">分区 1 已删除</span><br><span class="hljs-string"></span><br><span class="hljs-string">命令(输入 m 获取帮助)：n</span><br><span class="hljs-string">Partition type:</span><br><span class="hljs-string">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="hljs-string">   e   extended</span><br><span class="hljs-string">Select (default p): p</span><br><span class="hljs-string">分区号 (1-4，默认 1)：</span><br><span class="hljs-string">起始 扇区 (2048-976773167，默认为 2048)：</span><br><span class="hljs-string">将使用默认值 2048</span><br><span class="hljs-string">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-976773167，默认为 976773167)：</span><br><span class="hljs-string">将使用默认值 976773167</span><br><span class="hljs-string">分区 1 已设置为 Linux 类型，大小设为 465.8 GiB</span><br><span class="hljs-string"></span><br><span class="hljs-string">命令(输入 m 获取帮助)：t</span><br><span class="hljs-string">已选择分区 1</span><br><span class="hljs-string">Hex 代码(输入 L 列出所有代码)：L</span><br><span class="hljs-string"></span><br><span class="hljs-string"> 0  空              24  NEC DOS         81  Minix / 旧 Linu bf  Solaris</span><br><span class="hljs-string"> 1  FAT12           27  隐藏的 NTFS Win  82  Linux 交换 / So c1  DRDOS/sec (FAT-</span><br><span class="hljs-string"> 2  XENIX root      39  Plan 9          83  Linux           c4  DRDOS/sec (FAT-</span><br><span class="hljs-string"> 3  XENIX usr       3c  PartitionMagic  84  OS/2 隐藏的 C:  c6  DRDOS/sec (FAT-</span><br><span class="hljs-string"> 4  FAT16 &lt;32M      40  Venix 80286     85  Linux 扩展      c7  Syrinx</span><br><span class="hljs-string"> 5  扩展            41  PPC PReP Boot   86  NTFS 卷集       da  非文件系统数据</span><br><span class="hljs-string"> 6  FAT16           42  SFS             87  NTFS 卷集       db  CP/M / CTOS / .</span><br><span class="hljs-string"> 7  HPFS/NTFS/exFAT 4d  QNX4.x          88  Linux 纯文本    de  Dell 工具</span><br><span class="hljs-string"> 8  AIX             4e  QNX4.x 第2部分  8e  Linux LVM       df  BootIt</span><br><span class="hljs-string"> 9  AIX 可启动      4f  QNX4.x 第3部分  93  Amoeba          e1  DOS 访问</span><br><span class="hljs-string"> a  OS/2 启动管理器 50  OnTrack DM      94  Amoeba BBT      e3  DOS R/O</span><br><span class="hljs-string"> b  W95 FAT32       51  OnTrack DM6 Aux 9f  BSD/OS          e4  SpeedStor</span><br><span class="hljs-string"> c  W95 FAT32 (LBA) 52  CP/M            a0  IBM Thinkpad 休 eb  BeOS fs</span><br><span class="hljs-string"> e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a5  FreeBSD         ee  GPT</span><br><span class="hljs-string"> f  W95 扩展 (LBA)  54  OnTrackDM6      a6  OpenBSD         ef  EFI (FAT-12/16/</span><br><span class="hljs-string">10  OPUS            55  EZ-Drive        a7  NeXTSTEP        f0  Linux/PA-RISC  </span><br><span class="hljs-string">11  隐藏的 FAT12    56  Golden Bow      a8  Darwin UFS      f1  SpeedStor</span><br><span class="hljs-string">12  Compaq 诊断     5c  Priam Edisk     a9  NetBSD          f4  SpeedStor</span><br><span class="hljs-string">14  隐藏的 FAT16 &lt;3 61  SpeedStor       ab  Darwin 启动     f2  DOS 次要</span><br><span class="hljs-string">16  隐藏的 FAT16    63  GNU HURD or Sys af  HFS / HFS+      fb  VMware VMFS</span><br><span class="hljs-string">17  隐藏的 HPFS/NTF 64  Novell Netware  b7  BSDI fs         fc  VMware VMKCORE</span><br><span class="hljs-string">18  AST 智能睡眠    65  Novell Netware  b8  BSDI swap       fd  Linux raid 自动</span><br><span class="hljs-string">1b  隐藏的 W95 FAT3 70  DiskSecure 多启 bb  Boot Wizard 隐  fe  LANstep</span><br><span class="hljs-string">1c  隐藏的 W95 FAT3 75  PC/IX           be  Solaris 启动    ff  BBT</span><br><span class="hljs-string">1e  隐藏的 W95 FAT1 80  旧 Minix</span><br><span class="hljs-string">Hex 代码(输入 L 列出所有代码)：df</span><br><span class="hljs-string">已将分区“Linux”的类型更改为“BootIt”</span><br><span class="hljs-string"></span><br><span class="hljs-string">命令(输入 m 获取帮助)：w</span><br><span class="hljs-string">The partition table has been altered!</span><br><span class="hljs-string"></span><br><span class="hljs-string">Calling ioctl() to re-read partition table.</span><br><span class="hljs-string">正在同步磁盘。</span><br><span class="hljs-string">[root@server ~]# fdisk /dev/sdb</span><br><span class="hljs-string">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="hljs-string"></span><br><span class="hljs-string">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="hljs-string">使用写入命令前请三思。</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">命令(输入 m 获取帮助)：p</span><br><span class="hljs-string"></span><br><span class="hljs-string">磁盘 /dev/sdb：500.1 GB, 500107862016 字节，976773168 个扇区</span><br><span class="hljs-string">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="hljs-string">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="hljs-string">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="hljs-string">磁盘标签类型：dos</span><br><span class="hljs-string">磁盘标识符：0xc738c738</span><br><span class="hljs-string"></span><br><span class="hljs-string">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="hljs-string">/dev/sdb1            2048   976773167   488385560   df  BootIt</span><br><span class="hljs-string"></span><br><span class="hljs-string">命令(输入 m 获取帮助)：q</span><br></code></pre></td></tr></table></figure><h3 id="查看分区信息"><a href="#查看分区信息" class="headerlink" title="查看分区信息"></a>查看分区信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># fdisk -l</span><br>磁盘 /dev/sda：1000.2 GB, 1000204886016 字节，1953525168 个扇区<br>Units = 扇区 of 1 * 512 = 512 bytes<br>扇区大小(逻辑/物理)：512 字节 / 4096 字节<br>I/O 大小(最小/最佳)：4096 字节 / 4096 字节<br>磁盘标签类型：dos<br>磁盘标识符：0x000b0c67<br><br>   设备 Boot      Start         End      Blocks   Id  System<br>/dev/sda1   *        2048     1026047      512000   83  Linux<br>/dev/sda2         1026048  1953523711   976248832   8e  Linux LVM<br><br>磁盘 /dev/sdb：500.1 GB, 500107862016 字节，976773168 个扇区<br>Units = 扇区 of 1 * 512 = 512 bytes<br>扇区大小(逻辑/物理)：512 字节 / 512 字节<br>I/O 大小(最小/最佳)：512 字节 / 512 字节<br>磁盘标签类型：dos<br>磁盘标识符：0xc738c738<br><br>   设备 Boot      Start         End      Blocks   Id  System<br>/dev/sdb1            2048   976773167   488385560   <span class="hljs-built_in">df</span>  BootIt<br><br>磁盘 /dev/mapper/centos-root：53.7 GB, 53687091200 字节，104857600 个扇区<br>Units = 扇区 of 1 * 512 = 512 bytes<br>扇区大小(逻辑/物理)：512 字节 / 4096 字节<br>I/O 大小(最小/最佳)：4096 字节 / 4096 字节<br><br>磁盘 /dev/mapper/centos-swap：4160 MB, 4160749568 字节，8126464 个扇区<br>Units = 扇区 of 1 * 512 = 512 bytes<br>扇区大小(逻辑/物理)：512 字节 / 4096 字节<br>I/O 大小(最小/最佳)：4096 字节 / 4096 字节<br><br>磁盘 /dev/mapper/centos-home：941.8 GB, 941759660032 字节，1839374336 个扇区  //记住这个<br>Units = 扇区 of 1 * 512 = 512 bytes<br>扇区大小(逻辑/物理)：512 字节 / 4096 字节<br>I/O 大小(最小/最佳)：4096 字节 / 4096 字节<br></code></pre></td></tr></table></figure><h3 id="查看volume-group-信息"><a href="#查看volume-group-信息" class="headerlink" title="查看volume group 信息"></a>查看volume group 信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># vgdisplay</span><br>  --- Volume group ---<br>  VG Name               centos          //记住这个<br>  System ID<br>  Format                lvm2<br>  Metadata Areas        1<br>  Metadata Sequence No  4<br>  VG Access             <span class="hljs-built_in">read</span>/write<br>  VG Status             resizable<br>  MAX LV                0<br>  Cur LV                3<br>  Open LV               3<br>  Max PV                0<br>  Cur PV                1<br>  Act PV                1<br>  VG Size               &lt;931.02 GiB<br>  PE Size               4.00 MiB<br>  Total PE              238341<br>  Alloc PE / Size       238325 / &lt;930.96 GiB<br>  Free  PE / Size       16 / 64.00 MiB<br>  VG UUID               pSvviC-2h2k-AA3P-OUpk-OvtT-SXWd-qZ2dQa<br></code></pre></td></tr></table></figure><h3 id="查看logical-volume"><a href="#查看logical-volume" class="headerlink" title="查看logical volume"></a>查看logical volume</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># vgdisplay</span><br>  --- Volume group ---<br>  VG Name               centos<br>  System ID<br>  Format                lvm2<br>  Metadata Areas        1<br>  Metadata Sequence No  4<br>  VG Access             <span class="hljs-built_in">read</span>/write<br>  VG Status             resizable<br>  MAX LV                0<br>  Cur LV                3<br>  Open LV               3<br>  Max PV                0<br>  Cur PV                1<br>  Act PV                1<br>  VG Size               &lt;931.02 GiB<br>  PE Size               4.00 MiB<br>  Total PE              238341<br>  Alloc PE / Size       238325 / &lt;930.96 GiB<br>  Free  PE / Size       16 / 64.00 MiB<br>  VG UUID               pSvviC-2h2k-AA3P-OUpk-OvtT-SXWd-qZ2dQa<br></code></pre></td></tr></table></figure><h2 id="创建physical-volume"><a href="#创建physical-volume" class="headerlink" title="创建physical volume"></a>创建physical volume</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># pvcreate /dev/sdb1</span><br>  Physical volume <span class="hljs-string">&quot;/dev/sdb1&quot;</span> successfully created.<br></code></pre></td></tr></table></figure><h2 id="将physical-volume扩展到volume-group"><a href="#将physical-volume扩展到volume-group" class="headerlink" title="将physical volume扩展到volume group"></a>将physical volume扩展到volume group</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># vgextend centos /dev/sdb1    //centos 为volume group名称</span><br>  Volume group <span class="hljs-string">&quot;centos&quot;</span> successfully extended<br></code></pre></td></tr></table></figure><h2 id="将sdb1容量扩展至-x2F-home"><a href="#将sdb1容量扩展至-x2F-home" class="headerlink" title="将sdb1容量扩展至&#x2F;home"></a>将sdb1容量扩展至&#x2F;home</h2><h3 id="查看physical-volume"><a href="#查看physical-volume" class="headerlink" title="查看physical volume"></a>查看physical volume</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># pvdisplay </span><br>  --- Physical volume ---<br>  PV Name               /dev/sda2<br>  VG Name               centos<br>  PV Size               931.02 GiB / not usable 4.00 MiB<br>  Allocatable           <span class="hljs-built_in">yes</span> <br>  PE Size               4.00 MiB<br>  Total PE              238341<br>  Free PE               16<br>  Allocated PE          238325<br>  PV UUID               9PCjzM-KHZJ-mDF2-Qb8d-E6Ye-4elf-AdDi4O<br><br>  --- Physical volume ---<br>  PV Name               /dev/sdb1<br>  VG Name               centos<br>  PV Size               465.76 GiB / not usable 3.02 MiB   //新挂的500GB盘<br>  Allocatable           <span class="hljs-built_in">yes</span> <br>  PE Size               4.00 MiB<br>  Total PE              119234<br>  Free PE               119234<br>  Allocated PE          0<br>  PV UUID               eWCdST-avv3-6Asl-KrdI-fS0O-Kmqm-bjosEU<br></code></pre></td></tr></table></figure><h3 id="查看logical-volume信息"><a href="#查看logical-volume信息" class="headerlink" title="查看logical volume信息"></a>查看logical volume信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># lvdisplay </span><br>  --- Logical volume ---<br>  LV Path                /dev/centos/swap<br>  LV Name                swap<br>  VG Name                centos<br>  LV UUID                VGPZIE-CFT1-70zk-1MGp-s0ce-330x-jytZpX<br>  LV Write Access        <span class="hljs-built_in">read</span>/write<br>  LV Creation host, time localhost.localdomain, 2018-09-26 15:02:00 +0800<br>  LV Status              available<br>  <span class="hljs-comment"># open                 2</span><br>  LV Size                &lt;3.88 GiB<br>  Current LE             992<br>  Segments               1<br>  Allocation             inherit<br>  Read ahead sectors     auto<br>  - currently <span class="hljs-built_in">set</span> to     256<br>  Block device           253:1<br><br>  --- Logical volume ---<br>  LV Path                /dev/centos/home<br>  LV Name                home<br>  VG Name                centos<br>  LV UUID                S3dfG3-rZyv-nR1t-WuLo-0TBt-y6PM-1ZU7Fh<br>  LV Write Access        <span class="hljs-built_in">read</span>/write<br>  LV Creation host, time localhost.localdomain, 2018-09-26 15:02:01 +0800<br>  LV Status              available<br>  <span class="hljs-comment"># open                 1</span><br>  LV Size                877.08 GiB       //这里是之前已经满的那块盘<br>  Current LE             224533<br>  Segments               1<br>  Allocation             inherit<br>  Read ahead sectors     auto<br>  - currently <span class="hljs-built_in">set</span> to     256<br>  Block device           253:2<br><br>  --- Logical volume ---<br>  LV Path                /dev/centos/root<br>  LV Name                root<br>  VG Name                centos<br>  LV UUID                IKM0LU-JsZh-LYJ1-bacl-oV8t-lySs-sEUGlS<br>  LV Write Access        <span class="hljs-built_in">read</span>/write<br>  LV Creation host, time localhost.localdomain, 2018-09-26 15:02:05 +0800<br>  LV Status              available<br>  <span class="hljs-comment"># open                 1</span><br>  LV Size                50.00 GiB      //这里是新挂的盘<br>  Current LE             12800<br>  Segments               1<br>  Allocation             inherit<br>  Read ahead sectors     auto<br>  - currently <span class="hljs-built_in">set</span> to     256<br>  Block device           253:0<br></code></pre></td></tr></table></figure><h3 id="查看系统挂载信息"><a href="#查看系统挂载信息" class="headerlink" title="查看系统挂载信息"></a>查看系统挂载信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cat</span> /etc/fstab <br><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># /etc/fstab</span><br><span class="hljs-comment"># Created by anaconda on Wed Sep 26 15:02:07 2018</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk&#x27;</span><br><span class="hljs-comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span><br><span class="hljs-comment">#</span><br>/dev/mapper/centos-root /                       xfs     defaults        0 0<br>UUID=ad148335-aa47-4c16-a2bf-9e4727e98749 /boot                   xfs     defaults        0 0<br>/dev/mapper/centos-home /home                   xfs     defaults        0 0    //看这里<br>/dev/mapper/centos-swap swap                    swap    defaults        0 0<br></code></pre></td></tr></table></figure><p>将新挂的盘整个扩容到&#x2F;home下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">lvextend -l +100%FREE /dev/mapper/centos-home<br>  Size of logical volume centos/home changed from 877.08 GiB (224533 extents) to 1.31 TiB (343783 extents).<br>  Logical volume centos/home successfully resized.   //容量已经从877GB更为1.31TB了。<br></code></pre></td></tr></table></figure><h3 id="确认磁盘使用情况"><a href="#确认磁盘使用情况" class="headerlink" title="确认磁盘使用情况"></a>确认磁盘使用情况</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># df -HT</span><br>文件系统                类型      容量  已用  可用 已用% 挂载点<br>/dev/mapper/centos-root xfs        54G  1.6G   53G    3% /<br>devtmpfs                devtmpfs  2.0G     0  2.0G    0% /dev<br>tmpfs                   tmpfs     2.0G     0  2.0G    0% /dev/shm<br>tmpfs                   tmpfs     2.0G  9.2M  2.0G    1% /run<br>tmpfs                   tmpfs     2.0G     0  2.0G    0% /sys/fs/cgroup<br>/dev/sda1               xfs       518M  228M  290M   44% /boot<br>/dev/mapper/centos-home xfs       942G  933G  9.1G  100% /home      //好像还是没有变化，新的盘没有挂上来<br>tmpfs                   tmpfs     398M     0  398M    0% /run/user/0<br></code></pre></td></tr></table></figure><h3 id="刷新文件系统"><a href="#刷新文件系统" class="headerlink" title="刷新文件系统"></a>刷新文件系统</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">[root@server ~]<span class="hljs-comment"># xfs_growfs /dev/mapper/centos-home </span><br>meta-data=/dev/mapper/centos-home isize=256    agcount=4, agsize=57480448 blks<br>         =                       sectsz=4096  attr=2, projid32bit=1<br>         =                       crc=0        finobt=0 spinodes=0<br>data     =                       bsize=4096   blocks=229921792, imaxpct=25<br>         =                       sunit=0      swidth=0 blks<br>naming   =version 2              bsize=4096   ascii-ci=0 ftype=0<br><span class="hljs-built_in">log</span>      =internal               bsize=4096   blocks=112266, version=2<br>         =                       sectsz=4096  sunit=1 blks, lazy-count=1<br>realtime =none                   extsz=4096   blocks=0, rtextents=0<br>data blocks changed from 229921792 to 352033792<br></code></pre></td></tr></table></figure><p>因为centos默认的文件系统为xfs。如果创建的文件系统为ext3&#x2F;ext4则使用下面命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">resize2fs /dev/mapper/centos-home<br></code></pre></td></tr></table></figure><h3 id="再次确认磁盘使用信息"><a href="#再次确认磁盘使用信息" class="headerlink" title="再次确认磁盘使用信息"></a>再次确认磁盘使用信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">df</span> -HT<br>文件系统                类型      容量  已用  可用 已用% 挂载点<br>/dev/mapper/centos-root xfs        54G  1.6G   53G    3% /<br>devtmpfs                devtmpfs  2.0G     0  2.0G    0% /dev<br>tmpfs                   tmpfs     2.0G     0  2.0G    0% /dev/shm<br>tmpfs                   tmpfs     2.0G  9.2M  2.0G    1% /run<br>tmpfs                   tmpfs     2.0G     0  2.0G    0% /sys/fs/cgroup<br>/dev/sda1               xfs       518M  228M  290M   44% /boot<br>/dev/mapper/centos-home xfs       1.5T  933G  510G   65% /home      //看这里，磁盘已经加到1.5TB<br>tmpfs                   tmpfs     398M     0  398M    0% /run/user/0<br></code></pre></td></tr></table></figure><p>扩容完成，参考链接请戳：</p><p>参考1：<a href="https://linux.cn/article-9168-1.html">LVM逻辑卷管理</a></p><p>参考2：<a href="https://blog.csdn.net/u012439646/article/details/73380197">Centos 7 利用LVM实现动态扩容</a></p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol><li><p>创建分区                                        #fdisk &#x2F;dev&#x2F;sdb</p></li><li><p>创建物理卷                                      #pvcreat &#x2F;dev&#x2F;sdb1</p></li><li><p>查看卷组名称及使用情况                            #vgdisplay</p></li><li><p>将物理卷扩展到卷组                               #vgextend centos &#x2F;dev&#x2F;sdb1   (此处‘centos’是卷组名称)</p></li><li><p>将卷组中空闲空间扩展到 &#x2F;home                     #lvextend -l +100%FREE &#x2F;dev&#x2F;mapper&#x2F;centos-home</p></li><li><p>刷新文件系统是扩容生效                           #xfs_growfs &#x2F;dev&#x2F;mapper&#x2F;centos-home    (ext4使用这个)resize2fs &#x2F;dev&#x2F;mapper&#x2F;centos-home</p></li></ol><p>注：使用reiserfs 文件系统代替ext3&#x2F;ext4：<em>resize_reiserfs &#x2F;dev&#x2F;mapper&#x2F;drore-home</em></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>lvm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>U盘多启动</title>
    <link href="/2018/12/01/U%E7%9B%98%E5%A4%9A%E5%90%AF%E5%8A%A8/"/>
    <url>/2018/12/01/U%E7%9B%98%E5%A4%9A%E5%90%AF%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="U盘多启动"><a href="#U盘多启动" class="headerlink" title="U盘多启动"></a>U盘多启动</h1><p>制作一个多功能，多系统的U盘，操作记录备忘。</p><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>接着前面U盘量产的工作，既然都已经到了量产了，好像不多做一点事情，总觉得对不起自己的折腾，于是再找关于U盘多启动方面的作法。以前想给自己的系统做维护，基本上就是做一个PE盘。里面集成PE工具，现在已经对U盘做了量产，即在数据盘上做一个PE，那就是两个启动了。是否可以多启动呢？想了两个方案：</p><ol><li>是否可以量产多个光驱？</li><li>单盘多引导</li></ol><p>关于第一个想法，自己网上能找到的基本上都是关于三启动的，即量产为一个USB－CDROM，USB－ZIP，USB－HDD。不过量产为多光驱的还真的有一个，参考<a href="1">链接</a>;教程中把一个慧荣主控的U盘量产为7个光驱。而刚好自己的小米U盘为慧荣的主控，按教程上的说法，也是可以通过更变参数改为其它的量产参数的，不过文中提到了有风险，即数据分区通常在格式化上会出现问题。参考自己也只有一个慧荣的U盘，还有以前量产失败的经验，就先不尝试此方法。可以查看上面的链接中的教程内容，里面有详细的更变参数，以及U盘的各参数的说明。</p><p>关于第二个相法，有过双系统（windows + linux）的经验，自然想到了GRUB2。按照这个思路，找到两个工具，EASY2BOOT和AIO BOOT CREATOR。通过名字就知道了，这会是两个多系统引导的好工具。特别是第二个，all in one。</p><h2 id="EASY2BOOT启动引导"><a href="#EASY2BOOT启动引导" class="headerlink" title="EASY2BOOT启动引导"></a>EASY2BOOT启动引导</h2><h3 id="操作步骤如下"><a href="#操作步骤如下" class="headerlink" title="操作步骤如下"></a>操作步骤如下</h3><ol><li><p>下载<a href="2">链接</a></p></li><li><p>安装</p></li><li><p>打开程序（插入U盘后）如下图所示</p><p> <img src="https://blog.ywmy.xyz/windows/easy2boot.png" alt="easy2boot"></p><p> 选择语言，选择U盘，创建启动盘。</p></li><li><p>在弹出的CMD窗口选择已经识别的U盘，如图所示：</p><p> <img src="https://blog.ywmy.xyz/windows/erase-usb-drive.png" alt="erase-usb-drive"></p><p> 如图实别的USB设备编号为1，所选择1。</p></li><li><p>是否格式化，选择Y，此处忘记截图。</p></li><li><p>选择格式化的磁盘分区类型</p><p> <img src="https://blog.ywmy.xyz/windows/format-partition.png" alt="format-partition"></p><p> 此处选择了FAT32，即F。<br> 参考这一句：</p><p> <strong>For UEFI-booting, convert the ISO using the MPI_FAT32 Desktop shortcut.</strong></p><p> 就是说，如果你需要UEFI启动模式的话，那么转换ISO的时候，需要使用MPI_FAT32的快捷工具。</p></li><li><p>确认格式化，参考下图：</p><p> <img src="https://blog.ywmy.xyz/windows/confirm_action.png" alt="confirm_active"></p></li><li><p>选择语言</p><p> <img src="https://blog.ywmy.xyz/windows/select-language.png" alt="select_language"></p></li><li><p>选择键盘</p><p> <img src="https://blog.ywmy.xyz/windows/choose_keyboard_type.png" alt="choose_keyboard_type"></p></li><li><p>选择是否显示扩展名</p><p><img src="https://blog.ywmy.xyz/windows/show-filename-extensions.png" alt="show-filename-extensions"></p></li><li><p>显示E2B图标样式</p><p><img src="https://blog.ywmy.xyz/windows/display-icon.png" alt="display-icon"></p></li><li><p>是否写入配置文件</p><p><img src="https://blog.ywmy.xyz/windows/write-configure-file.png" alt="write-configure-file"></p></li><li><p>填充linux镜像</p><p><img src="https://blog.ywmy.xyz/windows/create-iso-file.png" alt="create-iso-file"></p><p>这里需求填充一个3.9GB的镜像文件，输入数值0为不填充，或者输入一个大于3.9GB的数据，小于4GB，大于4096会报错，参考数据盘格式化为FAT32。</p></li><li><p>完成制作</p><p><img src="https://blog.ywmy.xyz/windows/completed-configure.png" alt="completed-configure"></p><p>至此，完成E2B U盘多启动的操作。</p></li></ol><h3 id="UEFI启动支持"><a href="#UEFI启动支持" class="headerlink" title="UEFI启动支持"></a>UEFI启动支持</h3><p>操作步骤：</p><ol><li><p>下载MTI工具，链接<a href="3">请戳</a></p></li><li><p>解压缩下载的工具包，进入ImDisk目录，安装ImDisk程序，参考图片：</p><p> <img src="https://blog.ywmy.xyz/windows/install_imDisk_virtual_driver.png" alt="install_imDisk_virtual_driver"></p></li><li><p>然后回到上级目录，运行 MPI_Tool_Pack_Plus_CloverLite_086\CreateDesktopShortcuts.cmd，这个CMD命令会在你的桌面上创建三个快捷方式，不过需要注意的是，需要用右键点击，然后使用管理员模式运行，参考下图：</p><p> <img src="https://blog.ywmy.xyz/windows/CreateDesktopShortcuts.png" alt="CreateDesktopShortcuts"></p><p> 此命令会在桌面上创建三个快捷方式，即MakePartImage，MPI_FAT32，MPI_NTFS，三个程序的快捷方式。</p></li><li><p>将你需要创建的 UEFI 启动镜像，拖拽到 MPI_FAT32 这个快捷方式上，就会自动创建出 .imgPTN 格式的镜像文件了。在创建大小的时候按回车确认即可。参考下图：</p><p> <img src="https://blog.ywmy.xyz/windows/mpi_option_2.png" alt="mpi_option"></p></li><li><p>将ISO或者imgPTN文件拷贝到U盘中的对应目录即可，或者直接都扔到了 _ISO\MAINMENU 这个文件夹中。</p></li><li><p>完成操作后，从U盘启动，成果如下（默认UEFI支持的，可能需要关闭BIOS中的默认secret启动）：</p><p> <img src="https://blog.ywmy.xyz/windows/E2B_BOOT_UP.jpg" alt="E2B_BOOT_UP"></p></li></ol><h2 id="AIO-BOOT-启动引导"><a href="#AIO-BOOT-启动引导" class="headerlink" title="AIO BOOT 启动引导"></a>AIO BOOT 启动引导</h2><h3 id="操作如下："><a href="#操作如下：" class="headerlink" title="操作如下："></a>操作如下：</h3><p>这个是一个真神器，绿色，不用安装，还自带中文，如名称所说，AIO all in one。</p><ol><li><p>下载工具，链接<a href="4">请戳</a></p></li><li><p>运行，操作如下图所示：</p><p> <img src="https://blog.ywmy.xyz/windows/choose-usb-drive.png" alt="choose-usb-drive"></p><p> 切换语言，选择U盘，勾选自动安装bootloader，点击OK，完成操作。</p></li><li><p>接下来就是在U盘的目录下操作了，操作大致如下图所示：</p><p> <img src="https://blog.ywmy.xyz/AIOcreator.png" alt="AIOcreator"></p><p> <img src="https://blog.ywmy.xyz/windows/boot_creator.jpg" alt="boot_creator"></p><p> <img src="https://blog.ywmy.xyz/windows/tool_bar.jpg" alt="tool_bar"></p></li><li><p>最后，给一张U盘启动后的图片，这是一个相当结力的工具。</p><p> <img src="https://blog.ywmy.xyz/windows/AIO_BOOT_UP.jpg" alt="AIO_BOOT_UP"></p></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>EASY2BOOT和AIO BOOT CREATOR这两款工具都是基于grub2和grub4dos工具为基础的，easy2boot基本以命令行操作为主，linux系统下也可以使用。AIO BOOT CREATOR这个工具，基本满足了我的所有需求，简单，功能强大，操作方便。一个绿色包，直接运行，还自带中文，这个就非常方便了。后面直接使用了AIO把我想要集成的多启动系统都集成在了U盘，包括ANDROID（phoenixos），linux（Kail, ubuntu），windows（windows 7, windows server 2016）等。系统安装，live环境应有尽有，可以说是一步到位了。</p>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>usb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>U盘量产</title>
    <link href="/2018/12/01/U%E7%9B%98%E9%87%8F%E4%BA%A7/"/>
    <url>/2018/12/01/U%E7%9B%98%E9%87%8F%E4%BA%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="U盘量产"><a href="#U盘量产" class="headerlink" title="U盘量产"></a>U盘量产</h1><p>U盘量产，实现一个U盘等于一个USB光驱加一个U盘存储。记录备忘。</p><span id="more"></span><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>需求回到上一篇文章，惠普服务器的安装中，因为设备比较旧，对启动的支持有限，即尝试了U盘量产，希望能将U盘量产为USB－CDROM以实现从光驱启动的目的。自己手里有两个U盘，一个16GB的金士顿，还有一个小米家的32GB小米U盘。之前有过量产挂盘的经历后，对于这次的量产，还是比较小心的，从16GB的开始，没想，还真的没之前的问题。将16GB的量产结束了，接着对32GB的U盘也做了量产，都没有问题。记录量产过程如下：</p><h2 id="金士顿16GB量产"><a href="#金士顿16GB量产" class="headerlink" title="金士顿16GB量产"></a>金士顿16GB量产</h2><p>量产的前期准备，需求检测U盘的主控芯片，这个有一个通用的工具，叫<strong>芯片精灵</strong>可以检测到U盘主控相关的信息。下载请戳<a href="http://www.upantool.com/test/xinpian/2011/ChipGenius_V4.html">链接</a>。</p><p>通过芯片精灵检测到主控芯片后，即可以去上面芯片精灵的网站，下载相应的量产工具，如自己16GB的金士顿，主控芯片为群联，即可从网站搜索群联的量产工具，有两个，MPALL和一个傻瓜转换工具ModeConverter。<br>量产方式参考<a href="http://www.upantool.com/jiaocheng/liangchan/Phison/5108.html">链接</a>。</p><h2 id="小米32GB量产"><a href="#小米32GB量产" class="headerlink" title="小米32GB量产"></a>小米32GB量产</h2><p>同上一样，通过使用芯片精灵，读取相应的主控信息。接下来去量产网站下载相应的量产工具，小米32GB的U盘，采用的是慧荣的主控芯片。量产工具为：SM3267AE_2.5.54。</p><p>量产方式参考<a href="http://www.upantool.com/liangchan/SMI/2016/8732.html">链接</a>。</p><hr><p>附上两张量产后的图（小米的量产）：</p><p><img src="https://blog.ywmy.xyz/windows/USB_mass_production.png" alt="USB_MASS_PRODUCTION"></p><p><img src="https://blog.ywmy.xyz/disk_manager.png" alt="DISK_MANAGER"></p><p>U盘量产为一个5GB的光驱和一个28GB的数据盘。数据盘又给我做了多启动，通过多启动来实现系统维护，即AIOBOOT和AIO——UEFI两个分区。</p>]]></content>
    
    
    <categories>
      
      <category>windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>usb</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HP DL380 G5安装centos 7</title>
    <link href="/2018/11/27/HP-DL380-G5%E5%AE%89%E8%A3%85centos-7/"/>
    <url>/2018/11/27/HP-DL380-G5%E5%AE%89%E8%A3%85centos-7/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>公司有一台老旧的惠普服务器，三块盘做了RAID5，之前上面安装了一个windows系统。之前的规划中，起什么作用已经没人知道了，后面三块中的一块硬盘坏了，再后面开机都开了了，这台服务器就闲置了。最近自己刚好有点时间，去了下机房，看到那台未用的服务器，想着要不要这台旧服务器也能做点事情。于是就开始准备起来，试试看能不能让这台服务器运行起来。</p><span id="more"></span><hr><h2 id="step-one：开机检查"><a href="#step-one：开机检查" class="headerlink" title="step one：开机检查"></a>step one：开机检查</h2><p>要做的第一步自然是开机检查检查，还好，3块300GB的SAS硬盘，一块已经坏了，就直接取了下来，开机的时候，直接提示到硬盘错误，是否恢复或选择路过。因为坏的硬盘直接拿出来了，就不再想着恢复了，于是直接选择了重做RAID。</p><p>惠普的这台服务器中的RAID卡为smart array p400。参考下图所示：</p><p><img src="https://blog.ywmy.xyz/hp-raid-control.jpg" alt="P400"></p><p>在跳过恢复选项（F1／F2）后，按F8进入raid配置选项，默认有RAID 0，RAID 1＋0，RAID 5三个可选。还有块可用的盘，就直接将两块做了RAID 0，不浪费。</p><p>保存RAID配置后，听到两声蜂鸣声过后，可以先择F9进入BIOS设置。参考下图：</p><p><img src="https://blog.ywmy.xyz/hp-bios-setup.jpg" alt="BIOS"></p><p>可能是机器老旧的原因，这台服务器上的支持的启动项有限，光驱、软驱、硬盘和网络都有，就是没有看到USB支持的。尝试了一下，无论是自己用UTRLISO写入的硬盘镜像还是WINPE都无法引导。只能想想光驱的主意了，结果公司还没找到之前刻录的系统盘。最终把目光描准了自己的U盘，准备做个USB－CD量产。关于量产的细节，自己准备再补一篇，最终是成功量产了，也正常进入引导。好了，服务器检查、硬件及安装前的准备工作就已经都准备好了。引导如下图所示：</p><p><img src="https://blog.ywmy.xyz/install-centos.jpg" alt="bootup"></p><h2 id="step-two：系统安装"><a href="#step-two：系统安装" class="headerlink" title="step two：系统安装"></a>step two：系统安装</h2><p>正式从U盘引导启动后，就进入了熟悉的centos安装界面了，按提示操作，到了选择硬盘的时候，出现了一个问题，即安装系统中即认不到raid后的磁盘，也看到量产过后的U盘的信息，磁盘选择的地方是空的，没有可用的选择。这下好像是不是有些问题了？这台机器之前有安装过操作系统，那就一定是有办法的。想想，试着网上搜索了一下，发现这台服务器在安装centos 7的时候，确实会遇到这个问题，不过还好，有解决办法，解决办法参考<a href="https://tieba.baidu.com/p/5491102757?traceid=">链接</a>，问题的原因就是在raid上。</p><p>操作方法，进入install centos 界面后，近e键编辑引导基加入下面图像中画红线的竞价内容：</p><p><img src="https://blog.ywmy.xyz/edit-boot-configuration.jpg" alt="boot-conf"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hpsa.hpsa_sample_mode=1 hpsa.hpsa_allow_anly=1<br></code></pre></td></tr></table></figure><p>注意与前面的配置内容之间的空格。</p><p>配置完成后按ctrl+x进入安装界面，如此可以选择服务器上的raid盘了。如下图所示：</p><p><img src="https://blog.ywmy.xyz/centos-select-disk.jpg" alt="select-disk"></p><p>接下来的操作就正常安装了，安装结束后，重启，把第一启动项改为本地磁盘（非必要）。改完后，发现仍然进入不了系统，原因如上面安装时一样。这时需要在启动选项的时候，按e，进入编辑模式，添加hpsa相关内容，如上图。配置结束后，按ctrl+x进入系统。</p><p>进入系统后，编辑grub文件，添加hpsa相关内容。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /boot/grub2/grub.cfg<br><span class="hljs-comment"># 在LANG项的后面添加</span><br>hpsa.hpsa_sample_mode=1 hpsa.hpsa_allow_anly=1<br></code></pre></td></tr></table></figure><p>保存配置文件，重启服务器，正常进入系统，如下图所示：</p><p><img src="https://blog.ywmy.xyz/boot-accessed.jpg" alt="boot-access"></p><p>至此安装结束！记录备忘！</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>raid</tag>
      
      <tag>HP-HPE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 18.04有道词典安装</title>
    <link href="/2018/11/25/ubuntu-18-04%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8%E5%AE%89%E8%A3%85/"/>
    <url>/2018/11/25/ubuntu-18-04%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="安装有道词典"><a href="#安装有道词典" class="headerlink" title="安装有道词典"></a>安装有道词典</h1><p>在ubuntu下，本地词典，有goldendict。可以使用本地词典，屏幕取词，引用网络词典等功能也是应有尽有，但因使用习惯问题，还是比较喜欢使用windows下的词典软件，比如有道词典。良心的是，有道词典和deepin合作开发了linux版本，在ubuntu 16.04上也是正常使用。也是linux用户的福音。ubuntu本身版本已经到18.04了，而linux版本的词典更新日期仍然是2015年的1.1.0版本。想要使用的话，关于QT相关的各种信赖就是问题。完成安装后，曾经尝试根据报错也手动解决，结果能力有限，无可奈何。转而寻找其它大神是否有编译可用的版本，还真的找到了。有的方案是自己写个程序来调用有道词典的API，返回给程序对应的参数。此方案，尝试后，还是有些问题，依然是依赖关系。最终找到一个根据官方包重新编译的，按照其方法操作，安装和运行正常，记录备查。</p><span id="more"></span><h2 id="下载编译过的安装包"><a href="#下载编译过的安装包" class="headerlink" title="下载编译过的安装包"></a>下载编译过的安装包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://github.com/yomun/youdaodict_5.5/raw/master/youdao-dict_1.1.1-0~ubuntu_amd64.deb<br></code></pre></td></tr></table></figure><p>编译的安装包需要3D加速</p><h2 id="查询并卸载QT5"><a href="#查询并卸载QT5" class="headerlink" title="查询并卸载QT5"></a>查询并卸载QT5</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">如有显示 PyQt5 (5.10.1), 卸载之..<br>pip3 list | grep PyQt5<br>pip3 uninstall pyqt5<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">root 用户也一样要<br>sudo sudo pip3 list | grep PyQt5<br>sudo sudo pip3 uninstall pyqt5<br></code></pre></td></tr></table></figure><h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install python3<br><br>sudo apt install python3-dbus python3-lxml python3-pil python3-requests python3-xdg python3-xlib<br>sudo apt install python3-pyqt5 python3-pyqt5.qtmultimedia python3-pyqt5.qtquick python3-pyqt5.qtwebkit<br><br>sudo apt install gir1.2-appindicator3-0.1 qml-module-qtgraphicaleffects qml-module-qtquick-controls<br>sudo apt install libqt5multimedia5-plugins ttf-wqy-microhei<br>sudo apt install tesseract-ocr tesseract-ocr-eng tesseract-ocr-chi-sim tesseract-ocr-chi-tra<br><br>sudo apt install ubuntu-restricted-extras<br><br>Ubuntu 18.04 用 fonts-wqy-microhei 取代了 ttf-wqy-microhei<br></code></pre></td></tr></table></figure><p>＃ 安装有道词典</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo dpkg -i youdao-dict_1.1.1-0?ubuntu_amd64.deb<br></code></pre></td></tr></table></figure><p>安装之后，完美运行。参考<a href="https://github.com/yomun/youdaodict_5.5">链接</a>，谢大神。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>dict</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>snmpwalk 用法</title>
    <link href="/2018/11/01/snmpwalk-%E7%94%A8%E6%B3%95/"/>
    <url>/2018/11/01/snmpwalk-%E7%94%A8%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="snmpwalk-SNMP-V1-x2F-V2-x2F-SNMP-V3"><a href="#snmpwalk-SNMP-V1-x2F-V2-x2F-SNMP-V3" class="headerlink" title="snmpwalk (SNMP V1 &#x2F; V2 &#x2F; SNMP V3)"></a>snmpwalk (SNMP V1 &#x2F; V2 &#x2F; SNMP V3)</h1><p>linux snapwalk 操作命令及示例，记录备忘。</p><span id="more"></span><h2 id="安装snmp"><a href="#安装snmp" class="headerlink" title="安装snmp"></a>安装snmp</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install net-snmp-utils<br></code></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">apt install snmp<br></code></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">snmpwalk [选项] agent [OID]<br><br></code></pre></td></tr></table></figure><h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><table><thead><tr><th>序号</th><th>参数</th><th>帮助</th></tr></thead><tbody><tr><td>1</td><td>-h</td><td>显示帮助</td></tr><tr><td>2</td><td>-v 1&#x2F;2c&#x2F;3</td><td>指定snmp版本</td></tr><tr><td>3</td><td>-V</td><td>显示当前SNMP命令行版本</td></tr><tr><td>4</td><td>-r RETRIES</td><td>指定重试次数，默认为0次</td></tr><tr><td>5</td><td>-t TIMEOUT</td><td>指定每次请求等待超时时间，单位为秒，默认为3秒</td></tr><tr><td>6</td><td>-Cc</td><td>指定在当前WALK时，如果发现OID负增长将是否继续WALK</td></tr><tr><td>7</td><td>-c COMMUNITY</td><td>[snmp v1&#x2F;v2c选项]指定共同体字符串</td></tr></tbody></table><p>V3选项</p><table><thead><tr><th>序号</th><th>参数</th><th>帮助</th></tr></thead><tbody><tr><td>1</td><td>-l LEVEL</td><td>指定安全级别(noAuthNoPriv&#x2F;authNoPriv&#x2F;authPriv)</td></tr><tr><td>2</td><td>-u USER-NAME</td><td>安全名字</td></tr><tr><td>3</td><td>-a PROTOCOL</td><td>验证协议：MD5&#x2F;SHA。-l指定为authNopriv或authPriv时需要</td></tr><tr><td>4</td><td>-A PASSPHRASE</td><td>验证字符串。如果-l指定为authNoPriv或authPriv时才需要</td></tr><tr><td>5</td><td>-x PROTOCOL</td><td>加密协议：DES。如果-l指定为authPriv时才需要</td></tr><tr><td>6</td><td>-X PASSPHARSE</td><td>加密字符串：如果-l指定为authPriv时才需要</td></tr></tbody></table><h3 id="应用示例"><a href="#应用示例" class="headerlink" title="应用示例"></a>应用示例</h3><h4 id="SNMP-V3-应用示例"><a href="#SNMP-V3-应用示例" class="headerlink" title="SNMP V3 应用示例"></a>SNMP V3 应用示例</h4><ul><li>指定验证协议和加密协义示例：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">snmpwalk -v 3 -u <span class="hljs-built_in">test</span> -a sha -A abcdefg -x AES -X hijklmnopq -l authPriv 192.168.1.1 interfaces.ifTable.ifEntry.ifOutOctets（或者使用OID号）<br>其中-v选择版本号<br>-u用户名<br>-a认证算法为SHA-1<br>-A认证密码为abcdefg<br>-x加密协议为AES<br>-X加密密码为hijklmnopq<br>-l authPriv启用认证和加密功能<br>interfaces.ifTable.ifEntry.ifOutOctets（查看接口出去的流量）<br></code></pre></td></tr></table></figure><ul><li>不认证也不加密示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">snmpvalk -v 3 -u <span class="hljs-built_in">test</span> -l noAuthNoPriv -u <span class="hljs-built_in">test</span> 192.168.1.1 interfaces.ifTable.ifEntry.ifOutOctets（或者使用OID号）<br></code></pre></td></tr></table></figure><ul><li>认证不加密示例</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">snmpvalk -v 3 -u <span class="hljs-built_in">test</span> -l authNoPriv -u <span class="hljs-built_in">test</span> -a sha -A abcdefg 192.168.1.1 interfaces.ifTable.ifEntry.ifOutOctets（或者使用OID号）<br></code></pre></td></tr></table></figure><h4 id="SNMP-V2-应用示例"><a href="#SNMP-V2-应用示例" class="headerlink" title="SNMP V2 应用示例"></a>SNMP V2 应用示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">SNMP V2认证使用方法<br>snmpwalk -v 2c -c public 10.103.33.1 .1.3.6.1.2.1.25.1<br>snmpwalk -v 2c -c mysecretsnmp 10.20.30.1 SNMPv2-MIB::sysContact.0<br></code></pre></td></tr></table></figure><h4 id="SNMP-V1-应用示例"><a href="#SNMP-V1-应用示例" class="headerlink" title="SNMP V1 应用示例"></a>SNMP V1 应用示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">snmpwalk -v 2c -c public 10.103.33.1 .1.3.6.1.2.1.25.1<br></code></pre></td></tr></table></figure><h2 id="常用的OID信息"><a href="#常用的OID信息" class="headerlink" title="常用的ＯＩＤ信息"></a>常用的ＯＩＤ信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br></pre></td><td class="code"><pre><code class="hljs bash">Variable Descriptor Object Identifier<br>System Group<br>sysDescr 1.3.6.1.2.1.1.1<br>sysObjectID 1.3.6.1.2.1.1.2<br>sysUpTime 1.3.6.1.2.1.1.3<br>sysContact 1.3.6.1.2.1.1.4<br>sysName 1.3.6.1.2.1.1.5<br>sysLocation 1.3.6.1.2.1.1.6<br>sysServices 1.3.6.1.2.1.1.7<br><br>interfaces Group<br>ifNumber 1.3.6.1.2.1.2.1<br>ifTable 1.3.6.1.2.1.2.2<br>ifEntry 1.3.6.1.2.1.2.2.1<br>ifIndex 1.3.6.1.2.1.2.2.1.1<br>ifDescr 1.3.6.1.2.1.2.2.1.2<br>ifType 1.3.6.1.2.1.2.2.1.3<br>ifMtu 1.3.6.1.2.1.2.2.1.4<br>ifSpeed 1.3.6.1.2.1.2.2.1.5<br>ifPhysAddress 1.3.6.1.2.1.2.2.1.6<br>ifAdminStatus 1.3.6.1.2.1.2.2.1.7<br>ifOperStatus 1.3.6.1.2.1.2.2.1.8<br>ifLastChange 1.3.6.1.2.1.2.2.1.9<br>ifInOctets 1.3.6.1.2.1.2.2.1.10<br>ifInUcastPkts 1.3.6.1.2.1.2.2.1.11<br>ifInNUcastPkts 1.3.6.1.2.1.2.2.1.12<br>ifInDiscards 1.3.6.1.2.1.2.2.1.13<br>ifInErrors 1.3.6.1.2.1.2.2.1.14<br>ifInUnknownProtos 1.3.6.1.2.1.2.2.1.15<br>ifOutOctets 1.3.6.1.2.1.2.2.1.16<br>ifOutUcastPkts 1.3.6.1.2.1.2.2.1.17<br>ifOutNUcastPkts 1.3.6.1.2.1.2.2.1.18<br>ifOutDiscards 1.3.6.1.2.1.2.2.1.19<br>ifOutErrors 1.3.6.1.2.1.2.2.1.20<br>ifOutQLen 1.3.6.1.2.1.2.2.1.21<br>ifSpecific 1.3.6.1.2.1.2.2.1.22<br><br>IP Group<br>ipForwarding 1.3.6.1.2.1.4.1<br>ipDefaultTTL 1.3.6.1.2.1.4.2<br>ipInReceives 1.3.6.1.2.1.4.3<br>ipInHdrErrors 1.3.6.1.2.1.4.4<br>ipInAddrErrors 1.3.6.1.2.1.4.5<br>ipForwDatagrams 1.3.6.1.2.1.4.6<br>ipInUnknownProtos 1.3.6.1.2.1.4.7<br>ipInDiscards 1.3.6.1.2.1.4.8<br>ipInDelivers 1.3.6.1.2.1.4.9<br>ipOutRequests 1.3.6.1.2.1.4.10<br>ipOutDiscards 1.3.6.1.2.1.4.11<br>ipOutNoRoutes 1.3.6.1.2.1.4.12<br>ipReasmTimeout 1.3.6.1.2.1.4.13<br>ipReasmReqds 1.3.6.1.2.1.4.14<br>ipReasmOKs 1.3.6.1.2.1.4.15<br>ipReasmFails 1.3.6.1.2.1.4.16<br>ipFragsOKs 1.3.6.1.2.1.4.17<br>ipFragsFails 1.3.6.1.2.1.4.18<br>ipFragCreates 1.3.6.1.2.1.4.19<br>ipAddrTable 1.3.6.1.2.1.4.20<br>ipAddrEntry 1.3.6.1.2.1.4.20.1<br>ipAdEntAddr 1.3.6.1.2.1.4.20.1.1<br>ipAdEntIfIndex 1.3.6.1.2.1.4.20.1.2<br>ipAdEntNetMask 1.3.6.1.2.1.4.20.1.3<br>ipAdEntBcastAddr 1.3.6.1.2.1.4.20.1.4<br>ipAdEntReasmMaxSize 1.3.6.1.2.1.4.20.1.5<br><br>ICMP Group<br>icmpInMsgs 1.3.6.1.2.1.5.1<br>icmpInErrors 1.3.6.1.2.1.5.2<br>icmpInDestUnreachs 1.3.6.1.2.1.5.3<br>icmpInTimeExcds 1.3.6.1.2.1.5.4<br>icmpInParmProbs 1.3.6.1.2.1.5.5<br>icmpInSrcQuenchs 1.3.6.1.2.1.5.6<br>icmpInRedirects 1.3.6.1.2.1.5.7<br>icmpInEchos 1.3.6.1.2.1.5.8<br>icmpInEchoReps 1.3.6.1.2.1.5.9<br>icmpInTimestamps 1.3.6.1.2.1.5.10<br>icmpInTimestampReps 1.3.6.1.2.1.5.11<br>icmpInAddrMasks 1.3.6.1.2.1.5.12<br>icmpInAddrMaskReps 1.3.6.1.2.1.5.13<br>icmpOutMsgs 1.3.6.1.2.1.5.14<br>icmpOutErrors 1.3.6.1.2.1.5.15<br>icmpOutDestUnreachs 1.3.6.1.2.1.5.16<br>icmpOutTimeExcds 1.3.6.1.2.1.5.17<br>icmpOutParmProbs 1.3.6.1.2.1.5.18<br>icmpOutSrcQuenchs 1.3.6.1.2.1.5.19<br>icmpOutRedirects 1.3.6.1.2.1.5.20<br>icmpOutEchos 1.3.6.1.2.1.5.21<br>icmpOutEchoReps 1.3.6.1.2.1.5.22<br>icmpOutTimestamps 1.3.6.1.2.1.5.23<br>icmpOutTimestampReps 1.3.6.1.2.1.5.24<br>icmpOutAddrMasks 1.3.6.1.2.1.5.25<br>icmpOutAddrMaskReps 1.3.6.1.2.1.5.26<br><br>TCP Group<br>tcpRtoAlgorithm 1.3.6.1.2.1.6.1<br>tcpRtoMin 1.3.6.1.2.1.6.2<br>tcpRtoMax 1.3.6.1.2.1.6.3<br>tcpMaxConn 1.3.6.1.2.1.6.4<br>tcpActiveOpens 1.3.6.1.2.1.6.5<br>tcpPassiveOpens 1.3.6.1.2.1.6.6<br>tcpAttemptFails 1.3.6.1.2.1.6.7<br>tcpEstabResets 1.3.6.1.2.1.6.8<br>tcpCurrEstab 1.3.6.1.2.1.6.9<br>tcpInSegs 1.3.6.1.2.1.6.10<br>tcpOutSegs 1.3.6.1.2.1.6.11<br>tcpRetransSegs 1.3.6.1.2.1.6.12<br>tcpConnTable 1.3.6.1.2.1.6.13<br>tcpConnEntry 1.3.6.1.2.1.6.13.1<br>tcpConnState 1.3.6.1.2.1.6.13.1.1<br>tcpConnLocalAddress 1.3.6.1.2.1.6.13.1.2<br>tcpConnLocalPort 1.3.6.1.2.1.6.13.1.3<br>tcpConnRemAddress 1.3.6.1.2.1.6.13.1.4<br>tcpConnRemPort 1.3.6.1.2.1.6.13.1.5<br>tcpInErrs 1.3.6.1.2.1.6.14<br>tcpOutRsts 1.3.6.1.2.1.6.15<br><br>UDP Group<br>udpInDatagrams 1.3.6.1.2.1.7.1<br>udpNoPorts 1.3.6.1.2.1.7.2<br>udpInErrors 1.3.6.1.2.1.7.3<br>udpOutDatagrams 1.3.6.1.2.1.7.4<br>udpTable 1.3.6.1.2.1.7.5<br>udpEntry 1.3.6.1.2.1.7.5.1<br>udpLocalAddress 1.3.6.1.2.1.7.5.1.1<br>udpLocalPort 1.3.6.1.2.1.7.5.1.2<br><br>SNMP Group<br>snmpInPkts 1.3.6.1.2.1.11.1<br>snmpOutPkts 1.3.6.1.2.1.11.2<br>snmpInBadVersions 1.3.6.1.2.1.11.3<br>snmpInBadCommunityNames 1.3.6.1.2.1.11.4<br>snmpInBadCommunityUses 1.3.6.1.2.1.11.5<br>snmpInASNParseErrs 1.3.6.1.2.1.11.6<br>NOT USED 1.3.6.1.2.1.11.7<br>snmpInTooBigs 1.3.6.1.2.1.11.8<br>snmpInNoSuchNames 1.3.6.1.2.1.11.9<br>snmpInBadValues 1.3.6.1.2.1.11.10<br>snmpInReadOnlys 1.3.6.1.2.1.11.11<br>snmpInGenErrs 1.3.6.1.2.1.11.12<br>snmpInTotalReqVars 1.3.6.1.2.1.11.13<br>snmpInTotalSetVars 1.3.6.1.2.1.11.14<br>snmpInGetRequests 1.3.6.1.2.1.11.15<br>snmpInGetNexts 1.3.6.1.2.1.11.16<br>snmpInSetRequests 1.3.6.1.2.1.11.17<br>snmpInGetResponses 1.3.6.1.2.1.11.18<br>snmpInTraps 1.3.6.1.2.1.11.19<br>snmpOutTooBigs 1.3.6.1.2.1.11.20<br>snmpOutNoSuchNames 1.3.6.1.2.1.11.21<br>snmpOutBadValues 1.3.6.1.2.1.11.22<br>NOT USED 1.3.6.1.2.1.11.23<br>snmpOutGenErrs 1.3.6.1.2.1.11.24<br>snmpOutGetRequests 1.3.6.1.2.1.11.25<br>snmpOutGetNexts 1.3.6.1.2.1.11.26<br>snmpOutSetRequests 1.3.6.1.2.1.11.27<br>snmpOutGetResponses 1.3.6.1.2.1.11.28<br>snmpOutTraps 1.3.6.1.2.1.11.29<br>snmpEnableAuthenTraps 1.3.6.1.2.1.11.30<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>snmp</tag>
      
      <tag>OID</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos 7 更换阿里源</title>
    <link href="/2018/10/26/centos-7-%E6%9B%B4%E6%8D%A2%E9%98%BF%E9%87%8C%E6%BA%90/"/>
    <url>/2018/10/26/centos-7-%E6%9B%B4%E6%8D%A2%E9%98%BF%E9%87%8C%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<h1 id="centos-7-更换阿里源"><a href="#centos-7-更换阿里源" class="headerlink" title="centos 7 更换阿里源"></a>centos 7 更换阿里源</h1><p>CentOS，是基于Red Hat Linux提供的可自由使用源代码的企业级Linux发行版本；是一个稳定，可预测，可管理和可复制的免费企业级计算平台。</p><span id="more"></span><h2 id="备份源"><a href="#备份源" class="headerlink" title="备份源"></a>备份源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup<br></code></pre></td></tr></table></figure><h2 id="下载源"><a href="#下载源" class="headerlink" title="下载源"></a>下载源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo<br><span class="hljs-comment"># 或者</span><br>curl -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo<br></code></pre></td></tr></table></figure><h2 id="刷新缓存"><a href="#刷新缓存" class="headerlink" title="刷新缓存"></a>刷新缓存</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum makecache<br></code></pre></td></tr></table></figure><h2 id="更改源配置"><a href="#更改源配置" class="headerlink" title="更改源配置"></a>更改源配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed -i -e <span class="hljs-string">&#x27;/mirrors.cloud.aliyuncs.com/d&#x27;</span> -e <span class="hljs-string">&#x27;/mirrors.aliyuncs.com/d&#x27;</span> /etc/yum.repos.d/CentOS-Base.repo<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>yum.repo</tag>
      
      <tag>阿里源</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos samba配置</title>
    <link href="/2018/10/21/centos-samba%E9%85%8D%E7%BD%AE/"/>
    <url>/2018/10/21/centos-samba%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="centos-samba配置小记"><a href="#centos-samba配置小记" class="headerlink" title="centos samba配置小记"></a>centos samba配置小记</h1><p>为windows 办公环境配置samba服务。特别是在配合本地硬盘映射的情况下，直接编译文档。操作方便。</p><span id="more"></span><h2 id="基本更新"><a href="#基本更新" class="headerlink" title="基本更新"></a>基本更新</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum update<br>yum install epel-release<br>yum install wget curl vim<br></code></pre></td></tr></table></figure><h2 id="安装samba"><a href="#安装samba" class="headerlink" title="安装samba"></a>安装samba</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install samba samba-server samba-common<br>systemctl start smb<br>systemctl <span class="hljs-built_in">enable</span> smb<br></code></pre></td></tr></table></figure><h2 id="配置需求"><a href="#配置需求" class="headerlink" title="配置需求"></a>配置需求</h2><p>部门通过账号登录共享服务器并访问部门共享(如创建ui部门和运维部门)。配置参考如下：</p><h3 id="以部门创建用户"><a href="#以部门创建用户" class="headerlink" title="以部门创建用户"></a>以部门创建用户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">useradd ui -d /home/ui -s /usr/sbin/nologin -m<br>useradd ops -d /home/ops -s /usr/sbin/nologin -m<br></code></pre></td></tr></table></figure><p>-d:指定用户目录<br>-s:指定登录shell（nologin禁止登录）<br>-m:无目录创建</p><h3 id="给samba用户添加密码"><a href="#给samba用户添加密码" class="headerlink" title="给samba用户添加密码"></a>给samba用户添加密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pdbedit -a ui<br>pdbedit -a ops<br></code></pre></td></tr></table></figure><p>pdbedit -a username：新建一个samba帐户<br>pdbedit -x username：删除一个samba帐户<br>pdbedit -L：列出samba帐户，读取passdb.tdb数据库文件<br>pdbedit -Lv：列出samba用户列表的详细信息<br>pdbedit -c “[D]” -u username：暂停该samba用户账号<br>pdbedit -c “[]” -u username：恢复该samba用户账号</p><p>pdbedit -Lv详细配置如图</p><p><img src="https://blog.ywmy.xyz/pdbedit-Lv.png" alt="pdbedit -Lv"></p><h3 id="更改samba配置文件"><a href="#更改samba配置文件" class="headerlink" title="更改samba配置文件"></a>更改samba配置文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /etc/samba/smb.config /etc/samba/smb.config-backup<br>vim /etc/samba/smb.config<br></code></pre></td></tr></table></figure><p>配置内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># See smb.conf.example for a more detailed config file or</span><br><span class="hljs-comment"># read the smb.conf manpage.</span><br><span class="hljs-comment"># Run &#x27;testparm&#x27; to verify the config is correct after</span><br><span class="hljs-comment"># you modified it.</span><br><br>[global]<br>        workgroup = SAMBA<br>        security = user<br><br>        passdb backend = tdbsam<br><br>        printing = cups<br>        printcap name = cups<br>        load printers = <span class="hljs-built_in">yes</span><br>        cups options = raw<br><br>[homes]<br>        comment = Home Directories<br>        valid <span class="hljs-built_in">users</span> = %S, %D%w%S<br>        browseable = No<br>        <span class="hljs-built_in">read</span> only = No<br>        inherit acls = Yes<br><br>[printers]<br>        comment = All Printers<br>        path = /var/tmp<br>        printable = Yes<br>        create mask = 0600<br>        browseable = No<br><br>[<span class="hljs-built_in">print</span>$]<br>        comment = Printer Drivers<br>        path = /var/lib/samba/drivers<br>        write list = @printadmin root<br>        force group = @printadmin<br>        create mask = 0664<br>        directory mask = 0775<br><br>[ui]<br>        comment = ui<br>        path = /home/ui<br>        browseable = <span class="hljs-built_in">yes</span><br>        write list = ui<br>        writable = <span class="hljs-built_in">yes</span><br>        <span class="hljs-built_in">read</span> only = no<br>        valid <span class="hljs-built_in">users</span> = ui<br><br>[ops]<br>        comment = ops<br>        path = /home/ops<br>        browseable = <span class="hljs-built_in">yes</span><br>        write list = ops<br>        writable = <span class="hljs-built_in">yes</span><br>        <span class="hljs-built_in">read</span> only = no<br>        valid <span class="hljs-built_in">users</span> = ops<br></code></pre></td></tr></table></figure><p>测试samba用例如下如图</p><p><img src="https://blog.ywmy.xyz/ywmy/linuxtestparm.png" alt="testpram"></p><h3 id="防火墙放开samba服务端口"><a href="#防火墙放开samba服务端口" class="headerlink" title="防火墙放开samba服务端口"></a>防火墙放开samba服务端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --permanent --add-service=samba<br>firewall-cmd --reload<br></code></pre></td></tr></table></figure><h3 id="selinux和文件夹访问权限"><a href="#selinux和文件夹访问权限" class="headerlink" title="selinux和文件夹访问权限"></a>selinux和文件夹访问权限</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">setsebool -P samba_enable_home_dirs on<br><br><span class="hljs-built_in">chown</span> -Rf ui.ui /home/ui<br><span class="hljs-built_in">chown</span> -Rf ops.ops /home/ops<br></code></pre></td></tr></table></figure><p>查看firewall开放端口信息如图</p><p><img src="https://blog.ywmy.xyz/ywmy/linuxfirewall-cmd.png" alt="firewall-cmd"></p><h2 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h2><p>windows平台可以直接在支持中输入\192.168.31.250\ui。输入用户名和密码，进入samba目录。测试如图所示，</p><p><img src="https://blog.ywmy.xyz/ywmy/linuxsamba_test.PNG" alt="samba测试"><br>完成连接后，可以在资源管理器中添加映射网络驱动。将共享直接挂载到磁盘目录。</p><p>linux，可以在文件管理器中输入smb:&#x2F;&#x2F;192.168.31.250&#x2F;ui,选择已注册用户，输入用户名和密码，完成连接。<br>也可以通过挂载来完成文件目录的访问，操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ui<br>sudo mount -t cifs -o username=ui,password=<span class="hljs-string">&quot;password&quot;</span> //192.168.31.250/ui /home/yourname/ui<br></code></pre></td></tr></table></figure><p>取消挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo umount /home/yourname/ui<br></code></pre></td></tr></table></figure><p>挂载后如图片</p><p><img src="https://blog.ywmy.xyz/ywmy/linuxlinux_mount.png" alt="挂载"><br>所示。</p><h2 id="特别注意"><a href="#特别注意" class="headerlink" title="特别注意"></a>特别注意</h2><p>在创建共享的过程中，防火墙和selinux这两个是一定要注意的，端口开放，和selinux的权配置会导致访问的权限问题。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>linux</tag>
      
      <tag>samba</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>webadmin安装</title>
    <link href="/2018/10/21/webmin%E5%AE%89%E8%A3%85/"/>
    <url>/2018/10/21/webmin%E5%AE%89%E8%A3%85/</url>
    
    <content type="html"><![CDATA[<h1 id="centos-7-安装webadmin"><a href="#centos-7-安装webadmin" class="headerlink" title="centos 7 安装webadmin"></a>centos 7 安装webadmin</h1><p>webadmin是一个基于浏览器界面的类Unix系统配置管理工具。</p><span id="more"></span><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget http://prdownloads.sourceforge.net/webadmin/webmin-1.900-1.noarch.rpm<br></code></pre></td></tr></table></figure><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum -y install perl perl-Net-SSLeay openssl perl-IO-Tty perl-Encode-Detect <br></code></pre></td></tr></table></figure><h3 id="安装程序"><a href="#安装程序" class="headerlink" title="安装程序"></a>安装程序</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm -U webmin-1.900-1.noarch.rpm<br></code></pre></td></tr></table></figure><p>程序安装位置：&#x2F;usr&#x2F;libexec&#x2F;webmin</p><p>程序默认通过https访问，端口10000 TCP，按访问需求放通。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>webadmin</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos默认防火墙使用指南</title>
    <link href="/2018/10/20/centos%E9%BB%98%E8%AE%A4%E9%98%B2%E7%81%AB%E5%A2%99%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <url>/2018/10/20/centos%E9%BB%98%E8%AE%A4%E9%98%B2%E7%81%AB%E5%A2%99%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<h1 id="firewall-cmd操作小记"><a href="#firewall-cmd操作小记" class="headerlink" title="firewall-cmd操作小记"></a>firewall-cmd操作小记</h1><p>firewall基本操作及配置举例。</p><span id="more"></span><h2 id="0x01-基本操作"><a href="#0x01-基本操作" class="headerlink" title="0x01:基本操作"></a>0x01:基本操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># systemctl start firewalld //启动</span><br><span class="hljs-comment"># systemctl status firewalld //状态</span><br><span class="hljs-comment"># systemctl disable firewalld //禁用</span><br><span class="hljs-comment"># systemctl stop firewalld //停止</span><br></code></pre></td></tr></table></figure><h2 id="0x02-systemctl"><a href="#0x02-systemctl" class="headerlink" title="0x02:systemctl"></a>0x02:systemctl</h2><p>systemctl是centos中必不可少的管理工具，它具备service和chkconfig的所有功能</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># systemctl start firewalld.service //启动某个服务</span><br><span class="hljs-comment"># systemctl stop firewalld.service //关闭某个服务</span><br><span class="hljs-comment"># systemctl restart firewalld.service //重启某个服务</span><br><span class="hljs-comment"># systemctl status firewalld.service //显示某个服务的状态</span><br><span class="hljs-comment"># systemctl enable firewalld.service //开机时随机自启动</span><br><span class="hljs-comment"># systemctl disable firewalld.service //禁止开机启动</span><br><span class="hljs-comment"># systemctl is-enabled firewalld.service //查看是否开机启动</span><br><span class="hljs-comment"># systemctl list-unit-files|grep enabled //查看已经启动的服列表</span><br><span class="hljs-comment"># systemctl --failed //查看启动失败的服务列表</span><br></code></pre></td></tr></table></figure><h2 id="0x03-基本配置firewall-cmd"><a href="#0x03-基本配置firewall-cmd" class="headerlink" title="0x03:基本配置firewall-cmd"></a>0x03:基本配置firewall-cmd</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># firewall-cmd --version //查看防火墙版本</span><br><span class="hljs-comment"># firewall-cmd --help //查看命令操作帮助</span><br><span class="hljs-comment"># firewall-cmd --state //显示当前状态</span><br><span class="hljs-comment"># firewall-cmd --zone=public --list-ports //查看所有打开运行的端口</span><br><span class="hljs-comment"># firewall-cmd --reload //不重启立即加载</span><br><span class="hljs-comment"># firewall-cmd --list-all-zones | more //查看区域信息情况</span><br><span class="hljs-comment"># firewall-cmd --get-zone-of-interface=eth0 //查看指定接口所属区域</span><br><span class="hljs-comment"># firewall-cmd --panic-on //拒绝所有包</span><br><span class="hljs-comment"># firewall-cmd --panic-off //取消拒绝状态</span><br><span class="hljs-comment"># firewall-cmd --query-panic //查看是否拒绝</span><br></code></pre></td></tr></table></figure><h2 id="0x04-基本举例"><a href="#0x04-基本举例" class="headerlink" title="0x04:基本举例"></a>0x04:基本举例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># firewall-cmd --zone=public --add-port=3306/tcp --permanent //添加3306端口（--permanent）永久生效，没有此参数重启后失效</span><br><span class="hljs-comment"># firewall-cmd --reload //不重启立即加载</span><br><span class="hljs-comment"># firewall-cmd --zone= public --query-port=3306/tcp //查看加入3306端口状态</span><br><span class="hljs-comment"># firewall-cmd --zone= public --remove-port=3306/tcp --permanent //删除刚刚加入的防火墙规则3306</span><br><span class="hljs-comment"># firewall-cmd --permanent --remove-icmp-block=echo-request //删除禁ping</span><br><span class="hljs-comment"># firewall-cmd --permanent --add-icmp-block=echo-request //开启禁ping</span><br><span class="hljs-comment"># firewall-cmd --get-service //查看已被允许的信息</span><br></code></pre></td></tr></table></figure><h2 id="具体管理规则"><a href="#具体管理规则" class="headerlink" title="具体管理规则"></a>具体管理规则</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"> <span class="hljs-comment"># firewall-cmd --help</span><br>firewall-cmd高级功能可以到官方资料库了解更多信息。<br>https://fedoraproject.org/wiki/FirewallD/zh-cn<br>https://access.redhat.com/documentation/zh-CN/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html<br>https://www.ibm.com/developerworks/cn/linux/1507_caojh/<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>firewall</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu 18.04安装phpvirtualbox</title>
    <link href="/2018/10/13/ubuntu-18-04%E5%AE%89%E8%A3%85phpvirtualbox/"/>
    <url>/2018/10/13/ubuntu-18-04%E5%AE%89%E8%A3%85phpvirtualbox/</url>
    
    <content type="html"><![CDATA[<h1 id="安装phpvirtualbox"><a href="#安装phpvirtualbox" class="headerlink" title="安装phpvirtualbox"></a>安装phpvirtualbox</h1><p>virtualbox安装完成后，可以通过给virtualbox后台装一个基于web的前端工具，使其可以通过网页来管理和创建虚拟机。</p><span id="more"></span><h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>首先，更新系统，并安装相关信赖包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br>sudo apt upgrade<br>sudo apt install build-essential dkms unzip wget vim<br></code></pre></td></tr></table></figure><p>安装完成后，需要重启ubuntu系统。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo reboot<br></code></pre></td></tr></table></figure><h2 id="在ubuntu-18-04上安装virtualbox"><a href="#在ubuntu-18-04上安装virtualbox" class="headerlink" title="在ubuntu 18.04上安装virtualbox"></a>在ubuntu 18.04上安装virtualbox</h2><p>从官网上下载<a href="https://www.virtualbox.org/">安装包</a>和<a href="https://www.virtualbox.org/wiki/Downloads">拓展包</a>。先安装virtualbox程序，再导入拓展包。</p><p>添加用户到virtualbox组</p><p>我们需要去创建并添加我们系统的用户vboxusers组中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo usermod -aG vboxusers yourname<br></code></pre></td></tr></table></figure><p>确定virtualbox内核模块是否已加载。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl status vboxdrv<br></code></pre></td></tr></table></figure><p>参考图片</p><p><img src="https://blog.ywmy.xyz/vboxstatus.png" alt="状态"></p><h2 id="安装phpvirtualbox过程"><a href="#安装phpvirtualbox过程" class="headerlink" title="安装phpvirtualbox过程"></a>安装phpvirtualbox过程</h2><p>由于它是基于web的工具，我们需要安装apache服务器、php和一些php模块，运行命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install apache2 php php-mysql libapache2-mod-php php-soap php-xml<br></code></pre></td></tr></table></figure><p>然后下载virtualbox相对应的版本，如安装的virtualbox 5.2，官方<a href="https://phpvirtualbox.github.io/">主页</a>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget httpss://github.com/phpvirtualbox/phpvirtualbox/archive/5.2.zip<br></code></pre></td></tr></table></figure><p>解压下载的安装包。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">unzip 5.2.0.zip<br></code></pre></td></tr></table></figure><p>解压后将解压的文件夹复制到apache web服务器的要文件夹中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">cp</span> -r phpvirtualbox-5.2.0/ /var/www/html/phpvirtualbox<br></code></pre></td></tr></table></figure><p>接下来配置phpvirtualbox。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">cp</span> /var/www/html/phpvirtualbox/config.php-example /var/www/html/phpvirtualbox/config.php<br>sudo vim /var/www/html/phpvirtualbox/config.php<br></code></pre></td></tr></table></figure><p>更改内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">var <span class="hljs-variable">$username</span> = <span class="hljs-string">&#x27;yourname&#x27;</span>;<br>var <span class="hljs-variable">$password</span> = <span class="hljs-string">&#x27;password&#x27;</span>;<br></code></pre></td></tr></table></figure><p>保存文件。</p><p>创建文件如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/default/virutalbox<br></code></pre></td></tr></table></figure><p>添加内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">VBOXWEB_USER=yourname<br></code></pre></td></tr></table></figure><p>最后，重新启动服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl restart vboxweb-service<br>sudo systemctl restart vboxdrv<br>sudo systemctl restart apache2<br></code></pre></td></tr></table></figure><h2 id="调整防火墙允许apache-web服务器连接"><a href="#调整防火墙允许apache-web服务器连接" class="headerlink" title="调整防火墙允许apache web服务器连接"></a>调整防火墙允许apache web服务器连接</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw all list<br>sudo ufw app info <span class="hljs-string">&quot;Apache Full&quot;</span><br>sudo ufw reload<br></code></pre></td></tr></table></figure><p>如下图所示：</p><p><img src="https://blog.ywmy.xyz/ywmy/linuxvboxstatus.png" alt="状态"></p><h2 id="访问phpvirtualbox的web控制台"><a href="#访问phpvirtualbox的web控制台" class="headerlink" title="访问phpvirtualbox的web控制台"></a>访问phpvirtualbox的web控制台</h2><p>现在，可以使用任意一台系统过程访问phpvirtualbox来操作virtualbox了。参考图：</p><p><img src="https://blog.ywmy.xyz/phpvirtualbox.png" alt="参考图">。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>virtualbox</tag>
      
      <tag>vsphere</tag>
      
      <tag>ubuntu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iptables详解</title>
    <link href="/2018/08/22/iptables%E8%AF%A6%E8%A7%A3/"/>
    <url>/2018/08/22/iptables%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="linux-之软件防火墙iptables详解"><a href="#linux-之软件防火墙iptables详解" class="headerlink" title="linux 之软件防火墙iptables详解"></a>linux 之软件防火墙iptables详解</h1><p>netfilter是由rusth russell提出的linux 2.4内核防火墙框架，该框架既简洁又灵活，可实现安全策略应用中的许多功能，如数据包过滤、数据包处理、地址伪装、透明代理、动态网络地址转换（network address translation, nat）,以及基于用户及媒体访问控制（media access control, mac）地址的过滤和基于状态的过滤、包速率限制等。iptables&#x2F;netfilter的这些规则可以通过灵活组合，形成非常多的功能、涵盖各个方面，这一切都利益于它的优秀设计思想。</p><span id="more"></span><h2 id="0x01：filter和iptables"><a href="#0x01：filter和iptables" class="headerlink" title="0x01：filter和iptables"></a>0x01：filter和iptables</h2><p>netfilter是linux操作系统核心层内部的一个数据包处理模块，它具有如下功能：</p><ul><li>网络地址转换（network address translation）</li><li>数据包内容修改</li><li>以及数据包过滤的防火墙功能</li></ul><p>netfilter平台中制定了数据包的五个挂载点（hook poing，我们可以理解为回调函数点，数据包到达这些位置的时候会主动调用我们的boov，使我们有机会能在数据包路由的时候改变它们的方向、内容），这５个挂载点分别是pre_routing、input、output、forward、post_routing。</p><p>netfilter所设置的规则是存放在内核内存中的，而iptables是一个应用层的应用程序，它通过netfilter放出的接口来对存放在内核中的xxtables（netfilter的配置表）进行修改。这个xxtables由表tables、链chains、规则rules组成，iptables在应用层负责修改这个规则文件。类似应用程序还有firewall、ufw。</p><p><img src="http://blog.ywmy.xyz/ywmy/linuxiptables_and_kernel.png" alt="iptables与内核"></p><h3 id="1-1-filter、nat、mangle-raw规则表"><a href="#1-1-filter、nat、mangle-raw规则表" class="headerlink" title="1.1:filter、nat、mangle raw规则表"></a>1.1:filter、nat、mangle raw规则表</h3><h4 id="filter表"><a href="#filter表" class="headerlink" title="filter表"></a>filter表</h4><p>主要用于对数据包进行过滤，根据具体的规则决定是否放行该数据包（如drop、accept、reject、log）。filter表对应的内核模块为iptable_filter，包含三个规则链：</p><ul><li>input链：input针对那些目的地是本地的包</li><li>forward链：forward过滤所胡不是本地产生的并且旷日持久地不是本地（即本机只负责转发）的包</li><li>output链：output是用来过滤所有本地生成的包</li></ul><h4 id="nat表"><a href="#nat表" class="headerlink" title="nat表"></a>nat表</h4><p>主要用于修改数据包的ip地址、端口等信息（网络地址转换、如snat、dnat、masquerade、redirect）。属于一个流的包（因为包的大小限制导致数据可能会被分成多个数据包）只会经过这个表一次。如果第一个包被允许做nat或masqueraded，那个余下的包都会自动地被做相同的操作，也就是说，余下的包不会再通过这个表。表对应的内核模块为iptable_nat，包含三个链：</p><ul><li>prerouting链：作用是在包刚刚到达防火墙时改变它的目的地址</li><li>output链：改变本地产生的包的目的地址</li><li>postrouting链：在包就要离开防火墙之前改变其源地址</li></ul><h4 id="mangle表"><a href="#mangle表" class="headerlink" title="mangle表"></a>mangle表</h4><p>主要用于修改数据包的tos（type oof service，服务类型）、ttl（time to live，生存周期）值以及为数据包设置mark标记，以实现qos（quality of service，服务质量）调整以及策略路由等应用，由于需要相应的路由设备支持，因此应用并不广泛。包含一个规则链－－prerouting、postrouting、input、output、forward。</p><h4 id="raw表"><a href="#raw表" class="headerlink" title="raw表"></a>raw表</h4><p>是自1.2.9以后版本的iptables新增的表，主要用决定数据包是否被状态跟踪机制处理。在匹配数据包时，raw表的规则要优先于其它表。包含两条规则链－－output、prerouting</p><p>iptables中数据包和４种被跟踪连接的４种不同状态：</p><ul><li>new：该包想要形如一个连接（重新连接或将连接重定向）</li><li>related：该包是属于某个已经建立的连接所建立的新连接。例如：ftp的数据传输连接就是控制连接　所related出来的连接。–icmp-type 0（ping 应答）就是icmp-type 8（ping 请求）所　related出来的。</li><li>established：只要发送并接到应用，一个数据连接从new变为established，而且该状态会纠结匹配这个连接的后续数据包。</li><li>invalid：数据包不能被识别属于哪个连接或没有任何状态。比如内存举出，收到不知属于哪个连接的icmp错误信息，一般应该drop这个状态的任何数据。</li></ul><h3 id="1-2-input、forward等规则链和规则"><a href="#1-2-input、forward等规则链和规则" class="headerlink" title="1.2:input、forward等规则链和规则"></a>1.2:input、forward等规则链和规则</h3><p>在处理各种数据包时，根据防火墙规则的不同介入时机，iptables代涉及５种默认规则链，从应用时间点的角度理解这些链：</p><ul><li>input链：当接收到防火墙本地地址的数据包（入站）时，应用此链中的规则。</li><li>output链：当防火墙本机向外发送数据包（出站）时，应用此链中的规则。</li><li>forward链：当接收到需要通过防火墙发送给其它地址的数据包（转发）时，应用此链中的规则。</li><li>prerouting链：在对数据包作路由选择之前，应用此链中的规则，如dnat。</li><li>postrouting链：在对数据包作路由选择之后，应用此链中的规则，如snat。</li></ul><p>防火墙处理数据包的方式（规则）：</p><ul><li><p>accept：允许数据包通过。</p></li><li><p>drop：直接丢弃数据包，不给任何回应信息。</p></li><li><p>reject：拒绝数据包通过，必要时会给数据发送端一个响应信息。</p></li><li><p>snat：源地址转换在进入路由层面的route之前，重新改写一个源地址，目标地址不变，并在本机建立nat表项，当数据返回时，根据nat表将目的地址数据改定为数据发送出去时候的源地址，并发送给主机。解决内网用户用同一个公网地址上网的问题。</p></li><li><p>dnat：目标地址转换。和snat相反，ip包经过route之后、出本地的网络栈之前，重新修改目标地址，源地址不变，在本机建立nat表项，当数据返回时，根据nat表将源地址修改为熂发送过来的时候的目标地址，并发给远程主机。可以隐藏后端服务器的真实地址。</p><p>  redirect:是dnat的一种特殊形式，将网络包转发到本地host上（不管ip头部指定的目标地址是什么），方便在本机做端口转发。</p></li><li><p>log：在&#x2F;var&#x2F;log&#x2F;messages文件中记录日志信息，然后将数据包传递给下一个规则。</p></li></ul><h2 id="0x02：linux数据包路由原理"><a href="#0x02：linux数据包路由原理" class="headerlink" title="0x02：linux数据包路由原理"></a>0x02：linux数据包路由原理</h2><p>我们已经知道了netfilter和iptables的架构和作用，并且学习了控制netfilter行为和xtables表的结构，那么这个xtables表是怎么在内核协议栈的数据包路由中直作用的呢？</p><p>风口数据包由底层的网卡nic（network interface card）接收，通过数据链路层的解包之后（去除数据链路帧头），就进入了tcp&#x2F;ip协议栈（本质就是一个处理网络数据的内核驱动）和netfilter混合的数据处理流程中了。数据包的接收、处理、转发流程构成了一个有限状态微量机，经过一些列的内核处理函数、以及netfilter hook点，最后被转发、或者本次上层的应用程序消化掉。是时候看这张图了</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>firewall</tag>
      
      <tag>iptables</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>firewall-cmd</title>
    <link href="/2018/08/21/firewall-cmd/"/>
    <url>/2018/08/21/firewall-cmd/</url>
    
    <content type="html"><![CDATA[<h1 id="firewall-cmd"><a href="#firewall-cmd" class="headerlink" title="firewall-cmd"></a>firewall-cmd</h1><p>linux防火基础使用命令。</p><span id="more"></span><h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><p>安装firewall防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">yum install firewalld<br></code></pre></td></tr></table></figure><p>开启服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemclt start firewalld.service<br></code></pre></td></tr></table></figure><p>关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl stop firewalld.service<br></code></pre></td></tr></table></figure><p>开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl <span class="hljs-built_in">enable</span> firewalld.service<br></code></pre></td></tr></table></figure><p>关闭开机启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemclt <span class="hljs-built_in">disable</span> firewalld.service<br></code></pre></td></tr></table></figure><h2 id="使用firewall-cmd命令"><a href="#使用firewall-cmd命令" class="headerlink" title="使用firewall-cmd命令"></a>使用firewall-cmd命令</h2><p>查看状态</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --state<br></code></pre></td></tr></table></figure><p>running表示运行中，not running表示未运行。</p><p>获取活动的区域</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">firewall-cmd --get-active-zones<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>firewall</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>centos安装mariadb</title>
    <link href="/2018/08/20/centos%E5%AE%89%E8%A3%85mariadb/"/>
    <url>/2018/08/20/centos%E5%AE%89%E8%A3%85mariadb/</url>
    
    <content type="html"><![CDATA[<h1 id="centos安装mariadb操作小记"><a href="#centos安装mariadb操作小记" class="headerlink" title="centos安装mariadb操作小记"></a>centos安装mariadb操作小记</h1><p>centos 直接通过yum安装mariadb，以及mariadb secure installation配置向导操作。记录备忘。</p><span id="more"></span><h2 id="0x01-安装"><a href="#0x01-安装" class="headerlink" title="0x01:安装"></a>0x01:安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># yum install mariadb mariadb-server</span><br></code></pre></td></tr></table></figure><p>安装过程中输入y确认安装mariadb相关的包。</p><h2 id="0x02-启用"><a href="#0x02-启用" class="headerlink" title="0x02:启用"></a>0x02:启用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># systemctl start mariadb</span><br><span class="hljs-comment"># systemclt enable mariadb</span><br><span class="hljs-comment"># systemctl status mariadb</span><br></code></pre></td></tr></table></figure><p>启用后的状态应如下图所示内容：</p><p><img src="https://blog.ywmy.xyz/ywmy/linuxmariadb.png" alt="mariadb status"></p><h2 id="0x03-安全配置"><a href="#0x03-安全配置" class="headerlink" title="0x03:安全配置"></a>0x03:安全配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># mysql_secure_installation</span><br></code></pre></td></tr></table></figure><p>配置参考下图所示：</p><p><img src="https://blog.ywmy.xyz/mysql_secure_installation.png" alt="mysql_secure_installation"></p><p>以上图中，设置 MariaDB 的 root 账户密码（选y设置），禁用 root 远程登录，删除测试数据库以及测试帐号，最后需要使用下面的命令重新加载权限。</p><h2 id="0x04-登录数据库"><a href="#0x04-登录数据库" class="headerlink" title="0x04:登录数据库"></a>0x04:登录数据库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># mysql -u root -p</span><br></code></pre></td></tr></table></figure><p>连接登录后，如下图所示：<br><img src="https://blog.ywmy.xyz/ywmy/linux_login_database.png" alt="登录数据库"></p>]]></content>
    
    
    <categories>
      
      <category>database</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mariadb</tag>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux wacom</title>
    <link href="/2018/08/16/linux-wacom/"/>
    <url>/2018/08/16/linux-wacom/</url>
    
    <content type="html"><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>windows和mac os下wacom包含官方的驱动。在linux我们需要安装linux支持才可以使用。</p><span id="more"></span><p>项目托管在github上。在使用的时候，可能需要科学的上网。项目地址请访问<a href="https://linuxwacom.github.io/">The linux Wacom Project</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>系统：ubuntu 18.04 LTS</p><h2 id="Kernel-Driver"><a href="#Kernel-Driver" class="headerlink" title="Kernel Driver"></a>Kernel Driver</h2><p>*安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install linux-headers-$(<span class="hljs-built_in">uname</span> -r) build-essential <span class="hljs-comment"># on Debian, Ubuntu, Mint</span><br>sudo apt-get install autoconf                                  <span class="hljs-comment"># on Debian, Ubuntu, Mint</span><br>sudo yum install gcc <span class="hljs-string">&quot;kernel-devel-uname-r == <span class="hljs-subst">$(uname -r)</span>&quot;</span>     <span class="hljs-comment"># on RHEL, CentOS, Fedora</span><br>sudo pacman -Syy                                               <span class="hljs-comment"># on Arch</span><br>sudo pacman -S linux                                           <span class="hljs-comment"># on Arch</span><br>sudo reboot                                                    <span class="hljs-comment"># on Arch</span><br>sudo pacman -S linux-headers                                   <span class="hljs-comment"># on Arch</span><br>sudo zypper install kernel-devel                               <span class="hljs-comment"># on open SUSE 11.4</span><br>sudo zypper install --<span class="hljs-built_in">type</span> pattern devel_basis                 <span class="hljs-comment"># on open SUSE 11.4</span><br></code></pre></td></tr></table></figure><p>*下载</p><p>下载<a href="https://github.com/linuxwacom/xf86-input-wacom/wiki/Building-The-Driver">input-wacom</a></p><p>*编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span> -x ./autogen.sh; <span class="hljs-keyword">then</span> ./autogen.sh; <span class="hljs-keyword">else</span> ./configure; <span class="hljs-keyword">fi</span> &amp;&amp; make &amp;&amp; sudo make install || <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Build Failed&quot;</span><br></code></pre></td></tr></table></figure><p>*加载模块</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">grep <span class="hljs-string">&quot;&quot;</span> /sys/module/wacom*/version<br></code></pre></td></tr></table></figure><p>or</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">modinfo wacom | grep version<br></code></pre></td></tr></table></figure><p>如下图所示：</p><p><img src="https://blog.ywmy.xyz/ywmy/linux_upload_wacom_module.png" alt="加载模块"></p><h2 id="X-Driver"><a href="#X-Driver" class="headerlink" title="X Driver"></a>X Driver</h2><p>*安装依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install autoconf pkg-config make xutils-dev libtool xserver-xorg-dev libx11-dev libxi-dev libxrandr-dev libxinerama-dev libudev-dev<br></code></pre></td></tr></table></figure><p>*下载</p><p>下载<a href="https://github.com/linuxwacom/xf86-input-wacom/wiki/Building-The-Driver">xf86-input-wacom</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> httpss://github.com/linuxwacom/xf86-input-wacom.git<br></code></pre></td></tr></table></figure><p>*编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">set</span> -- --prefix=<span class="hljs-string">&quot;/usr&quot;</span> --libdir=<span class="hljs-string">&quot;<span class="hljs-subst">$(readlink -e $(ls -d /usr/lib*/xorg/modules/input/../../../ | head -n1)</span>)&quot;</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">test</span> -x ./autogen.sh; <span class="hljs-keyword">then</span> ./autogen.sh <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span>; <span class="hljs-keyword">else</span> ./configure <span class="hljs-string">&quot;<span class="hljs-variable">$@</span>&quot;</span>; <span class="hljs-keyword">fi</span> &amp;&amp; make &amp;&amp; sudo make install || <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Build Failed&quot;</span><br></code></pre></td></tr></table></figure><h2 id="libwacom"><a href="#libwacom" class="headerlink" title="libwacom"></a>libwacom</h2><p>*下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> httpss://github.com/linuxwacom/libwacom.git<br></code></pre></td></tr></table></figure><p>*编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">./autogen.sh --prefix=/usr --libdir=/lib64<br>make<br>sudo make install<br></code></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>安装结束后，可以在系统的输入选项中检测到手绘板和笔。参考下图：</p><p><img src="https://blog.ywmy.xyz/ywmy/linux_stylus.png" alt="手写笔"></p><p><img src="https://blog.ywmy.xyz/ywmy/linux_wacom.png" alt="手绘板"></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>wacom</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>H3C MSR 3640配置</title>
    <link href="/2018/08/12/H3C-MSR-3640%E9%85%8D%E7%BD%AE/"/>
    <url>/2018/08/12/H3C-MSR-3640%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="H3C-MSR-路由器操作小记"><a href="#H3C-MSR-路由器操作小记" class="headerlink" title="H3C MSR 路由器操作小记"></a>H3C MSR 路由器操作小记</h1><p>H3C MSR 路由器固件升级<strong>tftp方式</strong>,基本配置记录备忘。</p><h2 id="0x001-系统信息及升级"><a href="#0x001-系统信息及升级" class="headerlink" title="0x001:系统信息及升级"></a>0x001:系统信息及升级</h2><h3 id="查看硬件信息"><a href="#查看硬件信息" class="headerlink" title="查看硬件信息"></a>查看硬件信息</h3><p>console口登录设备</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs nolight">&lt;XH-route&gt;display device manuinfo<br> Slot 0:<br>DEVICE_NAME          : MSR 36-40<br>DEVICE_SERIAL_NUMBER : 210235A0W8B166000422<br>MAC_ADDRESS          : 84D9-31DE-01FD<br>MANUFACTURING_DATE   : 2016-06-24<br>VENDOR_NAME          : H3C<br><br></code></pre></td></tr></table></figure><h3 id="更改设备名称"><a href="#更改设备名称" class="headerlink" title="更改设备名称"></a>更改设备名称</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nolingt">&lt;XH-route&gt;system-view<br>System View: return to User View with Ctrl+Z.<br>[XH-route]sysname XH-route<br></code></pre></td></tr></table></figure><h3 id="重置设备"><a href="#重置设备" class="headerlink" title="重置设备"></a>重置设备</h3><p>退出特权模式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nolight">&lt;XH-route&gt;restore factory-default<br></code></pre></td></tr></table></figure><h3 id="固件升级"><a href="#固件升级" class="headerlink" title="固件升级"></a>固件升级</h3><p>固件升级所需要的文件，可以通过h3c售后服务提供h3c设备序列号以设备信息由于h3c售后提供下载链接。同意下载许可后，将新的版本文件通过tftp服务上传至路由器设备。并将新的固件设定为下一次启动的默认启动项。</p><h4 id="tftp服务"><a href="#tftp服务" class="headerlink" title="tftp服务"></a>tftp服务</h4><p>在电脑上安装tfpt服务器软件，可以使用一个小巧简单的服务器软件<a href="http://tftpd32.jounin.net/tftpd32_download.html">tftp32</a>。选择对应的系统版本和下载方式。安装结束后，运行tfpt32程序，设定tfpt服务器的目录，即已经下载的固件目录。如图所示：</p><p><img src="https://blog.ywmy.xyz/tftp.jpg" alt="tfpt设定">。</p><p>通过tfpt将固件上传到路由器目录下，操作在路由器上完成。命令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nolight">&lt;route&gt;tftp tftp-ip get 固件文件名<br></code></pre></td></tr></table></figure><p>操作如下图所示：</p><p><img src="https://blog.ywmy.xyz/ywmy/networktfpt_upload.png" alt="上传固件">。</p><p>上传固件名称为MSR36-CMW710-RO615P13.IPE。</p><p>上传结束后，通过命令可以查看上传固件的目录及目录下的文件，上传前也可以查看设备剩余存储空间是否满足固件大小。操作如下图所示：</p><p><img src="https://blog.ywmy.xyz/ywmy/network_dir.png" alt="查看目录内容">。</p><p>设定启动固件为新上传的固件。操作如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nolight">&lt;route&gt;boot-loader file cfa0:/MSR36-CMW710-R0615P13.IPE main<br></code></pre></td></tr></table></figure><p><img src="https://blog.ywmy.xyz/ywmy/network_upgrade_commit.png" alt="设定启动项">。</p><p>确认启动项的信息，并提交确认，重新启动设备。</p><p><img src="https://blog.ywmy.xyz/ywmy/network_set_bootup_version.png" alt="砍提交信息">。</p><p>重启后，新的固件生效。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nolight">&lt;route&gt;reboot<br></code></pre></td></tr></table></figure><h2 id="0x002-基本配置"><a href="#0x002-基本配置" class="headerlink" title="0x002:基本配置"></a>0x002:基本配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs nolight">&lt;XH-route&gt;system-view<br>System View: return to User View with Ctrl+Z.<br>[XH-route]local-user admin     #设定本地用户<br>[XH-route-luser-manage-admin]password simple [password]     #设定密码<br>[XH-route-luser-manage-admin]authorization-attribute user-role network-admin      #设定用户级别<br>[XH-route-luser-manage-admin]server-type telnet https　　　　　#设定登录方式<br></code></pre></td></tr></table></figure><p>启用https登录，更改默认登录端口：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nolight">[XH-route]ip https enable    #启用https服务<br>[XH-route]ip https port [number]　　　#更变https端口<br></code></pre></td></tr></table></figure><p>基本配置如下所示（固定ip上网＋nat端口映射）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><code class="hljs nolight">&lt;XH-route&gt;display current-configuration<br>#<br> version 7.1.064, Release 0615P13<br>#<br> sysname XH-route<br>#<br> telnet server enable<br>#<br>nat address-group 1<br> address 112.17.128.126 112.17.128.126<br>#<br> password-recovery enable<br>#<br>vlan 1<br>#<br>dhcp server ip-pool test<br> gateway-list 172.16.100.1<br> network 172.16.100.0 mask 255.255.255.0<br> dns-list 211.140.13.18 211.140.188.188<br>#<br>controller Cellular0/0<br>#<br>controller Cellular0/1<br>#<br>interface Aux0<br>#<br>interface Virtual-Template0<br>#<br>interface NULL0<br>#<br>interface Vlan-interface1<br>#<br>interface GigabitEthernet0/0<br> port link-mode route<br> combo enable copper<br> ip address 112.17.128.126 255.255.255.128<br> nat outbound 3000 address-group 1<br> nat server protocol tcp global 112.17.128.126 655 inside 172.16.60.200 655<br> nat server protocol tcp global 112.17.128.126 5100 5700 inside 172.16.60.200 5100 5700<br>#<br>interface GigabitEthernet0/1<br> port link-mode route<br> combo enable copper<br> ip address 172.16.100.1 255.255.255.0<br>#<br>interface GigabitEthernet0/2<br> port link-mode route<br>#<br> scheduler logfile size 16<br>#<br>line class aux<br> user-role network-admin<br>#<br>line class tty<br> user-role network-operator<br>#<br>line class vty<br> user-role network-operator<br>#<br>line aux 0<br> user-role network-admin<br>#<br>line vty 0 4<br> authentication-mode scheme<br> user-role network-operator<br>#<br>line vty 5 63<br> user-role network-operator<br>#<br> ip route-static 0.0.0.0 0 112.17.128.1<br> ip route-static 172.16.60.0 24 172.16.100.100<br> ip route-static 192.168.35.0 24 172.16.100.100<br>#<br>acl advanced 3000<br> rule 0 permit ip<br>#<br>domain system<br>#<br> domain default enable system<br>#<br>role name level-0<br> description Predefined level-0 role<br>#<br>role name level-1<br> description Predefined level-1 role<br>#<br>role name level-2<br> description Predefined level-2 role<br>#<br>role name level-3<br> description Predefined level-3 role<br>#<br>role name level-4<br> description Predefined level-4 role<br>#<br>role name level-5<br> description Predefined level-5 role<br>#<br>role name level-6<br> description Predefined level-6 role<br>#<br>role name level-7<br> description Predefined level-7 role<br>#<br>role name level-8<br> description Predefined level-8 role<br>#<br>role name level-9<br> description Predefined level-9 role<br>#<br>role name level-10<br> description Predefined level-10 role<br>#<br>role name level-11<br> description Predefined level-11 role<br>#<br>role name level-12<br> description Predefined level-12 role<br>#<br>role name level-13<br> description Predefined level-13 role<br>#<br>role name level-14<br> description Predefined level-14 role<br>#<br>user-group system<br>#<br>local-user admin class manage<br> password hash $h$6$imclxi6OjTWpT1cz$bFZaC5tFEwAq2RSrsHrdtzzYy3GrpqnPqcFcaWe/iYO4JlF6LgJp7zWMUf6tQAZdd4o8xLQtfMvHhhgqkkSADQ==<br> service-type telnet http https<br> authorization-attribute user-role network-admin<br>#<br>local-user test class manage<br> password hash $h$6$yYBLqOb6kZzPCsJG$05S4ylePhCojyow+/HyG6wzxFkn9YI9PHEuRlHo82BDS7ZK7FL0uptb8ojicRVZ++lgYOQc2F+lN/eO6jb7eWA==<br> service-type http<br> authorization-attribute user-role network-operator<br>#<br> ip https port [number]<br> ip http enable<br> ip https enable<br>#<br>wlan global-configuration<br>#<br>wlan ap-group default-group<br>#<br>return<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>H3C</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu-16-04上安装openvpn服务器(二)</title>
    <link href="/2018/08/08/ubuntu-16-04%E4%B8%8A%E5%AE%89%E8%A3%85openvpn%E6%9C%8D%E5%8A%A1%E5%99%A8-2/"/>
    <url>/2018/08/08/ubuntu-16-04%E4%B8%8A%E5%AE%89%E8%A3%85openvpn%E6%9C%8D%E5%8A%A1%E5%99%A8-2/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-16-04上安装openvpn-二"><a href="#ubuntu-16-04上安装openvpn-二" class="headerlink" title="ubuntu 16.04上安装openvpn(二)"></a>ubuntu 16.04上安装openvpn(二)</h1><p>ubuntu 上安装配置openvpn，仅密钥认证，记录备忘。</p><span id="more"></span><h2 id="step-twelve-安装客户端配置"><a href="#step-twelve-安装客户端配置" class="headerlink" title="step twelve: 安装客户端配置"></a>step twelve: 安装客户端配置</h2><p>现在我们会讨论如何在windows、os x、iso和安卓上安装客户端vpn配置文件。这些客户端上的指令之间是独立的，所以可以跑到适用你的任一条。</p><h3 id="windows"><a href="#windows" class="headerlink" title="windows"></a>windows</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>openvpn的<a href="https://openvpn.net/index.php/open-source/downloads.html">下载页面</a>可以找到windows的openvpn客户端程序。为你的windows选择适合安装的程序版本。<br><em>注意：openvpn需要管理员权限才能安装</em></p><p>在安装openvpn之后，把.ovpn文件拷贝到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">C:\Progrem Files\OpenVPN\config<br></code></pre></td></tr></table></figure><p>当你启动openvpn时，它会自动查看配置文件。</p><p>每次使用openvpn时必须以管理身份运行。为了不必在每次使用vpn时右击选择使用管理员权限运行，你可以进行预设置，但是必须通过管理员账号完成。这也就意味着标准用户需要输入管理员密码才能使用openvpn。别一方面，除非客户端上的openvpn程序有管理权限，否则标准用户也无法正确链接到服务器，所以必须提升权限。</p><p>要将openvpn程序设置为始终以管理员身份运行，右键单击其快捷方式图标，然后点击属性，在兼容性先项的底部，点击更改所有用户的设备。在新窗口中，先中以管理员身份运行此程序。</p><h4 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h4><p>每次启动openvpn gui时，windows都会底部是否允许程序对你的计算机进行修改，选择是。启动openvpn客户端只是把applet放入到系统托盘中，以便根据需要连接和断开vpn，它实际上并没有创建vpn连接。</p><p>一旦启动openvpn，右击系统托盘中的openvpn图标，这会打开一个菜单。选择菜单的顶部的client1（这是我们的client1.ovpn配置文件）并选择connect。</p><p>这会打开一个状态窗口，显示建立连接时的日志输出，一旦客户端边上会显示一条消息。</p><p>断开与vpn的连接：右击系统托盘中的openvpn图标，选择客户端配置文件，并单击disconnect。</p><h3 id="MAC-OS-X"><a href="#MAC-OS-X" class="headerlink" title="MAC OS X"></a>MAC OS X</h3><h4 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h4><p>tunnelbick是一款适用于mac os x的免费、开源openvpn客户端。你可以从<a href="https://tunnelblick.net/downloads.html">tunnelblick</a>下载.dmg文件，并按照提示进行安装。在安装过程结束时，tunnelblick会问你是否有任何配置文件。打开finder窗口，双击client1.ovpn。tunnelblick会安装客户端配置文件。</p><h4 id="连接-1"><a href="#连接-1" class="headerlink" title="连接"></a>连接</h4><p>通过双击applications文件夹中的tunnelblick来启动tunnelblick。一旦tunnelblick启动，屏幕右上角的菜单栏会出现一个tunnelblick图标来控制连接。然后点击connect来启动连接。连接client连接。</p><h3 id="inux"><a href="#inux" class="headerlink" title="inux"></a>inux</h3><h4 id="安装-2"><a href="#安装-2" class="headerlink" title="安装"></a>安装</h4><p>如果你使用的是linux，根据你的发行版本可以使用各种工具。你的桌面环境或窗口管理器也可能包含连接程序。最普遍的方式是使用openvpn软件。在ubuntu或者是debian上，你可以像服务器上一样安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt install openvpn<br></code></pre></td></tr></table></figure><p>在centos上，你可以启动epel库，然后通过以下命令来安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo yum install epel-release<br>sudo yum install openvpn<br></code></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>检查你的发行版本是否包含&#x2F;etc&#x2F;openvpn&#x2F;update-resolov-conf脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> /etc/openvpn<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Output<br>update-resolv-conf<br></code></pre></td></tr></table></figure><p>如果发现有update-resolv-config文件，那么取消我们添加的三行来调整DNS调：client1.ovpn</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">script-security 2<br>up /etc/openvpn/update-resolv-conf<br>down /etc/openvpn/update-resolv-conf<br></code></pre></td></tr></table></figure><p>如果你使用的是centos，把group从nogroup改为nobody，以匹配发行版本的可用组：client1.ovpn</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">group nobody<br></code></pre></td></tr></table></figure><p>保存并关闭文件。</p><p>现在你只需要把openvpn命令指向客户端配置文件即可连接到vpn：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo openvpn --config client1.ovpn<br></code></pre></td></tr></table></figure><h3 id="android"><a href="#android" class="headerlink" title="android"></a>android</h3><h4 id="安装-3"><a href="#安装-3" class="headerlink" title="安装"></a>安装</h4><p>从f-droid中搜索openvpn并安装，把电脑上的client1.ovpn配置文件拷贝到手机上。</p><p>启动openvpn应用，点击菜单导入配置文件，找到已经存在手机上的client1.ovpn文件。点击导入即可。</p><h4 id="连接-2"><a href="#连接-2" class="headerlink" title="连接"></a>连接</h4><p>只需要点击connect按钮，就可以进行连接。你会被问到是否信任openvpn程序，选择确定以启动连接。要断开vpn连接，返回到openvpn应用，然后选择断开连接。</p><h2 id="step-thirteen-测试连接"><a href="#step-thirteen-测试连接" class="headerlink" title="step thirteen: 测试连接"></a>step thirteen: 测试连接</h2><p>一旦安装了所有东西，一个简单的检查可以确认一切正常。现在断开vpn连接，然后打开浏览器访问<a href="https://www.dnsleaktest.com/">DNSLeakTest</a>。</p><p>这个网站会返回由你互联网服务提供商分配的ip地址。为了用这个网站检查你的dns设备，点击extended test,它会告诉你你在使用哪个dns服务器。</p><p>现在把openvpn客户端连接到你的vpn服务器上，然后刷新浏览器。现在应该出现你的vpn服务器的ip地址。再一次,extended test会检查出你的dns设置。</p><h2 id="step-fourteen-撤销客户证书"><a href="#step-fourteen-撤销客户证书" class="headerlink" title="step fourteen: 撤销客户证书"></a>step fourteen: 撤销客户证书</h2><p>有时候，你可能需要撤销一个客户证书以防止进一步访问openvpn服务器。</p><p>为此，输入你的ca目录，并重新source var文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/openvpn-ca<br><span class="hljs-built_in">source</span> vars<br></code></pre></td></tr></table></figure><p>然后，使用你想要撤销的客户端名称调用revoke-full命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./revoke-full client3<br></code></pre></td></tr></table></figure><p>这会显示一些输出并以error 23结束，这是正常的并且应该已经成功生成了必要的信息。这些信息保存在keys目录下的一个名为crl.pem文件中。</p><p>把这个文件放到&#x2F;etc&#x2F;openvpn配置目录中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo <span class="hljs-built_in">cp</span> ~/openvpn-ca/keys/crl.pem /etc/openvpn<br></code></pre></td></tr></table></figure><p>然后打开openvpn服务器配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/openvpn/server.conf<br></code></pre></td></tr></table></figure><p>在文件底部，增加crl-varify选项，便得openvpn服务器在试图建立连接时检查证书撤销列表：&#x2F;etc&#x2F;openvpn&#x2F;servser.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/openvpn/server.conf<br></code></pre></td></tr></table></figure><p>保存并关闭文件。</p><p>最后，重启openvpn以实现证书撤销：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl restart openvpn@server<br></code></pre></td></tr></table></figure><p>现在客户端应该不可以再用旧的证书成功连接到服务器。</p><p>要撤销其它用户，按照以下过程进行操作：</p><ul><li>source ~&#x2F;openvpn-ca目录下的vars文件，然后使用客户端名称调用revoke-full脚本，生成一个新的证书撤销列表。</li><li>拷贝新证书撤销列表到&#x2F;etc&#x2F;openvpn目录以覆盖旧的列表。</li><li>重启openvpn服务。</li></ul><p><strong>来自</strong><br><a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-an-openvpn-server-on-ubuntu-16-04">how to set up an openvpn server on ubuntu 16.04</a></p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>linux</tag>
      
      <tag>openvpn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ubuntu-16-04上安装openvpn服务器(一)</title>
    <link href="/2018/08/08/ubuntu-16-04%E4%B8%8A%E5%AE%89%E8%A3%85openvpn%E6%9C%8D%E5%8A%A1%E5%99%A8-1/"/>
    <url>/2018/08/08/ubuntu-16-04%E4%B8%8A%E5%AE%89%E8%A3%85openvpn%E6%9C%8D%E5%8A%A1%E5%99%A8-1/</url>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-16-04上安装openvpn-一"><a href="#ubuntu-16-04上安装openvpn-一" class="headerlink" title="ubuntu 16.04上安装openvpn(一)"></a>ubuntu 16.04上安装openvpn(一)</h1><p>ubuntu 上安装配置openvpn，仅密钥认证，记录备忘。</p><span id="more"></span><h2 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h2><ul><li>ubuntu 16.04服务器</li><li>已经配置sudo权限的用户。</li></ul><h3 id="step-one-安装openvpn"><a href="#step-one-安装openvpn" class="headerlink" title="step one: 安装openvpn"></a>step one: 安装openvpn</h3><p>首先在服务器上安装openvpn。在ubuntu的默认软件库中有openvpn，所以可以直接使用apt命令进行安装。然后需要安装easy-rsa软件包，这个包用于建立一个内部ca(certificate authority,证书颁发机构),供vpn使用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt update<br>sudo apt install openvpn easy-rsa<br></code></pre></td></tr></table></figure><p>这样需要用到的软件就安装好了。</p><h3 id="step-two-创建ca目录"><a href="#step-two-创建ca目录" class="headerlink" title="step two: 创建ca目录"></a>step two: 创建ca目录</h3><p>openvpn是一个tls&#x2F;ssl　vpn。这表示它使用证书来加密服务器和客户端之间的流量，我们需要建立自己的简单认证机构（CA）。</p><p>首先，我们可以使用make-cadir命令将easy-rsa模板目录复制到我们的主目录中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make-cadir ~/openvpn-ca<br></code></pre></td></tr></table></figure><p>也可以使用以下命令代替：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> ~/openvpn-ca<br><span class="hljs-built_in">cp</span> -r /usr/share/easy-rsa/*  ~/openvpn-ca<br></code></pre></td></tr></table></figure><h3 id="setp-three-配置ca变量"><a href="#setp-three-配置ca变量" class="headerlink" title="setp three: 配置ca变量"></a>setp three: 配置ca变量</h3><p>进入新创建的目录，开始配置ca。</p><p>在这个文件夹中，你可以找到一些变量，这些变量用来决定你的证书是如何创建的。</p><p>在文件底部，找到类似下面的行，这些行为为新证书设置了一些默认值：~&#x2F;openvpn-ca&#x2F;vars</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash">...<br><span class="hljs-comment"># These are the default values for fields</span><br><span class="hljs-comment"># which will be placed in the certificate.</span><br><span class="hljs-comment"># Don&#x27;t leave any of these fields blank.</span><br><span class="hljs-built_in">export</span> KEY_COUNTRY=<span class="hljs-string">&quot;US&quot;</span><br><span class="hljs-built_in">export</span> KEY_PROVINCE=<span class="hljs-string">&quot;CA&quot;</span><br><span class="hljs-built_in">export</span> KEY_CITY=<span class="hljs-string">&quot;SanFrancisco&quot;</span><br><span class="hljs-built_in">export</span> KEY_ORG=<span class="hljs-string">&quot;Fort-Funston&quot;</span><br><span class="hljs-built_in">export</span> KEY_EMAIL=<span class="hljs-string">&quot;me@myhost.mydomain&quot;</span><br><span class="hljs-built_in">export</span> KEY_OU=<span class="hljs-string">&quot;MyOrganizationalUnit&quot;</span><br><br>...<br></code></pre></td></tr></table></figure><p>你可以修改这些设置的值，但不要为空。</p><p>我们也需要编辑这一块KEY_NAME的值，为了简单起见，在这施教程中我们把它设成server：~&#x2F;openvpn-ca&#x2F;vars</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">export</span> KEY_NAME=<span class="hljs-string">&quot;server&quot;</span><br></code></pre></td></tr></table></figure><h3 id="step-four-建立证书颁发机构"><a href="#step-four-建立证书颁发机构" class="headerlink" title="step four: 建立证书颁发机构"></a>step four: 建立证书颁发机构</h3><p>现在我们可以使用我们刚才设置的变量和easy-rsa程序来构建我们的证书颁发机构。</p><p>确保你现在ca目录下，然后source刚刚编辑的vars文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/openvpn-ca<br><span class="hljs-built_in">source</span> vars<br></code></pre></td></tr></table></figure><p>如果source正确的话，那么会看到：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Output<br>NOTE: If you run ./clean-all, Iwill be doing a <span class="hljs-built_in">rm</span> -rf on /home/sammy/openvpn-ca/keys<br></code></pre></td></tr></table></figure><p>确保我们在一个干净的环境中操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./clean-all<br></code></pre></td></tr></table></figure><p>现在可以通过以下命令来构建根ca：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./build-ca<br></code></pre></td></tr></table></figure><p>这会启动创建要证书颁发机构的密钥及证书的过程。由于我们上面修改了vars文件，所有的值都会自动填充。只需要根据提示按enter键确认选择即可：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash">Output<br>Generating a 2048 bit RSA private key<br>..........................................................................................+++<br>...............................+++<br>writing new private key to <span class="hljs-string">&#x27;ca.key&#x27;</span><br>-----<br>You are about to be asked to enter information that will be incorporated<br>into your certificate request.<br>What you are about to enter is what is called a Distinguished Name or a DN.<br>There are quite a few fields but you can leave some blank<br>For some fields there will be a default value,<br>If you enter <span class="hljs-string">&#x27;.&#x27;</span>, the field will be left blank.<br>-----<br>Country Name (2 letter code) [US]:<br>State or Province Name (full name) [NY]:<br>Locality Name (eg, city) [New York City]:<br>Organization Name (eg, company) [DigitalOcean]:<br>Organizational Unit Name (eg, section) [Community]:<br>Common Name (eg, your name or your server<span class="hljs-string">&#x27;s hostname) [DigitalOcean CA]:</span><br><span class="hljs-string">Name [server]:</span><br><span class="hljs-string">Email Address [admin@email.com]:</span><br></code></pre></td></tr></table></figure><p>现在我们有了ca，可以用来创建我们需要的其它文件。</p><h3 id="step-five-创建服务器证书、密钥和加密文件"><a href="#step-five-创建服务器证书、密钥和加密文件" class="headerlink" title="step five: 创建服务器证书、密钥和加密文件"></a>step five: 创建服务器证书、密钥和加密文件</h3><p>下面，我们会生成服务器证书以及密钥对，以及加密过程中需要的其它文件。</p><p>首先生成openvpn服务器证书及密钥对：</p><p>注意：如果你选择的名字不是server， 那么下面的指导中需要做些调整。比如，在把生成的文件复制到&#x2F;etc&#x2F;openvpn目录下时，必须替换为正确的名称。你还需要修改&#x2F;etc&#x2F;openvpn&#x2F;server.conf文件以指向正确的.crt和.key文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./build-key-server server<br></code></pre></td></tr></table></figure><p>现在，你只需要按enter键接受默认值即可。在最后的时候，你需要为两个问题输入y来签署和提交证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">Output<br>. . .<br><br>Certificate is to be certified until May  1 17:51:16 2026 GMT (3650 days)<br>Sign the certificate? [y/n]:y<br><br><br>1 out of 1 certificate requests certified, commit? [y/n]y<br>Write out database with 1 new entries<br>Data Base Updated<br></code></pre></td></tr></table></figure><p>接下来，我们将生成一些其它项。我们可以通过下面的命令生成强大的deffie-hellman密钥以在密钥交换的过程中使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./build-dh<br></code></pre></td></tr></table></figure><p>这会花费几分钟的时间。</p><p>之后，我们可以生成一个HMAC签名来加强服务器的tls完整性验证功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">openvpn --genkey --secret keys/ta.key<br></code></pre></td></tr></table></figure><h3 id="step-six-生成客户端证书和密钥对"><a href="#step-six-生成客户端证书和密钥对" class="headerlink" title="step six: 生成客户端证书和密钥对"></a>step six: 生成客户端证书和密钥对</h3><p>接下来，我们可以生成客户端证书和密钥对。尽管这可以在客户端机器上完成，然后出于安全的目的由服务器ca进行签名，但为了简单起见，在本指南中我们将在服务器上生成签名密钥。</p><p>本指南中我们会生成一个客户端密钥证书，但如果你有多个客户端，可以根据需要多次重复此过程。为每个客户传递一个唯一值给脚本。</p><p>因为你可能会回到这一步，我们会生新source　vars文件。本指南中我们会使用client1作为证书／密钥对的值。</p><p>输入如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/openvpn-ca<br><span class="hljs-built_in">source</span> vars<br>./build-key client1<br></code></pre></td></tr></table></figure><p>同样，默认值会自动直译，所以只要按enter键继续。将密码留宿，并确保对是否签名并提交证书的问题输入y。</p><h3 id="step-seven-配置openvpn服务"><a href="#step-seven-配置openvpn服务" class="headerlink" title="step seven: 配置openvpn服务"></a>step seven: 配置openvpn服务</h3><p>下面我们会使用生成的证书以及文件来配置openvpn服务。</p><p><strong>拷贝文件到openvpn目录</strong><br>首先，我们需要把必要的文件拷贝到&#x2F;etc&#x2F;openvpn配置目录中。</p><p>可以从我们刚刚生成的所有文件开始。这些文件在生成的时候位于~&#x2F;openvpn-ca&#x2F;keys目录下。我们需要移动ca证书、服务器证书和密钥，hmca签名以及diffie-hellman文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/openvpn-ca/keys<br>sudo <span class="hljs-built_in">cp</span> ca.crt server.crt server.key ta.key dh2048.pem /etc/openvpn<br></code></pre></td></tr></table></figure><p>然后，我们需要拷贝并触感一个简单的openvpn配置文件到配置目录中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">gunzip -c /usr/share/doc/openvpn/examples/sample-config-files/server.conf.gz | sudo <span class="hljs-built_in">tee</span> /etc/openvpn/server.conf<br></code></pre></td></tr></table></figure><p>修改openvpn配置</p><p>现在我们可以修改服务器配置文件了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/openvpn/server.conf<br></code></pre></td></tr></table></figure><p>基本配置</p><p>首先，通过查找tls-auth指定到hmac部分。删除”;”来取消注释tls-auth行。在下面添加key-direction参数并设置为“０”,:&#x2F;etc&#x2F;openvpn&#x2F;srver.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">tls-auth ta.key 0 <span class="hljs-comment"># This is secret</span><br>key-direction 0<br></code></pre></td></tr></table></figure><p>然后通过查找注释掉的cipher行来加密密码部分。aes-128-cbc密码提供了很好的加密级别。删除“：”以取消cipher-aes-128-cbc行的注释：&#x2F;etc&#x2F;openvpn&#x2F;server.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">cipher AES-128-CBC<br></code></pre></td></tr></table></figure><p>在这一行下面加上suth行来先择hmac消息算法。sha256就很好：&#x2F;etc&#x2F;openvpn&#x2F;server.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">auth SHA256<br></code></pre></td></tr></table></figure><p>最后找到user和group设置并删除“；”以取消注释：&#x2F;etc&#x2F;openvpn&#x2F;server.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">user nobody<br>group nogroup<br></code></pre></td></tr></table></figure><p>（可选）重定向所有流到vpn</p><p>上面的设置会建立两台机器之间的vpn连接，但是不会强制任何使用隧道。如果你希望使用vpn来路由所有的流量，那么你需要将dns设置摄像头到客户端电脑。</p><p>取消那些注释掉配置客户端生定向所有流到vpn的指令。找到redirect-gateway部分并删除“；”：&#x2F;etc&#x2F;openvpn.server.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">push <span class="hljs-string">&quot;redirect-gateway def1 bypass-dhcp&quot;</span><br></code></pre></td></tr></table></figure><p>在下面找到dhcp-option部分，删除“；”：&#x2F;etc&#x2F;openvpn&#x2F;server.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">push <span class="hljs-string">&quot;dhcp-option DNS 208.67.222.222&quot;</span><br>push <span class="hljs-string">&quot;dhcp-option DNS 208.67.220.220&quot;</span><br></code></pre></td></tr></table></figure><p>这应该有助于客户端重新的配置dns设置，以使用vpn隧道作为默认网关。</p><p>（可选）修改端口和协议</p><p>默认情况下，openvpn服务器使用的端口1194和udp协议来接受客户端连接。如果你需要使用不同的端口，是可以更改端口选项的。可以用端口443，因为一般这个是衩防火墙规则允许的：／etc&#x2F;openvpn&#x2F;server.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># optional!</span><br>port 443<br></code></pre></td></tr></table></figure><p>通过协议也会被限制在该端口，如果是这样的话，把协议从udp修改到tcp：&#x2F;etc&#x2F;openvpn&#x2F;server.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># optional!</span><br>proto tcp<br></code></pre></td></tr></table></figure><p>如果你不需要使用不同的端口，最好把两个设置设为默认值。</p><p>（可选）指向非默认证书</p><p>如果之前在.&#x2F;build-key-server命令中使用了其它的名字，需要修改cert和key行指向正确的.crt和.key文件。如果使用了默认的server，则应该已经正确设置：&#x2F;etc&#x2F;openvpn&#x2F;server.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">cert server.crt<br>key server.key<br></code></pre></td></tr></table></figure><p>完成之后，保存并关闭文件。</p><h3 id="step-eight-修改服务器网络配置"><a href="#step-eight-修改服务器网络配置" class="headerlink" title="step eight: 修改服务器网络配置"></a>step eight: 修改服务器网络配置</h3><p>下面我们需要对服务器的网络做一些高速便利openvpn可以正确的路由流量。</p><p>允许ip转发</p><p>首先，我们需要允许服务器转发流量。这对于我们希望vpn服务器提供的功能是非常重要的。</p><p>可以通过修改&#x2F;etc&#x2F;sysctl.conf文件来高速设置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/sysctl.conf<br></code></pre></td></tr></table></figure><p>找到设置net.ipv4.ip_forward的那一行，删除这行前面的“＃“:／etc&#x2F;sysctl.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">net.ipv4.ip_forward=1<br></code></pre></td></tr></table></figure><p>保存并关闭文件。</p><p>要读取文件并高速当前会话的值，请输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sysctl -p<br></code></pre></td></tr></table></figure><p>调整ufw规则以伪装客户端连接</p><p>我们需要修改规则文件来设置伪装，这是一个iptables的概念，它提供了即时动态的nat来正确路由客户端连接。</p><p>在打开防火墙配置文件添加伪装之前，我们需要找到机器的公网接口。为此，请输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ip route | grep default<br></code></pre></td></tr></table></figure><p>你的公网接口应该在单词“dev”后面。比如，下面结果显示了名为wlplls0的接口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Output<br>default via 203.0.113.1 dev wlp11s0  proto static  metric 600<br></code></pre></td></tr></table></figure><p>当你的接口与默认路由相关联时，打开&#x2F;etc&#x2F;ufw&#x2F;before.rules文件来添加相关配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/ufw/before.rules<br></code></pre></td></tr></table></figure><p>这个文件处理在加载传统ufw规则之前应该文墨的配置。在文件顶部添加下面的行。这会为nat表中的postrouting链接设置默认策略，并伪装来自vpn的所有流量：&#x2F;etc&#x2F;ufw&#x2F;before.rules</p><p>注意：刻把-A POSTROUTINGＴ中的wlplls0换成你自己的接口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#</span><br><span class="hljs-comment"># rules.before</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Rules that should be run before the ufw command line added rules. Custom</span><br><span class="hljs-comment"># rules should be added to one of these chains:</span><br><span class="hljs-comment">#   ufw-before-input</span><br><span class="hljs-comment">#   ufw-before-output</span><br><span class="hljs-comment">#   ufw-before-forward</span><br><span class="hljs-comment">#</span><br><br><span class="hljs-comment"># START OPENVPN RULES</span><br><span class="hljs-comment"># NAT table rules</span><br>*nat<br>:POSTROUTING ACCEPT [0:0]<br><span class="hljs-comment"># Allow traffic from OpenVPN client to wlp11s0 (change to the interface you discovered!)</span><br>-A POSTROUTING -s 10.8.0.0/8 -o wlp11s0 -j MASQUERADE<br>COMMIT<br><span class="hljs-comment"># END OPENVPN RULES</span><br><br><span class="hljs-comment"># Don&#x27;t delete these required lines, otherwise there will be errors</span><br>*filter<br>. . .<br></code></pre></td></tr></table></figure><p>保存并关闭文件。</p><p>我们需要告诉ufw默认允许转发数据包。为些，我们打开&#x2F;etc&#x2F;default&#x2F;ufw文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim /etc/default/ufw<br></code></pre></td></tr></table></figure><p>找到default_forward_policy指令，把值从drop改成accetp：&#x2F;etc&#x2F;default&#x2F;ufw：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">DEFAULT_FORWARD_POLIEY=<span class="hljs-string">&quot;ACCEPT&quot;</span><br></code></pre></td></tr></table></figure><p>保存并关闭文件。</p><p>打开openvpn端口并雇用更改</p><p>下面，我们将高速防火墙本身以允许流量到openvpn。</p><p>如果你没有改变&#x2F;etc&#x2F;openvpn&#x2F;server.conf文件中的端口和协议，你需要打开udp流量到端口1194。如果你修改了端口和协议，请使用你选择的值。</p><p>我们还会添加ssh端口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw allow 1194/udp<br>sudo ufw allow openssh<br></code></pre></td></tr></table></figure><p>现在我们禁用然后生新雇用ufw来加载所有修改过的文件中的更改项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw <span class="hljs-built_in">disable</span><br>sudo ufw <span class="hljs-built_in">enable</span><br></code></pre></td></tr></table></figure><p>服务器现在配置成可以正确处理openvpn流量。</p><h3 id="step-nine-启动并启用openvpn服务"><a href="#step-nine-启动并启用openvpn服务" class="headerlink" title="step nine: 启动并启用openvpn服务"></a>step nine: 启动并启用openvpn服务</h3><p>我们终于准备好在服务器上启动openvpn服务了。可以使用systemd来做到这点。</p><p>我们需要通过systemd单元文件名称后面指定的配置文件名作为实像变量来启动openvpn服务器。我们服务器的配置文件叫做&#x2F;etc&#x2F;openvpn&#x2F;srver.conf。所以我们会在单元文件的末尾添加＠server：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl start openvpn@server<br></code></pre></td></tr></table></figure><p>通过下面的命令来检查服务是否成功启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl stauts openvpn@server<br></code></pre></td></tr></table></figure><p>如果一切正常的话，那么你的输出应该看起来像如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">● openvpn@server.service - OpenVPN connection to server<br>   Loaded: loaded (/lib/systemd/system/openvpn@.service; enabled; vendor preset: enabled)<br>   Active: active (running) since Sat 2018-08-04 18:07:06 UTC; 2 days ago<br>     Docs: man:openvpn(8)<br>           https://community.openvpn.net/openvpn/wiki/Openvpn23ManPage<br>           https://community.openvpn.net/openvpn/wiki/HOWTO<br> Main PID: 7130 (openvpn)<br>   CGroup: /system.slice/system-openvpn.slice/openvpn@server.service<br>           └─7130 /usr/sbin/openvpn --daemon ovpn-server --status /run/openvpn/server.status 10 --<span class="hljs-built_in">cd</span> /etc/openvpn --script-secur<br><br>Aug 07 14:33:44 vultr.guest ovpn-server[7130]: 112.10.253.234:30160 [client1] Peer Connection Initiated with [AF_INET]112.10.253<br>Aug 07 14:33:44 vultr.guest ovpn-server[7130]: MULTI: new connection by client <span class="hljs-string">&#x27;client1&#x27;</span> will cause previous active sessions by<br>Aug 07 14:33:44 vultr.guest ovpn-server[7130]: MULTI_sva: pool returned IPv4=10.8.0.6, IPv6=(Not enabled)<br>Aug 07 14:33:44 vultr.guest ovpn-server[7130]: MULTI: Learn: 10.8.0.6 -&gt; client1/112.10.253.234:30160<br>Aug 07 14:33:44 vultr.guest ovpn-server[7130]: MULTI: primary virtual IP <span class="hljs-keyword">for</span> client1/112.10.253.234:30160: 10.8.0.6<br>Aug 07 14:33:48 vultr.guest ovpn-server[7130]: client1/112.10.253.234:30160 PUSH: Received control message: <span class="hljs-string">&#x27;PUSH_REQUEST&#x27;</span><br>Aug 07 14:33:48 vultr.guest ovpn-server[7130]: client1/112.10.253.234:30160 send_push_reply(): safe_cap=940<br>Aug 07 14:33:48 vultr.guest ovpn-server[7130]: client1/112.10.253.234:30160 SENT CONTROL [client1]: <span class="hljs-string">&#x27;PUSH_REPLY,redirect-gateway</span><br><span class="hljs-string">Aug 07 14:37:48 vultr.guest ovpn-server[7130]: client1/112.10.253.234:30160 [client1] Inactivity timeout (--ping-restart), resta</span><br><span class="hljs-string">Aug 07 14:37:48 vultr.guest ovpn-server[7130]: client1/112.10.253.234:30160 SIGUSR1[soft,ping-restart] received, client-instance</span><br></code></pre></td></tr></table></figure><p>你也可以通过以下命令来检查openvpn tun0接口是否可用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ip addr show tun0<br></code></pre></td></tr></table></figure><p>你应该看到一个配置接口：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">Output<br>4: tun0: &lt;POINTOPOINT,MULTICAST,NOARP,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UNKNOWN group default qlen 100<br>    <span class="hljs-built_in">link</span>/none<br>    inet 10.8.0.1 peer 10.8.0.2/32 scope global tun0<br>       valid_lft forever preferred_lft forever<br></code></pre></td></tr></table></figure><p>如果一切正常的话，雇用服务以便在服务器启动的时候自动启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl <span class="hljs-built_in">enable</span> openvpn@server<br></code></pre></td></tr></table></figure><h3 id="step-ten-创建客户端"><a href="#step-ten-创建客户端" class="headerlink" title="step ten: 创建客户端"></a>step ten: 创建客户端</h3><p>下面我们需要建立一个系统，使我们能够轻松创建客户端配置文件。</p><p>创建客户配置目录结构</p><p>在home目录下创建一个目录结构用来保存文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p ~/client-configs/files<br></code></pre></td></tr></table></figure><p>因为我们的客户端配置文件将嵌入客户密钥，我们应该锁定内部目录的权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 700 ~/client-configs/files<br></code></pre></td></tr></table></figure><p>创建一个基本配置</p><p>下面我们将示例客户端配置拷贝到我们的目录中作为一个基本配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span> /usr/share/doc/openvpn/examples/sample-config-files/client.conf ~/client-configs/base.conf<br></code></pre></td></tr></table></figure><p>打开这个文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/client-configs/base.conf<br></code></pre></td></tr></table></figure><p>首先，定位到remote指令。把这个客户指向到我们的openvpn服务器地址。这应该是你的openvpn服务器公网ip地址。如果你修改了openvpn服务器正在侦听的接口，那么把1194改成你选择的接口：~&#x2F;client-configs&#x2F;base.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">. . .<br><span class="hljs-comment"># The hostname/IP and port of the server.</span><br><span class="hljs-comment"># You can have multiple remote entries</span><br><span class="hljs-comment"># to load balance between the servers.</span><br>remote server_IP_address 1194<br>. . .<br></code></pre></td></tr></table></figure><p>确保协议和你在服务器里配置中使用的一样：~&#x2F;client-configs&#x2F;base.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">proto udp<br></code></pre></td></tr></table></figure><p>下面，删除“；”取消注释user和group指令：~&#x2F;client-configs&#x2F;bash.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Downgrade privileges after initialization (non-Windows only)</span><br>user nobody<br>group nogroup<br></code></pre></td></tr></table></figure><p>找到设置ca，cert，key的指令，注释掉这些指定，因为我们会在文件本身中添加certs和keys：~&#x2F;client-configs&#x2F;base.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># SSL/TLS parms.</span><br><span class="hljs-comment"># See the server config file for more</span><br><span class="hljs-comment"># description.  It&#x27;s best to use</span><br><span class="hljs-comment"># a separate .crt/.key file pair</span><br><span class="hljs-comment"># for each client.  A single ca</span><br><span class="hljs-comment"># file can be used for all clients.</span><br><span class="hljs-comment">#ca ca.crt</span><br><span class="hljs-comment">#cert client.crt</span><br><span class="hljs-comment">#key client.key</span><br></code></pre></td></tr></table></figure><p>修改cipher和auth为我们在&#x2F;etc&#x2F;openvpn&#x2F;server.conf文件中设置的：~&#x2F;client-configs&#x2F;base.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">cipher AES-128-CBC<br>auth SHA256<br></code></pre></td></tr></table></figure><p>下面，在文件中添加key-direction指令。必须设置成1才能使用服务器：~&#x2F;client-configs&#x2F;base.conf</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">key-direction 1<br></code></pre></td></tr></table></figure><p>如果你的客户端运行在linux上并且具有&#x2F;etc&#x2F;openvpn&#x2F;update-resolv-config文件，那么应该从生成的openvpn客户端配置文件取消注释这些行。</p><p>保存文件。</p><p>创建配置生成脚本*</p><p>下面，我们会创建一个简单的脚本，用相关证书、密钥和加密文件来编译我们的基本配置。这会把生成的配置文件放在~&#x2F;client-configs&#x2F;files目录下。</p><p>在~&#x2F;client-configs目录下创建并打开文件make_config.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vim ~/client-configs/make_config.sh<br></code></pre></td></tr></table></figure><p>粘贴以下脚本到这个文件中：~&#x2F;client-configs&#x2F;make_config.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><br><span class="hljs-comment"># First argument: Client identifier</span><br><br>KEY_DIR=~/openvpn-ca/keys<br>OUTPUT_DIR=~/client-configs/files<br>BASE_CONFIG=~/client-configs/base.conf<br><br><span class="hljs-built_in">cat</span> <span class="hljs-variable">$&#123;BASE_CONFIG&#125;</span> \<br>    &lt;(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;&lt;ca&gt;&#x27;</span>) \<br>    <span class="hljs-variable">$&#123;KEY_DIR&#125;</span>/ca.crt \<br>    &lt;(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;&lt;/ca&gt;\n&lt;cert&gt;&#x27;</span>) \<br>    <span class="hljs-variable">$&#123;KEY_DIR&#125;</span>/<span class="hljs-variable">$&#123;1&#125;</span>.crt \<br>    &lt;(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;&lt;/cert&gt;\n&lt;key&gt;&#x27;</span>) \<br>    <span class="hljs-variable">$&#123;KEY_DIR&#125;</span>/<span class="hljs-variable">$&#123;1&#125;</span>.key \<br>    &lt;(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;&lt;/key&gt;\n&lt;tls-auth&gt;&#x27;</span>) \<br>    <span class="hljs-variable">$&#123;KEY_DIR&#125;</span>/ta.key \<br>    &lt;(<span class="hljs-built_in">echo</span> -e <span class="hljs-string">&#x27;&lt;/tls-auth&gt;&#x27;</span>) \<br>    &gt; <span class="hljs-variable">$&#123;OUTPUT_DIR&#125;</span>/<span class="hljs-variable">$&#123;1&#125;</span>.ovpn<br></code></pre></td></tr></table></figure><p>保存并关闭文件。</p><p>通过以下命令把这个脚本文件设置为可执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">chmod</span> 700 ~/client-configs/make_config.sh<br></code></pre></td></tr></table></figure><h3 id="step-eleven-生成客户端配置"><a href="#step-eleven-生成客户端配置" class="headerlink" title="step eleven: 生成客户端配置"></a>step eleven: 生成客户端配置</h3><p>现在可以很容易地生成客户端配置文件。<br>如果你遵守这篇指南，那么在步骤六中通过运行.&#x2F;build-key client1命令，分别创建了一个客户端证书client1.crt和密钥client1.key。我们可以使用创建脚本文件生成配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/client-configs<br>./make_config.sh client1<br></code></pre></td></tr></table></figure><p>如果一切正常的话，那么在~&#x2F;client-configs&#x2F;files目录下，会生成一个client1.ovpn文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">ls</span> ~/client-configs/files<br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">Output<br>client1.ovpn<br></code></pre></td></tr></table></figure><p>把配置文件伟到客户端</p><p>我们需要把客户端配置文件传输到相关设备上。比如，你的本地计算机或者一个移动设备。</p><p>虽然用于完成此传输的程序取决于你的选择和设备的操作系统。但你希望应用程序在后端使用sftp和scp。这将通过加密连接传输客户端的vpn认证文件。</p><p>以下是使用sftp命令传输client1.ovpn的示例。这个命令可以在你的本地计算机（MAC OS X或linux）运行。它把.ovpn文件放到你的主目录中：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sftp sammy@openvpn_server_ip:client-configs/files/client1.ovpn ~/<br></code></pre></td></tr></table></figure><p>当然，你也可以选择其它方式把服务器上的.ovpn文件传到你的本地计算机或或者其它设备中。</p>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>security</tag>
      
      <tag>linux</tag>
      
      <tag>openvpn</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux初步服务配置</title>
    <link href="/2018/08/06/linux%E5%88%9D%E6%AD%A5%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"/>
    <url>/2018/08/06/linux%E5%88%9D%E6%AD%A5%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="配置操作小记"><a href="#配置操作小记" class="headerlink" title="配置操作小记"></a>配置操作小记</h1><p>ubuntu 服务器的初步安全配置，操作记录备忘。</p><span id="more"></span><h2 id="作业环境"><a href="#作业环境" class="headerlink" title="作业环境"></a>作业环境</h2><ul><li>系统版本：ubuntu 16.04</li><li>服务器环境：vps</li></ul><h3 id="step-one-登录"><a href="#step-one-登录" class="headerlink" title="step one -登录"></a>step one -登录</h3><p>通过vps面板提供的服务器相关信息，从终端使用ssh登录到vps：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh root@your_server_ip<br></code></pre></td></tr></table></figure><p>更改vps初始密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">passwd<br></code></pre></td></tr></table></figure><p>确认更变的密码</p><h3 id="step-two-创建新的用户"><a href="#step-two-创建新的用户" class="headerlink" title="step two -创建新的用户"></a>step two -创建新的用户</h3><p>登录root帐号后，我们需要创建一个新用户，如以ian为例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">adduser -d /home/ian -s /bin/bash -m ian<br></code></pre></td></tr></table></figure><p>上述命令中，参数d指定用户的主目录，参数s指定用户的shell，参数m表示如果该目录不存在，则创建该目录。</p><p>更新用户密码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">passwd<br></code></pre></td></tr></table></figure><h3 id="step-three-用户sudo权限"><a href="#step-three-用户sudo权限" class="headerlink" title="step three -用户sudo权限"></a>step three -用户sudo权限</h3><p>给新添加的用户sudo权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">usermod -aG sudo ian<br></code></pre></td></tr></table></figure><h3 id="step-four-添加公钥认证"><a href="#step-four-添加公钥认证" class="headerlink" title="step four -添加公钥认证"></a>step four -添加公钥认证</h3><h4 id="在本地电脑上生成密钥对："><a href="#在本地电脑上生成密钥对：" class="headerlink" title="在本地电脑上生成密钥对："></a>在本地电脑上生成密钥对：</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa_vultr_$(<span class="hljs-built_in">date</span> +%Y-%m-%d) -C <span class="hljs-string">&quot;Vultr key for abc corp clients&quot;</span><br></code></pre></td></tr></table></figure><p>1024 位或低于它的 DSA 和 RSA 加密是很弱的，请不要使用。当考虑 ssh 客户端向后兼容性的时候，请使用 RSA密匙代替 ECDSA 密匙。所有的 ssh 密钥要么使用 ED25519 ，要么使用 RSA，不要使用其它类型。<br>另外一个示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t ed25519 -C <span class="hljs-string">&quot;Login to production cluster at xyz corp&quot;</span><br></code></pre></td></tr></table></figure><h4 id="上传公钥至vps"><a href="#上传公钥至vps" class="headerlink" title="上传公钥至vps"></a>上传公钥至vps</h4><p>使用命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-copy-id -i ~/.ssh/~/.ssh/id_rsa.pub user@host<br>or<br>ssh-copy-id user@remote-server-ip-or-dns-name<br></code></pre></td></tr></table></figure><p>远程主机将用户的公钥，保存在登录后的用户主目录的$HOME&#x2F;.ssh&#x2F;authorized_keys文件中。公钥就是一段字符串，只要把它追加在authorized_keys文件的末尾就行了。</p><p>不使用上面的命令也可以使用以下命令实现：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh user@host <span class="hljs-string">&#x27;mkdir -p .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys&#x27;</span> &lt; ~/.ssh/id_rsa.pub<br></code></pre></td></tr></table></figure><p>这条命令由多个语句组成，依次分解开来看：</p><ul><li>“$ ssh user@host”，表示登录远程主机；</li><li>单引号中的mkdir .ssh &amp;&amp; cat &gt;&gt; .ssh&#x2F;authorized_keys，表示登录后在远程shell上执行的命令：</li><li>“$ mkdir -p .ssh”的作用是，如果用户主目录中的.ssh目录不存在，就创建一个；</li><li>‘cat &gt;&gt; .ssh&#x2F;authorized_keys’ &lt; <del>&#x2F;.ssh&#x2F;id_rsa.pub的作用是，将本地的公钥文件</del>&#x2F;.ssh&#x2F;id_rsa.pub，重定向追加到远程文件authorized_keys的末尾。</li></ul><h4 id="配置密钥登录"><a href="#配置密钥登录" class="headerlink" title="配置密钥登录"></a>配置密钥登录</h4><p>打开远程主机，检查&#x2F;etc&#x2F;ssh&#x2F;sshd_config文件如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">RSAAuthentication <span class="hljs-built_in">yes</span><br>PubkeyAuthentication <span class="hljs-built_in">yes</span><br>AuthorizedKeysFile .ssh/authorized_keys<br></code></pre></td></tr></table></figure><h4 id="重启远程主机的ssh服务"><a href="#重启远程主机的ssh服务" class="headerlink" title="重启远程主机的ssh服务"></a>重启远程主机的ssh服务</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo systemctl restart ssh.service<br></code></pre></td></tr></table></figure><h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>如果在配置过程中更改过ssh的默认端口号，一定要记得在防火墙上放通更变后的端口。以ubuntu为例，放通端口命令如下所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ufw allow 已更变的端口号<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ubuntu</tag>
      
      <tag>ssh</tag>
      
      <tag>vps</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>windows常用命令</title>
    <link href="/2018/08/05/windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2018/08/05/windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="windows-常用命令"><a href="#windows-常用命令" class="headerlink" title="windows 常用命令"></a>windows 常用命令</h1><p>本日志记录一些常用的windows 命令，涉及网络、服务、进程、计划任务等，以备用。</p><span id="more"></span><h2 id="net相关"><a href="#net相关" class="headerlink" title="net相关"></a>net相关</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs bash">netsh wlan show drive  //查看网卡是否具备网络承载能力<br><br>netsh wlan <span class="hljs-built_in">set</span> hostednetwork mode=allow ssid=XXX key=XXX //开启网络承载功能<br><br>netsh wlan start hostednetwork //启用配置<br><br>netsh wlan stop hostednetwork //停用配置<br><br>netsh wlan show hostednetwork //查看已经创建的承载网络<br><br>netsh winsock reset //重置sock<br><br>net user administrator /active:<span class="hljs-built_in">yes</span> //启用administrator<br><br>net start //查看已经雇用的windows服务<br><br>net start dnscache //开启dns缓存<br><br>net stop dnscache //关闭dns缓存<br><br>net share //查看本地共享<br><br>net share share=c:\share //将Ｃ下的share文件夹设置为共享，共享名为share<br><br>net share share /delete //删除共享名为share的共享<br><br>net use //查看已经登录的网络连接<br><br>net use q: \\192.168.11.10\abc abc_passwd /user:abc   //将192.168.11.10下的abc文件映射到本地Q盘，共享使用abc账号／密码登录。<br><br>net use q: /delete /yes     //删除本机Q盘的映射<br><br>net use */y /d //消除全部已经登录的网络会话<br><br>net view //查看本地共享列表<br><br>net user //查看本机用户<br><br>net user administrator //查看本地帐号administrator的信息<br><br>net user dev 123456 /add //添加用户为dev密码为123456<br><br>net user dev localgroup administrator dev /add //将本地用户dev加入administrator组中<br><br>net user dev /del //删除本地用户dev<br></code></pre></td></tr></table></figure><h2 id="进程操作"><a href="#进程操作" class="headerlink" title="进程操作"></a>进程操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">tasklist //查看进程<br><br>taskkill /im notepad.exe //结束名为notepad.exe的进程<br><br>taskkill /pid 1230 /pid 1241 /pid 1252 /t //结束pid为1230、1241、1253的进程及由它启动的子进程<br><br>taskkill /f /im cmd.exe /t //强制结束名为cmd.exe的进程以及由它启动的子进程<br></code></pre></td></tr></table></figure><h2 id="网络操作"><a href="#网络操作" class="headerlink" title="网络操作"></a>网络操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">netstat -a //查看计算机开了哪些端口<br><br>route <span class="hljs-built_in">print</span> //查看路由表<br></code></pre></td></tr></table></figure><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">taskchd.msc //计划任务<br><br>gpedit.msc //组策略<br><br>msconfig //启动项<br><br>diskmgmt.msc //磁盘管理<br><br>tracert IP //路由跟踪<br><br>eventvwr.msc  //windows 日志<br><br>diskpart //磁盘管理<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux常用命令</title>
    <link href="/2018/08/05/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2018/08/05/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="linux-常用命令"><a href="#linux-常用命令" class="headerlink" title="linux 常用命令"></a>linux 常用命令</h1><p>记录linux相关的常用命令，备忘。</p><span id="more"></span><h2 id="一、硬件篇"><a href="#一、硬件篇" class="headerlink" title="一、硬件篇"></a>一、硬件篇</h2><ol><li><p>cpu相关</p><p> <code>lscpu #查看cpu的统计信息</code><br> <code>cat /proc/cpuinfo #查看cpu的详细信息，如cpu的核心相关信息等</code></p></li><li><p>内存相关</p><p> <code>free -m #概要查看内存情况，这里的单位是MB</code><br> <code>cat /proc/meminfo ＃查看内存的详细信息</code></p></li><li><p>磁盘相关</p><p> <code>lsblk #查看硬盘的分区分布</code><br> <code>df -lh #查看各分区的情况</code><br> <code>cat /proc/partitions #查看硬盘的分区</code><br> <code>mount | column -t #查看挂载的分区状态</code></p></li><li><p>网卡相关</p><p> <code>lspci | grep -i &#39;eth&#39;</code><br> <code>ip addr #查看系统的所有网络接口</code></p></li></ol><h2 id="二、软件篇"><a href="#二、软件篇" class="headerlink" title="二、软件篇"></a>二、软件篇</h2><ol><li><p>内核相关</p><p> <code>uname -a #查看版本当前操作系统内核信息</code><br> <code>cat /proc/version #相看当前操作系统版本信息</code><br> <code>cat /etc/redhat-release #readhat系，结果同上</code><br> <code>cat /etc/suse-release #suse系，结果同上</code><br> <code>lsb_release -a #用来查看linux兼容性的发行版本信息</code><br> <code>lsmod #列出加载的内核模块</code></p></li><li><p>网络相关</p><p> <code>ifconf #查看所有网络接口的属性</code><br> <code>iptables -L #查看防火墙设置</code><br> <code>service iptables (start|stop|restart|status) #服务管理命令</code><br> <code>route -n #查看路由表</code><br> <code>netstat -tnlp #查看所有监听的端口</code><br> <code>netstat -antp #查看所有已经建立的连接</code><br> <code>netstat -s #查看网络统计信息进程</code><br> <code>netstat -at #列出所有tcp端口</code><br> <code>netstat -au #列出所有udp端口</code><br> <code>netstat -lt #只列出所有监听tcp端口</code></p><p> 以上命令只适用于旧的network-tool工具集。新的ip命令集不再适用</p></li><li><p>系统相关</p><p> <code>top #查看系统所有进程的详细信息，如cpu、内存等信息</code><br> <code>mount #挂载远程目录、NFS、本地共享目录到linux下</code><br> <code>hostname #查看/修改计算机名</code><br> <code>w #查看活动用户</code><br> <code>id #查看指定用户信息</code><br> <code>last #查看用户登录日志</code><br> <code>crontab -l #查看当前用户的计划任务</code><br> <code>chkconfig --list #列出所有系统服务</code><br> <code>rpm -qa #查看所有安装的软件包</code><br> <code>uptime #查看系统运行时间、用户娄、负载</code></p></li><li><p>文件相关</p><p> <code>ls -lht #列出一个文件夹下所有文件及大小、访问权限</code><br> <code>du -sh &lt;dir#查看指定目录的大小</code><br> <code>du -sh &lt;dir#查看指定目录的大小</code><br> <code>du -lh &lt;dir#查看指定目录各文件的大小</code><br> <code>ln -s #建立软连接</code></p></li><li><p>进程相关</p><p> <code>pstree -p pid #查看一个进程的所有线程</code><br> <code>pstree -a #显示所有进程的所有详细信息，遇到相同进程名可以压缩显示</code><br> <code>ps -ef #查看所有进程</code><br> <code>kill -9 pid #杀死进程</code><br> <code>kill all test #杀死进程</code></p></li><li><p>压缩解压缩相关</p><p> <code>zip -r dir file #净目录dir、文件file等压缩到zip包</code><br> <code>zip -re dir.zip dir file #创建zip包，并加密</code><br> <code>unzip dir zip #解压</code><br> <code>tar -zcvf dir tat.gz dir file #将目录dir、文件file等压缩到tar包</code><br> <code>tar -xf dir.tar.gz #解压</code></p></li><li><p>scp命令</p><p> <code>scp local_file remote_username@remote_ip:remode_dir #拷贝本地文件到远程机器上</code></p><p> <code>scp -f local_dir remote_username@remote_ip:remote_dir #拷贝本地目录至远程机器上</code></p><p> <code>－P 参数为指定远程主机的端口号</code></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>command</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OSI</title>
    <link href="/2018/08/05/OSI/"/>
    <url>/2018/08/05/OSI/</url>
    
    <content type="html"><![CDATA[<h1 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h1><p>OSI七层模型相关的名词解释，纯文字，纯理论，仅记录备忘。</p><span id="more"></span><h2 id="各功能简介"><a href="#各功能简介" class="headerlink" title="各功能简介"></a>各功能简介</h2><h3 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h3><p>物理层位于OSI参考模型的最低层，它直接面向原始比特流的传输；</p><p>　为了实现原始比特流的物理传输，物理层必须解决好包括传输介质、信息类型、数据与信号之间的转换、信号传输中的衰减和噪声等内在的一系列问题。</p><p>另外，物理层标准要给出关于物理接口的机械、电气、功能和规程特性，以便于不同的厂商既能够根据公认的标准各自独立的制造设备，又能使各个厂商的产品能够相互兼容。</p><h3 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h3><p>　在物理层发送和接收数据的过程中，会出现一些物理层自己不能解决的问题。</p><p>　例如，当两个节点同时试图在一条线路上发数据时该如何处理？节点如何知道它所接收的数据是否正确，如果噪声　改变了一个分级的目标地址，节点如何察觉它丢失了本应收到的分级呢？这些都是数据链路层所必须负责的工作。</p><p>数据链路层涉及相邻节点之间的可靠传输，数据链路层通过加强物理层传输原始比特的功能，使之对网络层表现为一条无错线路。</p><p>　为了能够实现相邻节点之间的无差错的数据传送，数据链路层在数据传输过程中提供了确认、差错控制和流量控制等机制。</p><h3 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h3><p>网络中的两台计算机进行通信，中间可能要经过许多节点甚至不同的通信子网。网络层的任务就是在通信子网中选择一条合适的路径，使发送端传输层所传下来的数据能够通过所选择的路径到目的端。</p><p>在确定了目标节点的位置后，网络层还要负责引导数据包正确的通过网络，找到通过网络路径的最优路径，即路由选择。</p><p>另外网络层还需要解决异构网络互连问题。</p><h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p>传输层的功能是在两个节点建立、维护和释放面向用户的链接。</p><p>它是在传输连接的基础上建立会话连接，并进行数据交换管理，允许数据进行单工、半双工、全双工的传送。会话层提供了令牌管理和同步两种服务功能。</p><h3 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h3><p>表示层以下的各层只关心可靠的数据传输，而表示层关心的是所传输数据的语义和语法以。</p><p>　它主要涉及处理在两个通信之间所交换信息的表示方式，包括数据格式变换，数据加密与解密，数据压缩与恢复等功能。</p><h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p>应用层是OSI参考模型的最高层，负责为用户的应用程序提供网络服务。</p><p>与OSI其它层不同的是，它不为任何其它OSI层提供服务，而只是为OSI模型以外的应用程序提供服务。包括为相互通信的应用程序或进行之间那边拉、进行同步，建立关于错误纠正和控制数据完整性过程的协商等。应用层还包含大量的应用协议，如分布式数据库的访问、文件的交换、电子邮件、虚拟终端等。</p><p>其中物理层、数据链路层和网络层通常被称为媒体层，是网络工程师所研究的对象；传输层、会话层、表示层和应用层则被称为主机层，是用户所面向和关心的内容。</p><ul><li>http协议–应用层</li><li>tcp协议–传输层</li><li>ip协议–网络层</li></ul><p>三层没有本质上的可比性，何况http协是基于tcp连接的。</p><p>TCP&#x2F;IP是传输层协议，主要解决数据如何在网络中传输；而http是应用层协议，主要解决如何包装数据。我们在传输数据时，可以只使用传输层（TCP&#x2F;IP），但那样的话，由于没有应用层，便无法识别数据内容，如果想要使传输的数据有意义，则必须使用应用层协议，应用层协议有很多，有http、ftp、telnet等等，也可以自己定义应用层协议。</p><p>WEB使用http作为传输协议，以封装http文本信息，然后使用tcp&#x2F;ip做传输层协议将它发送到网络上。socket是对tcp&#x2F;ip协议的封装，socket本身不是协议，而是一个调用接口（api），通过socket，我们才能使用TCP&#x2F;IP协议。</p><h2 id="TCP-x2F-IP模型"><a href="#TCP-x2F-IP模型" class="headerlink" title="ＴCP&#x2F;IP模型"></a>ＴCP&#x2F;IP模型</h2><p>TCP&#x2F;IP模型是由美国国防部创建的，所以有时又称DoD（Department of Defense）模型。TCP&#x2F;IP模型分为四层，由下而上分别为网络访问层、网际层、传输层、应用层。</p><p>应指出的是，TCP&#x2F;IP是OSI模型之前的产物，所以两者不存在严格的层对应关系。在TCP&#x2F;IP模型中不存在与OSI的物理层与数据链路层相对应的部分。相反，TCP&#x2F;IP的主要目标是致力于异构网络的互连，所以在OSI的物理层与数据链路层相对应的部分没有作任何限定。</p><p>在TCP&#x2F;IP模型中，网络访问层是TCP&#x2F;IP模型的最低层，负责从网际层将来的IP数据报并将IP数据报通过底层物理网络发送出去。或者从底层物理网络上接收物理帧，抽出IP数据报，交给互联网层。</p><p>网络访问层使采用不同技术和网络硬件的网络之间能够互联，它包括属于操作系统的设驱动器和计算机网络接口卡，以处理具体的硬件物理接口。</p><p>网际层负责独立地将分组从源主机送往目标主机，涉及为分级提供最佳路径的选择和交换功能。并使这一过程与它们所经过的路径和网络无关。</p><p>这好比你寄信时，你并不需要知道它是如何到达目的地的，而只关心它是否到达了。TCP&#x2F;IP模型的互联网层在功能上非常类似于OSI参考模型中的网络层。</p><p>传输层的作用与OSI参考模型中传输层的作用是类似的，即在源结点的两具对等实体之间提供可靠的端到端的数据通信。为保证数据传输的可靠性，传输层协议也提供了确认、差错控制和流量控制等机制。</p><p>另外，由于一般的计算机中，常常是多个应用程序同时访问网络，所以传输层还要提供不同应用程序的标识。</p><p>应用层涉及为用户提供网络应用，并为这些应用提供网络支撑服务。由于TCP&#x2F;IP将所有的应用相关的内容都有归为一层，所以在应用层要处理高层协议、数据表达和对话控制等任务。</p><h2 id="OSI模型和TCP-x2F-IP模型的区别"><a href="#OSI模型和TCP-x2F-IP模型的区别" class="headerlink" title="OSI模型和TCP&#x2F;IP模型的区别"></a>OSI模型和TCP&#x2F;IP模型的区别</h2><p>OSI模型包括了七层，而TCP&#x2F;IP模型只有四层。虽然它们具有功能相当的网络层、传输层和应用层，但其它层并不相同。</p><p>TCP&#x2F;IP模型中没有专门的表示层和会话层，它将与这两层相关的表达、编码和会话控制等功能包含到了应用层中去完成。另外，TCP&#x2F;IP模型还将OSI的数据链路层和物理层包括到一个网络访问层中。</p><p>OSI模型在网络层支持无连接和面向链接的两种服务，而在传输层公支持面向连接的服务。TCP&#x2F;IP模型在互联网层则只支持无连接的一种服务，但在传输层支持面向连接和无连接两种服务。</p><p>TCP&#x2F;IP由于有较少的层次，因而显得更简单，并且作为从因特网（INTERNET）上发展起来的协议，已经成为了网络互连的事实标准。但是，目前还没有实际网络是建立在OSI七层模型基础上的，OSI仅仅作为参考被广泛使用。</p><h2 id="http和socket连接的区别"><a href="#http和socket连接的区别" class="headerlink" title="http和socket连接的区别"></a>http和socket连接的区别</h2><h3 id="短连接"><a href="#短连接" class="headerlink" title="短连接"></a>短连接</h3><p>连接–传输数据–关闭连接<br>http是无状态的，浏览器和服务器每进行一次http操作，就建立一次连接，但任务结束就中断连接。<br>也可以说：短连接是指socket连接后发送后接收数据完成后就马上断开连接。</p><h3 id="长连接"><a href="#长连接" class="headerlink" title="长连接"></a>长连接</h3><p>连接–传输数据–保持连接–传输数据–。。。。–关闭连接<br>长连接指建立socket连接后不管是否使用都保持连接，但安全性较差。</p><h3 id="http长连接"><a href="#http长连接" class="headerlink" title="http长连接"></a>http长连接</h3><p>http也是可以建立长连接的，使用connection:keep-alive，http 1.1默认进行持久连接。http 1.1和http 1.0相比较而言，最大的区别就是增加了拷久连接支持（最新的HTTP1.1可以显示指定keep-live），但还是无状态的，或者说是不可以信任的。</p><h3 id="什么时候用长链接，短链接"><a href="#什么时候用长链接，短链接" class="headerlink" title="什么时候用长链接，短链接"></a>什么时候用长链接，短链接</h3><p>长连接多用于操作频繁，点对点的通讯，而且连连接数不能太多的情况。每个TCP连接都需要三步握手，这需要时间，如果每个操作都是先连接，再操作的话，那么处理速度就会降低很多，所以每个操作完后都不断开，次处理时直接发送数据包就ok了。不用建立TCP连接。例如：数据库的连接用长连接，如果用短连接频繁的通信会造成socket错误，而且频繁的socket创建也是对资源的浪费。</p><p>而像ＷEB网站的http服务一般都是用短连接，因为长连接对于服务端来说会耗费一定资源，而像WEB网站这么频繁的成千上万甚至上亿客户端的连接用短连接会更省一些资源，如果用长连接，而且同时成千上万的用户，那可想而知吧。所以并发量大，但每个用户无需频繁操作情况下用短连接好。</p><p>总之，长连接和短连接的选择要视情况而定。</p><h4 id="http连接"><a href="#http连接" class="headerlink" title="http连接"></a>http连接</h4><p>HTTP协议即超文本传输协议<br>（Ｈypertext Transfer Protocol），是web联网的基础，也是手机联网常用的协议之一，HTTP协议也是建立在TCP协议之上的一种应用。<br>HTTP连接最显著的特点是客户端发送的每次请求都需要服务器回头响应，在请求结束之后，会主动释放连接。从建立连接到关闭连接的过程称为这“一次连接”。</p><p>a) 在HTTP1.0中，客户端的每一次请求都要求建立一次单独的连接，在处理完本次请求后，就自动释放连接。</p><p>b) 在HTTP１.1中则可以在一次连接中处理多个请求，并且请求可以多次重叠进行，不需要等待一个请求结束后再发送下一个请求。</p><p>通常的做法是即使不需要获得任何数据，客户端也保持每隔一断固定的时间向服务器发送一次“保持连接”的请求，服务器在收到该请求后，对客户端进行回复，表明知道客户端“在线”。若服务器长时间无法收到客户端的请求，则认为客户端”下线“，若客户端长时间无法收到服务器的回复，则认为网络已经断开。</p><h4 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h4><p>socket是应用层与TCP&#x2F;IP协议簇通信的中间软件抽象层，它是一组接口。首先让我们通过一组图知道socket在哪里？</p><p>a)套接字（socket）概念</p><p>套接字（socket）是通信的基石，是支持TCP&#x2F;IP协议的网络通信的基本操作单元。它是网络通信过程中端点的抽象表示，包含进行网络通信必须的五种信息：连接使用的协议、本机的IP地址、本地进程的协议端口、远程主机的IP地址、远程进程的协议端口。</p><p>应用层通过传输层进行数据通信时，TCP会遇到同时为多个应用程序进程提供并发服务的问题。多个TCP连接或多个应用程序进程可能需要通过同一个TCP协议端口传输数据。</p><p>为了区别不同应用程序进程和连接，许多计算机操作系统为应用程序与TCP&#x2F;IP协议交互提供了套接字（socket）接口。应用层可以和传输层通过socket接口，区分来自不同应用程序或网络连接的通信，实现数据传输的并发服务。</p><p>b)建立socket连接</p><p>建立socket连接至少需要一对套接字，其中一个运行于客户端，称为clientsocket，另一个运行于服务端，称为serversocket。</p><p>套接字之间的连接过程分为三个步骤：服务器监听，客户端请求，连接确认。</p><p>服务器监听：服务器端套接字并不定位具体的客户端套接字，而是处于等待连接状态，实时监控网络状态，等待客户端的连接请求。</p><p>客户端请求：指客户端的套接字提出连接请求，要连接的目标服务器的套接字。为此客户端的套接字必须首先描述第要连接的服务器的套接字，指出服务器端套接字的地址和端口号，然后就向服务器套接字提出连接请求。</p><p>连接确认：当服务器端套接字监听到或者说接收到客户端套接字的连接请求时，就响应客户端套接字的请求，建立一个新的线程，把服务器端套接字的描述发给客户端，一旦客户端确认了描述，双方就正式建立连接。而服务器端套按字继续处于监听状态，继续接收其它客户端的套接字请求。</p><p>c)socket连接与tcp连接</p><p>创建socket连接时，可以指定使用的传输层协议，socket可以支持不同的传输层协议（TCP或UDP），当使用TCP协议进行连接时，该socket就是TCP连接。</p><p>d)socket连接与http连接</p><p>由于通常情况下socket连接就是tcp连接，因此socket连接一旦建立，通信双方即可始相互发送数据内容，走在到双方连接断开。<br>但在实际网络应用中，客户端到服务器之间的通信往往需要穿戴多个中间节点，例如路由器、网关、防火墙等，大部分防火墙默认会关闭长时间处于非活跃状态的连接而导致socket连接断边，因此需要通过轮询告诉网络，该连接处于活跃状态。</p><p>而http连接使用的是“请求－响应”的方式，不仅在请求时需要建立连接，而且需要客户端向服务器发出请求后，服务器端才能回复数据。</p><p>很多情况下，需要服务器端主动向客户端推送数据，保持客户端与服务器数据的实时同步。</p><p>此时若双方建立的是socket连接，服务器就可以直接将数据传送给客户端；若双方建立的是http连接，则服务器需要等到客户端发送一次请求后才能将数据伟回到客户端，因此，客户端定时向服务器端发送连接请𣷌，不仅可以保持在线，现时也是在“询问”服务器是否有新数据，如果有就将数据伟给客户端。　</p><h3 id="tcp和udp的区别"><a href="#tcp和udp的区别" class="headerlink" title="tcp和udp的区别"></a>tcp和udp的区别</h3><p>tcp:tcp是面向连接的、传输可靠（要保证数据正确性和保证数据顺序）、用于传输大量数据（流模式）、速度慢，建立连接需要开销较多（时间、系统资源等）。</p><p>tcp是一种流模式的协议，是面向连接的，也就是说，在连接持续的过程中，socket中收到的数据都是同同一台主机发出的（支持不考虑），因此，知道保证数据是有序静观默察就行，至于每次读取多少数据不关心。</p><p>udp:udp面向非连接，传输不可靠、用于传输少量数据（数据包模式）、速度快。</p><p>关于tcp是一程流模式的协议，udp是一种数据报模式的协议，这里需要说明一下，tcp是面向连接的，４也就是说，在连接持续的过程中，socket中收到的数据都是同一台主机发出的（劫持不考虑），因此知道保证数据是有序的到达就行了，至于每次读取多少数据自已看着办。</p><p>而udp是无连接的协议，也就是说，只要知道接收端的ip和端口，且网络是可达的，任何主机都可以身接收端发送数据。这个时候，如果一次读取超过一个报文的数据，则会乱套。比如Ａ主机发送了报文P1，主机Ｂ发送了报文P2，如果能够读取超过一个报文的数据，那么就会将P1和P2的数据合并了一起，这样的数据是没有单方的。</p><h3 id="TCP三次握手和四次挥手"><a href="#TCP三次握手和四次挥手" class="headerlink" title="TCP三次握手和四次挥手"></a>TCP三次握手和四次挥手</h3><p>相对于socket开发者，tcp创建过程和连接拆除过程是由tcp&#x2F;ip协议栈自动创建的。因此开发者并不需要控制这个过程。但是对于理解tcp底层动作机制，相当有帮助。因此这里详细的解释一下这两个过程。</p><h3 id="TCP三次握手"><a href="#TCP三次握手" class="headerlink" title="TCP三次握手"></a>TCP三次握手</h3><p>所谓三次扬（three-way handshake），是指建立一个TCP连接时，需要客户端和服务器总共发送３个包。</p><p>三次扬的目的是连接服务器指定端口，建立tcp连接，并同步连接双方的序列号我确认号并交换tcp端口大小信息，在socket编程中，客户端执行connect()时，将触发三次握手。</p><p>产自要了解一下几个标志，SYN（synchronous），同步标志，ACK（acknowledgement），即确认标志，seq应该就是sequence number，序列号的意思，另外还有四次扬的fin，应该是final，表示结束标志。</p><p>第一次握手：客户端发送一个tcp的syn标志位置１的包指明客户打算连接的服务器的端口，以及初始序号x，保存在包头的序号号字段里。</p><p>第二次握手：服务器发回确认包ack应答，即syn标志位和ack标志位均为１，同时将确认序号设置为客户的序号加１，即x+1。</p><p>第三次扬：客户端再次发送确认包ack，syn标志为为0，ack标志位为１。并且把服务器发来的ack序号字段+1，放在确认字段中发送第给对方，并且在数据段放写序号+1。</p><h3 id="TCP四次挥手"><a href="#TCP四次挥手" class="headerlink" title="TCP四次挥手"></a>TCP四次挥手</h3><p>TCP的连接的拆除需要发送四个包，因此称为四次挥手（four-way handshake）。客户端或服务器均可主动发起挥手动作，在socket纺和中，任何一方执行close()操作即可产生挥手操作。</p><p>其实有一个问题，为什么连接的时候是三次握手，关闭的时候却是四次挥手？</p><p>因为当server端收到client端的syn连接请求报文后，可以直接发送syn+ack报文。其中ack报文是用来应答的，syn报文是用来同步的。</p><p>但是关闭连接时，当server端收到fin报文时，很可能并不会立即关闭socket，所以只能先回复一个ack报文，告诉client端，你发送的fin报文我收到了。只有等到我的server端报文都发送完成了，我才能发送fin报文，因此不能一起发送。帮需要四次挥手。</p>]]></content>
    
    
    <categories>
      
      <category>network</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OSI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>iproute2</title>
    <link href="/2018/08/05/iproute2/"/>
    <url>/2018/08/05/iproute2/</url>
    
    <content type="html"><![CDATA[<h1 id="iproute2"><a href="#iproute2" class="headerlink" title="iproute2"></a>iproute2</h1><p>记录iproute2 常用的操作命令，备忘。</p><span id="more"></span><h2 id="iproute2常用命令"><a href="#iproute2常用命令" class="headerlink" title="iproute2常用命令"></a>iproute2常用命令</h2><ul><li>显示所有已连接的接口</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ip <span class="hljs-built_in">link</span> show<br></code></pre></td></tr></table></figure><ul><li>停用或启用接口</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ip <span class="hljs-built_in">link</span> <span class="hljs-built_in">set</span> down wlp4s0<br>sudo ip <span class="hljs-built_in">link</span> <span class="hljs-built_in">set</span> up wlp4s0<br></code></pre></td></tr></table></figure><ul><li>为网络接口分配IPv4地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ip addr add 192.168.31.123/24 dev wlp4s0<br><span class="hljs-comment"># 可以同时给一个接口分配多个IP(ifconfig IP别名)例如</span><br>sudo ip addr add 192.168.31.124/24 dev wlp4s0<br>sudo ip addr add 192.168.31.125/24 dev wlp4s0<br></code></pre></td></tr></table></figure><ul><li>移除网络接口IPv4地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ip addr del 192.168.31.123/24 dev wlp4s0<br></code></pre></td></tr></table></figure><ul><li>显示网络接口的IPv4地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ip addr show dev wlp4s0<br></code></pre></td></tr></table></figure><ul><li>为网络接口分配IPv6地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ip -6 addr add 2003:0db5:0:f102::1/64 dev wlp4s0<br></code></pre></td></tr></table></figure><p>添加多条同上</p><ul><li>显示网络接口的IPv6地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ip -6 addr show dev wlp4s0<br></code></pre></td></tr></table></figure><ul><li>移除网络设备的IPv6地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ip -6 addr del 2003:0db5:0:f102::1/64 dev wlp4s0<br></code></pre></td></tr></table></figure><p>删除多条同上</p><ul><li>更改网络接口的MAC地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ip <span class="hljs-built_in">link</span> <span class="hljs-built_in">set</span> dev wlp4s0 address 08:00:27:75:2a:67<br></code></pre></td></tr></table></figure><p>适用范围，如更换计算网络或主板等情况下，需要更改MAC地址，更改请需要停用网络接口，操作参考第二条内容</p><ul><li>查看IP路由表</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ip route show<br></code></pre></td></tr></table></figure><ul><li>更改默认路由</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ip route add defautl via 192.168.31.1 wlp4s0<br>sudo ip route replace default via 192.168.31.2 dev wlp4s0<br></code></pre></td></tr></table></figure><ul><li>添加静态路由和移除静态路由</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ip route add 172.16.32.0/24 via 172.16.32.1 dev wlp4s0<br>sudo ip route del 172.16.32.0/24<br></code></pre></td></tr></table></figure><ul><li>查看管套字统计信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ss<br>ss -l<br></code></pre></td></tr></table></figure><ul><li>查看arp表</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ip neigh<br></code></pre></td></tr></table></figure><ul><li>添加或删除静态arp表</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ip neigh add 192.168.1.100 lladdr 00:0c:29:c0:5a:ef dev wlp4s0<br>sudo ip neigh del 192.168.1.100 dev wlp4s0<br></code></pre></td></tr></table></figure><ul><li>添加或删除多播地址</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo ip maddr add 33:44:00:00:00:01 dev wlp4s0<br>sudo ip maddr del 33:44:00:00:00:01 dev wlp4s0<br>ip maddr list dev wlp4s0<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>iproute2</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
